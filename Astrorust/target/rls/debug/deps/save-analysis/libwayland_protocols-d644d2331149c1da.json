{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13","program":"/home/clozed/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_protocols","/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"client\"","--cfg","feature=\"native_client\"","--cfg","feature=\"native_lib\"","--cfg","feature=\"unstable_protocols\"","--cfg","feature=\"wayland-client\"","--cfg","feature=\"wayland-sys\"","-C","metadata=d644d2331149c1da","-C","extra-filename=-d644d2331149c1da","--out-dir","/home/clozed/astrorust/Astrorust/target/rls/debug/deps","-L","dependency=/home/clozed/astrorust/Astrorust/target/rls/debug/deps","--extern","bitflags=/home/clozed/astrorust/Astrorust/target/rls/debug/deps/libbitflags-b7cb6f2855b37747.rmeta","--extern","wayland_client=/home/clozed/astrorust/Astrorust/target/rls/debug/deps/libwayland_client-930924688b8a0582.rmeta","--extern","wayland_commons=/home/clozed/astrorust/Astrorust/target/rls/debug/deps/libwayland_commons-8d2b6b118ab4bc7c.rmeta","--extern","wayland_sys=/home/clozed/astrorust/Astrorust/target/rls/debug/deps/libwayland_sys-092b953f86d0e527.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/clozed/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/clozed/astrorust/Astrorust/target/rls/debug/deps/libwayland_protocols-d644d2331149c1da.rmeta"},"prelude":{"crate_id":{"name":"wayland_protocols","disambiguator":[11956710537747746743,9503583958703512311]},"crate_root":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src","external_crates":[{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":15,"id":{"name":"wayland_client","disambiguator":[8547408669730713876,8048898669743412736]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":16,"id":{"name":"bitflags","disambiguator":[3913220441560649978,12679321023898702919]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[1898386742133263843,6720254744606073441]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":18,"id":{"name":"nix","disambiguator":[16475633153432687027,16538116030770940121]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[16691520207553097855,5782485460756469676]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":20,"id":{"name":"void","disambiguator":[7642533320675662958,14978542871366400588]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":21,"id":{"name":"wayland_commons","disambiguator":[12178675760657671114,17480992905727552774]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":22,"id":{"name":"wayland_sys","disambiguator":[12844188235442221922,853194889467253449]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":23,"id":{"name":"dlib","disambiguator":[2993169467917869454,5056693300844790419]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":24,"id":{"name":"libloading","disambiguator":[4497213788789586463,1673426576200228610]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[10487014861562282928,9077454618309915830]}},{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","num":26,"id":{"name":"lazy_static","disambiguator":[4429584372382556774,11934523189258823667]}}],"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":0,"byte_end":1244,"line_start":1,"line_end":43,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7376,"byte_end":7396,"line_start":24,"line_end":24,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7423,"byte_end":7442,"line_start":25,"line_end":25,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7633,"byte_end":7653,"line_start":37,"line_end":37,"column_start":23,"column_end":43},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":310}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7839,"byte_end":7859,"line_start":50,"line_end":50,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":485}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7886,"byte_end":7905,"line_start":51,"line_end":51,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":485}},{"kind":"Use","ref_id":{"krate":15,"index":622},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7934,"byte_end":7955,"line_start":52,"line_end":52,"column_start":27,"column_end":48},"alias_span":null,"name":"wl_keyboard_interface","value":"","parent":{"krate":0,"index":485}},{"kind":"Use","ref_id":{"krate":15,"index":622},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8162,"byte_end":8183,"line_start":65,"line_end":65,"column_start":27,"column_end":48},"alias_span":null,"name":"wl_keyboard_interface","value":"","parent":{"krate":0,"index":944}},{"kind":"Use","ref_id":{"krate":15,"index":613},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8211,"byte_end":8231,"line_start":66,"line_end":66,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_pointer_interface","value":"","parent":{"krate":0,"index":944}},{"kind":"Use","ref_id":{"krate":15,"index":629},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8257,"byte_end":8275,"line_start":67,"line_end":67,"column_start":24,"column_end":42},"alias_span":null,"name":"wl_touch_interface","value":"","parent":{"krate":0,"index":944}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8752,"byte_end":8769,"line_start":84,"line_end":84,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":1152}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8797,"byte_end":8817,"line_start":85,"line_end":85,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":1152}},{"kind":"Use","ref_id":{"krate":15,"index":520},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8998,"byte_end":9017,"line_start":97,"line_end":97,"column_start":22,"column_end":41},"alias_span":null,"name":"wl_buffer_interface","value":"","parent":{"krate":0,"index":1353}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9256,"byte_end":9276,"line_start":109,"line_end":109,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":1638}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10149,"byte_end":10169,"line_start":132,"line_end":132,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":1939}},{"kind":"Use","ref_id":{"krate":15,"index":613},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10197,"byte_end":10217,"line_start":133,"line_end":133,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_pointer_interface","value":"","parent":{"krate":0,"index":1939}},{"kind":"Use","ref_id":{"krate":15,"index":637},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10244,"byte_end":10263,"line_start":134,"line_end":134,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_region_interface","value":"","parent":{"krate":0,"index":1939}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10469,"byte_end":10489,"line_start":147,"line_end":147,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":2284}},{"kind":"Use","ref_id":{"krate":15,"index":613},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10517,"byte_end":10537,"line_start":148,"line_end":148,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_pointer_interface","value":"","parent":{"krate":0,"index":2284}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10743,"byte_end":10760,"line_start":161,"line_end":161,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":2573}},{"kind":"Use","ref_id":{"krate":15,"index":613},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11885,"byte_end":11905,"line_start":187,"line_end":187,"column_start":23,"column_end":43},"alias_span":null,"name":"wl_pointer_interface","value":"","parent":{"krate":0,"index":2941}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16762,"byte_end":16779,"line_start":276,"line_end":276,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":3127}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16807,"byte_end":16827,"line_start":277,"line_end":277,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":3127}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16762,"byte_end":16779,"line_start":276,"line_end":276,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":3648}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16807,"byte_end":16827,"line_start":277,"line_end":277,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":3648}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17016,"byte_end":17033,"line_start":290,"line_end":290,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":4598}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17061,"byte_end":17081,"line_start":291,"line_end":291,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":4598}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17016,"byte_end":17033,"line_start":290,"line_end":290,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":5058}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17061,"byte_end":17081,"line_start":291,"line_end":291,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":5058}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19433,"byte_end":19453,"line_start":349,"line_end":349,"column_start":23,"column_end":43},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":5755}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19433,"byte_end":19453,"line_start":349,"line_end":349,"column_start":23,"column_end":43},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":6089}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20617,"byte_end":20636,"line_start":377,"line_end":377,"column_start":22,"column_end":41},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":6424}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21059,"byte_end":21079,"line_start":394,"line_end":394,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":6621}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21106,"byte_end":21125,"line_start":395,"line_end":395,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":6621}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21150,"byte_end":21167,"line_start":396,"line_end":396,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":6621}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21059,"byte_end":21079,"line_start":394,"line_end":394,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":7118}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21106,"byte_end":21125,"line_start":395,"line_end":395,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":7118}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21150,"byte_end":21167,"line_start":396,"line_end":396,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":7118}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22929,"byte_end":22946,"line_start":436,"line_end":436,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":8209}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22974,"byte_end":22994,"line_start":437,"line_end":437,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":8209}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24326,"byte_end":24343,"line_start":34,"line_end":34,"column_start":27,"column_end":44},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":8387}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24717,"byte_end":24736,"line_start":49,"line_end":49,"column_start":29,"column_end":48},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":8772}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25062,"byte_end":25079,"line_start":64,"line_end":64,"column_start":27,"column_end":44},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":9014}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25111,"byte_end":25131,"line_start":65,"line_end":65,"column_start":30,"column_end":50},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":9014}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25162,"byte_end":25181,"line_start":66,"line_end":66,"column_start":29,"column_end":48},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":9014}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25536,"byte_end":25555,"line_start":81,"line_end":81,"column_start":29,"column_end":48},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":9307}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26016,"byte_end":26035,"line_start":105,"line_end":105,"column_start":29,"column_end":48},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":9692}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26067,"byte_end":26087,"line_start":106,"line_end":106,"column_start":30,"column_end":50},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":9692}},{"kind":"Use","ref_id":{"krate":15,"index":520},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26560,"byte_end":26579,"line_start":124,"line_end":124,"column_start":29,"column_end":48},"alias_span":null,"name":"wl_buffer_interface","value":"","parent":{"krate":0,"index":10099}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26610,"byte_end":26629,"line_start":125,"line_end":125,"column_start":29,"column_end":48},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":10099}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":26971,"byte_end":26991,"line_start":11,"line_end":11,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":10426}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27018,"byte_end":27037,"line_start":12,"line_end":12,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":10426}},{"kind":"Use","ref_id":{"krate":15,"index":602},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27286,"byte_end":27303,"line_start":26,"line_end":26,"column_start":23,"column_end":40},"alias_span":null,"name":"wl_seat_interface","value":"","parent":{"krate":0,"index":10660}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27331,"byte_end":27351,"line_start":27,"line_end":27,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":10660}},{"kind":"Use","ref_id":{"krate":15,"index":634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27378,"byte_end":27397,"line_start":28,"line_end":28,"column_start":25,"column_end":44},"alias_span":null,"name":"wl_output_interface","value":"","parent":{"krate":0,"index":10660}},{"kind":"Use","ref_id":{"krate":15,"index":591},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27700,"byte_end":27720,"line_start":43,"line_end":43,"column_start":26,"column_end":46},"alias_span":null,"name":"wl_surface_interface","value":"","parent":{"krate":0,"index":11625}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":1242,"byte_end":1243,"line_start":43,"line_end":43,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"xdg_shell","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":0,"byte_end":1244,"line_start":1,"line_end":43,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":29},{"krate":0,"index":38},{"krate":0,"index":42}],"decl_id":null,"docs":" This crate provides bindings to the official wayland protocol extensions\n provided in https://cgit.freedesktop.org/wayland/wayland-protocols","sig":null,"attributes":[{"value":"! This crate provides bindings to the official wayland protocol extensions","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"! provided in https://cgit.freedesktop.org/wayland/wayland-protocols","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":77,"byte_end":147,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":148,"byte_end":151,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! These bindings are built on top of the crates wayland-client and wayland-server.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":152,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":237,"byte_end":240,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Each protocol module contains a `client` and a `server` submodules, for each side of the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":241,"byte_end":333,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"! protocol. The creation of these modules (and the dependency on the associated crate) is","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":334,"byte_end":425,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"! controlled by the two cargo features `client` and `server`.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":426,"byte_end":489,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":490,"byte_end":493,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The cargo feature `unstable_protocols` adds an `unstable` module, containing bindings","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":494,"byte_end":583,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"! to protocols that are not yet considered stable. As such, no stability guarantee is","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":584,"byte_end":671,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"! given for these protocols.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":672,"byte_end":702,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":703,"byte_end":706,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Some protocols require unstable rust features, the inclusion of them is controlled","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":707,"byte_end":793,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"! by the cargo feature `nightly`.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":794,"byte_end":829,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"warn(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":831,"byte_end":853,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unstable","qualname":"::unstable","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" Unstable protocols from wayland-protocols","sig":null,"attributes":[{"value":"cfg(feature = \"unstable_protocols\")","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":1142,"byte_end":1180,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"! Unstable protocols from wayland-protocols","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6557,"byte_end":6602,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6603,"byte_end":6606,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The protocols described in this module are experimental and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6607,"byte_end":6670,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! backward incompatible changes may be made. Backward compatible","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6671,"byte_end":6737,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"! changes may be added together with the corresponding interface","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6738,"byte_end":6804,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"! version bump.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6805,"byte_end":6822,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6823,"byte_end":6826,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Backward incompatible changes are done by bumping the version","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6827,"byte_end":6892,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"! number in the protocol and interface names and resetting the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6893,"byte_end":6957,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"! interface version. Once the protocol is to be declared stable,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":6958,"byte_end":7024,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"! the 'z' prefix and the version number in the protocol and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7025,"byte_end":7086,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"! interface names are removed and the interface version number is","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7087,"byte_end":7154,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"! reset.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7155,"byte_end":7165,"line_start":13,"line_end":13,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7212,"byte_end":7228,"line_start":17,"line_end":17,"column_start":9,"column_end":25},"name":"fullscreen_shell","qualname":"::unstable::fullscreen_shell","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Fullscreen shell protocol\n","sig":null,"attributes":[{"value":"! Fullscreen shell protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7235,"byte_end":7264,"line_start":18,"line_end":18,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::fullscreen_shell::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":83},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_interfaces.rs","byte_start":6586043,"byte_end":6586075,"line_start":17,"line_end":17,"column_start":16,"column_end":48},"name":"zwp_fullscreen_shell_v1_requests","qualname":"::unstable::fullscreen_shell::v1::generated::c_interfaces::zwp_fullscreen_shell_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":85},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_interfaces.rs","byte_start":6586833,"byte_end":6586863,"line_start":36,"line_end":36,"column_start":16,"column_end":46},"name":"zwp_fullscreen_shell_v1_events","qualname":"::unstable::fullscreen_shell::v1::generated::c_interfaces::zwp_fullscreen_shell_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":87},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_interfaces.rs","byte_start":6587073,"byte_end":6587106,"line_start":41,"line_end":41,"column_start":16,"column_end":49},"name":"zwp_fullscreen_shell_v1_interface","qualname":"::unstable::fullscreen_shell::v1::generated::c_interfaces::zwp_fullscreen_shell_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":88},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_interfaces.rs","byte_start":6587424,"byte_end":6587468,"line_start":49,"line_end":49,"column_start":16,"column_end":60},"name":"zwp_fullscreen_shell_mode_feedback_v1_events","qualname":"::unstable::fullscreen_shell::v1::generated::c_interfaces::zwp_fullscreen_shell_mode_feedback_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":90},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_interfaces.rs","byte_start":6588097,"byte_end":6588144,"line_start":66,"line_end":66,"column_start":16,"column_end":63},"name":"zwp_fullscreen_shell_mode_feedback_v1_interface","qualname":"::unstable::fullscreen_shell::v1::generated::c_interfaces::zwp_fullscreen_shell_mode_feedback_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6590212,"byte_end":6590235,"line_start":2,"line_end":2,"column_start":9,"column_end":32},"name":"zwp_fullscreen_shell_v1","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":11899},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":253},{"krate":0,"index":267},{"krate":0,"index":265},{"krate":0,"index":263},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":109},{"krate":0,"index":268},{"krate":0,"index":291},{"krate":0,"index":289},{"krate":0,"index":287},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":112},{"krate":0,"index":292},{"krate":0,"index":303},{"krate":0,"index":301},{"krate":0,"index":299},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":130},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":172},{"krate":0,"index":177},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":"displays a single surface per output","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6591888,"byte_end":6591902,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"ArbitraryModes","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Capability::ArbitraryModes","value":"Capability::ArbitraryModes","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":"compositor is capable of almost any output mode\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6591974,"byte_end":6591985,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"name":"CursorPlane","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Capability::CursorPlane","value":"Capability::CursorPlane","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":"compositor has a separate cursor plane\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":253},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6591800,"byte_end":6591810,"line_start":12,"line_end":12,"column_start":14,"column_end":24},"name":"Capability","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Capability","value":"pub enum Capability {\n\n    #[doc = \"compositor is capable of almost any output mode\"]\n    ArbitraryModes = ,\n\n    #[doc = \"compositor has a separate cursor plane\"]\n    CursorPlane = ,\n}","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":257}],"decl_id":null,"docs":"capabilities advertised by the compositor","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6591729,"byte_end":6591741,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592034,"byte_end":6592042,"line_start":19,"line_end":19,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Capability>::from_raw","value":"pub fn from_raw(u32) -> Option<Capability>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592278,"byte_end":6592284,"line_start":26,"line_end":26,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Capability>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592748,"byte_end":6592755,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"Default","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::PresentMethod::Default","value":"PresentMethod::Default","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"no preference, apply default policy\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":272},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592821,"byte_end":6592827,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"Center","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::PresentMethod::Center","value":"PresentMethod::Center","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"center the surface on the output\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":275},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592952,"byte_end":6592956,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"Zoom","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::PresentMethod::Zoom","value":"PresentMethod::Zoom","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"scale the surface, preserving aspect ratio, to the largest size that will fit on the output\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":278},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593077,"byte_end":6593085,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"name":"ZoomCrop","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::PresentMethod::ZoomCrop","value":"PresentMethod::ZoomCrop","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"scale the surface, preserving aspect ratio, to fully fill the output cropping if needed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593184,"byte_end":6593191,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"Stretch","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::PresentMethod::Stretch","value":"PresentMethod::Stretch","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"scale the surface to the size of the output ignoring aspect ratio\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":268},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592669,"byte_end":6592682,"line_start":33,"line_end":33,"column_start":14,"column_end":27},"name":"PresentMethod","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::PresentMethod","value":"pub enum PresentMethod {\n\n    #[doc = \"no preference, apply default policy\"]\n    Default = ,\n\n    #[doc = \"center the surface on the output\"]\n    Center = ,\n\n    #[doc =\n      \"scale the surface, preserving aspect ratio, to the largest size that will fit on the output\"]\n    Zoom = ,\n\n    #[doc =\n      \"scale the surface, preserving aspect ratio, to fully fill the output cropping if needed\"]\n    ZoomCrop = ,\n\n    #[doc =\n      \"scale the surface to the size of the output ignoring aspect ratio\"]\n    Stretch = ,\n}","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281}],"decl_id":null,"docs":"different method to set the surface fullscreen","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592598,"byte_end":6592610,"line_start":31,"line_end":31,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593243,"byte_end":6593251,"line_start":46,"line_end":46,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<PresentMethod>::from_raw","value":"pub fn from_raw(u32) -> Option<PresentMethod>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593635,"byte_end":6593641,"line_start":56,"line_end":56,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<PresentMethod>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593961,"byte_end":6593974,"line_start":65,"line_end":65,"column_start":9,"column_end":22},"name":"InvalidMethod","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Error::InvalidMethod","value":"Error::InvalidMethod","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":"present_method is not known\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":292},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593898,"byte_end":6593903,"line_start":63,"line_end":63,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Error","value":"pub enum Error {\n\n    #[doc = \"present_method is not known\"]\n    InvalidMethod = ,\n}","parent":null,"children":[{"krate":0,"index":293}],"decl_id":null,"docs":"wl_fullscreen_shell error values","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593827,"byte_end":6593839,"line_start":61,"line_end":61,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6594018,"byte_end":6594026,"line_start":68,"line_end":68,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6594199,"byte_end":6594205,"line_start":74,"line_end":74,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":119},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6594662,"byte_end":6594669,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"name":"Release","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Request::Release","value":"Request::Release","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"release the wl_fullscreen_shell interface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":121},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6595522,"byte_end":6595536,"line_start":82,"line_end":82,"column_start":9,"column_end":23},"name":"PresentSurface","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Request::PresentSurface","value":"Request::PresentSurface { surface, method, output }","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"present surface for display","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":125},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6597720,"byte_end":6597741,"line_start":88,"line_end":88,"column_start":9,"column_end":30},"name":"PresentSurfaceForMode","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Request::PresentSurfaceForMode","value":"Request::PresentSurfaceForMode { surface, output, framerate, feedback }","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"present surface for display at a particular mode","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":118},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6594276,"byte_end":6594283,"line_start":78,"line_end":78,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"release the wl_fullscreen_shell interface\\n\\nRelease the binding from the wl_fullscreen_shell interface.\\n\\nThis destroys the server-side object and frees this binding.  If\\nthe client binds to wl_fullscreen_shell multiple times, it may wish\\nto free some of those bindings.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Release,\n\n    #[doc =\n      \"present surface for display\\n\\nPresent a surface on the given output.\\n\\nIf the output is null, the compositor will present the surface on\\nwhatever display (or displays) it thinks best.  In particular, this\\nmay replace any or all surfaces currently presented so it should\\nnot be used in combination with placing surfaces on specific\\noutputs.\\n\\nThe method parameter is a hint to the compositor for how the surface\\nis to be presented.  In particular, it tells the compositor how to\\nhandle a size mismatch between the presented surface and the\\noutput.  The compositor is free to ignore this parameter.\\n\\nThe \\\"zoom\\\", \\\"zoom_crop\\\", and \\\"stretch\\\" methods imply a scaling\\noperation on the surface.  This will override any kind of output\\nscaling, so the buffer_scale property of the surface is effectively\\nignored.\"]\n    PresentSurface {\n        surface: Option<Proxy<super::wl_surface::WlSurface>>,\n        method: u32,\n        output: Option<Proxy<super::wl_output::WlOutput>>,\n    },\n\n    #[doc =\n      \"present surface for display at a particular mode\\n\\nPresents a surface on the given output for a particular mode.\\n\\nIf the current size of the output differs from that of the surface,\\nthe compositor will attempt to change the size of the output to\\nmatch the surface.  The result of the mode-switch operation will be\\nreturned via the provided wl_fullscreen_shell_mode_feedback object.\\n\\nIf the current output mode matches the one requested or if the\\ncompositor successfully switches the mode to match the surface,\\nthen the mode_successful event will be sent and the output will\\ncontain the contents of the given surface.  If the compositor\\ncannot match the output size to the surface size, the mode_failed\\nwill be sent and the output will contain the contents of the\\npreviously presented surface (if any).  If another surface is\\npresented on the given output before either of these has a chance\\nto happen, the present_cancelled event will be sent.\\n\\nDue to race conditions and other issues unknown to the client, no\\nmode-switch operation is guaranteed to succeed.  However, if the\\nmode is one advertised by wl_output.mode or if the compositor\\nadvertises the ARBITRARY_MODES capability, then the client should\\nexpect that the mode-switch operation will usually succeed.\\n\\nIf the size of the presented surface changes, the resulting output\\nis undefined.  The compositor may attempt to change the output mode\\nto compensate.  However, there is no guarantee that a suitable mode\\nwill be found and the client has no way to be notified of success\\nor failure.\\n\\nThe framerate parameter specifies the desired framerate for the\\noutput in mHz.  The compositor is free to ignore this parameter.  A\\nvalue of 0 indicates that the client has no preference.\\n\\nIf the value of wl_output.scale differs from wl_surface.buffer_scale,\\nthen the compositor may choose a mode that matches either the buffer\\nsize or the surface size.  In either case, the surface will fill the\\noutput.\"]\n    PresentSurfaceForMode {\n        surface: Proxy<super::wl_surface::WlSurface>,\n        output: Proxy<super::wl_output::WlOutput>,\n        framerate: i32,\n        feedback: Proxy<super::zwp_fullscreen_shell_mode_feedback_v1::ZwpFullscreenShellModeFeedbackV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":149},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6603743,"byte_end":6603753,"line_start":239,"line_end":239,"column_start":9,"column_end":19},"name":"Capability","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Event::Capability","value":"Event::Capability { capability }","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":"advertises a capability of the compositor","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":148},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6603235,"byte_end":6603240,"line_start":237,"line_end":237,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"advertises a capability of the compositor\\n\\nAdvertises a single capability of the compositor.\\n\\nWhen the wl_fullscreen_shell interface is bound, this event is emitted\\nonce for each capability advertised.  Valid capabilities are given by\\nthe wl_fullscreen_shell.capability enum.  If clients want to take\\nadvantage of any of these capabilities, they should use a\\nwl_display.sync request immediately after binding to ensure that they\\nreceive all the capability events.\"]\n    Capability {\n        capability: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6605998,"byte_end":6606018,"line_start":309,"line_end":309,"column_start":16,"column_end":36},"name":"ZwpFullscreenShellV1","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::ZwpFullscreenShellV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6606386,"byte_end":6606399,"line_start":319,"line_end":319,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6606811,"byte_end":6606818,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"release","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::RequestsTrait::release","value":"pub fn release(&Self) -> ()","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"release the wl_fullscreen_shell interface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6607687,"byte_end":6607702,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"present_surface","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::RequestsTrait::present_surface","value":"pub fn present_surface(&Self, Option<&Proxy<super::wl_surface::WlSurface>>,\n                       u32, Option<&Proxy<super::wl_output::WlOutput>>) -> ()","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"present surface for display","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6609915,"byte_end":6609939,"line_start":330,"line_end":330,"column_start":12,"column_end":36},"name":"present_surface_for_mode","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::RequestsTrait::present_surface_for_mode","value":"pub fn present_surface_for_mode<F>(&Self,\n                                   &Proxy<super::wl_surface::WlSurface>,\n                                   &Proxy<super::wl_output::WlOutput>, i32, F)\n->\n    Result<Proxy<super::zwp_fullscreen_shell_mode_feedback_v1::ZwpFullscreenShellModeFeedbackV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_fullscreen_shell_mode_feedback_v1::ZwpFullscreenShellModeFeedbackV1>)\n->\nProxy<super::zwp_fullscreen_shell_mode_feedback_v1::ZwpFullscreenShellModeFeedbackV1>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"present surface for display at a particular mode","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6612331,"byte_end":6612348,"line_start":396,"line_end":396,"column_start":15,"column_end":32},"name":"REQ_RELEASE_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::REQ_RELEASE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":185},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6612444,"byte_end":6612469,"line_start":398,"line_end":398,"column_start":15,"column_end":40},"name":"REQ_PRESENT_SURFACE_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::REQ_PRESENT_SURFACE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6612565,"byte_end":6612599,"line_start":400,"line_end":400,"column_start":15,"column_end":49},"name":"REQ_PRESENT_SURFACE_FOR_MODE_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::REQ_PRESENT_SURFACE_FOR_MODE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6612693,"byte_end":6612713,"line_start":402,"line_end":402,"column_start":15,"column_end":35},"name":"EVT_CAPABILITY_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_v1::EVT_CAPABILITY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6612737,"byte_end":6612774,"line_start":404,"line_end":404,"column_start":9,"column_end":46},"name":"zwp_fullscreen_shell_mode_feedback_v1","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":11927},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":220},{"krate":0,"index":227},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":206},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6613057,"byte_end":6613064,"line_start":411,"line_end":411,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::Request","value":"pub enum Request { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":221},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6614601,"byte_end":6614615,"line_start":452,"line_end":452,"column_start":9,"column_end":23},"name":"ModeSuccessful","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::Event::ModeSuccessful","value":"Event::ModeSuccessful","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"mode switch succeeded","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6614966,"byte_end":6614976,"line_start":454,"line_end":454,"column_start":9,"column_end":19},"name":"ModeFailed","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::Event::ModeFailed","value":"Event::ModeFailed","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"mode switch failed","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6615315,"byte_end":6615331,"line_start":456,"line_end":456,"column_start":9,"column_end":25},"name":"PresentCancelled","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::Event::PresentCancelled","value":"Event::PresentCancelled","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"mode switch cancelled","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":220},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6614268,"byte_end":6614273,"line_start":450,"line_end":450,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"mode switch succeeded\\n\\nThis event indicates that the attempted mode switch operation was\\nsuccessful.  A surface of the size requested in the mode switch\\nwill fill the output without scaling.\\n\\nUpon receiving this event, the client should destroy the\\nwl_fullscreen_shell_mode_feedback object.\"]\n    ModeSuccessful,\n\n    #[doc =\n      \"mode switch failed\\n\\nThis event indicates that the attempted mode switch operation\\nfailed.  This may be because the requested output mode is not\\npossible or it may mean that the compositor does not want to allow it.\\n\\nUpon receiving this event, the client should destroy the\\nwl_fullscreen_shell_mode_feedback object.\"]\n    ModeFailed,\n\n    #[doc =\n      \"mode switch cancelled\\n\\nThis event indicates that the attempted mode switch operation was\\ncancelled.  Most likely this is because the client requested a\\nsecond mode switch before the first one completed.\\n\\nUpon receiving this event, the client should destroy the\\nwl_fullscreen_shell_mode_feedback object.\"]\n    PresentCancelled,\n}","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6617551,"byte_end":6617583,"line_start":528,"line_end":528,"column_start":16,"column_end":48},"name":"ZwpFullscreenShellModeFeedbackV1","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::ZwpFullscreenShellModeFeedbackV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":248},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6617991,"byte_end":6618004,"line_start":538,"line_end":538,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":250},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6618158,"byte_end":6618183,"line_start":541,"line_end":541,"column_start":15,"column_end":40},"name":"EVT_MODE_SUCCESSFUL_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::EVT_MODE_SUCCESSFUL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":251},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6618277,"byte_end":6618298,"line_start":543,"line_end":543,"column_start":15,"column_end":36},"name":"EVT_MODE_FAILED_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::EVT_MODE_FAILED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":252},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6618392,"byte_end":6618419,"line_start":545,"line_end":545,"column_start":15,"column_end":42},"name":"EVT_PRESENT_CANCELLED_SINCE","qualname":"::unstable::fullscreen_shell::v1::generated::client::zwp_fullscreen_shell_mode_feedback_v1::EVT_PRESENT_CANCELLED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7484,"byte_end":7496,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"name":"idle_inhibit","qualname":"::unstable::idle_inhibit","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":306}],"decl_id":null,"docs":" Screensaver inhibition protocol\n","sig":null,"attributes":[{"value":"! Screensaver inhibition protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7503,"byte_end":7538,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":306},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::idle_inhibit::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":342},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_interfaces.rs","byte_start":7551067,"byte_end":7551103,"line_start":9,"line_end":9,"column_start":16,"column_end":52},"name":"zwp_idle_inhibit_manager_v1_requests","qualname":"::unstable::idle_inhibit::v1::generated::c_interfaces::zwp_idle_inhibit_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":344},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_interfaces.rs","byte_start":7551581,"byte_end":7551618,"line_start":21,"line_end":21,"column_start":16,"column_end":53},"name":"zwp_idle_inhibit_manager_v1_interface","qualname":"::unstable::idle_inhibit::v1::generated::c_interfaces::zwp_idle_inhibit_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":345},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_interfaces.rs","byte_start":7551918,"byte_end":7551948,"line_start":29,"line_end":29,"column_start":16,"column_end":46},"name":"zwp_idle_inhibitor_v1_requests","qualname":"::unstable::idle_inhibit::v1::generated::c_interfaces::zwp_idle_inhibitor_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":347},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_interfaces.rs","byte_start":7552154,"byte_end":7552185,"line_start":34,"line_end":34,"column_start":16,"column_end":47},"name":"zwp_idle_inhibitor_v1_interface","qualname":"::unstable::idle_inhibit::v1::generated::c_interfaces::zwp_idle_inhibitor_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7553252,"byte_end":7553279,"line_start":2,"line_end":2,"column_start":9,"column_end":36},"name":"zwp_idle_inhibit_manager_v1","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":11993},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":372},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":"control behavior when display idles","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7553739,"byte_end":7553746,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"destroy the idle inhibitor object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":369},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7553873,"byte_end":7553888,"line_start":13,"line_end":13,"column_start":9,"column_end":24},"name":"CreateInhibitor","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::Request::CreateInhibitor","value":"Request::CreateInhibitor { id, surface }","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"create a new inhibitor object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":366},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7553562,"byte_end":7553569,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the idle inhibitor object\\n\\nDestroy the inhibit manager.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a new inhibitor object\\n\\nCreate a new inhibitor object associated with the given surface.\"]\n    CreateInhibitor {\n        id: Proxy<super::zwp_idle_inhibitor_v1::ZwpIdleInhibitorV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":387},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7556929,"byte_end":7556934,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7558234,"byte_end":7558257,"line_start":141,"line_end":141,"column_start":16,"column_end":39},"name":"ZwpIdleInhibitManagerV1","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::ZwpIdleInhibitManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":409},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7558636,"byte_end":7558649,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7558852,"byte_end":7558859,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"destroy the idle inhibitor object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7559002,"byte_end":7559018,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"create_inhibitor","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::RequestsTrait::create_inhibitor","value":"pub fn create_inhibitor<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::zwp_idle_inhibitor_v1::ZwpIdleInhibitorV1>, ()> where\nF: FnOnce(NewProxy<super::zwp_idle_inhibitor_v1::ZwpIdleInhibitorV1>) ->\nProxy<super::zwp_idle_inhibitor_v1::ZwpIdleInhibitorV1>","parent":{"krate":0,"index":409},"children":[],"decl_id":null,"docs":"create a new inhibitor object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":417},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7560299,"byte_end":7560316,"line_start":188,"line_end":188,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":418},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7560412,"byte_end":7560438,"line_start":190,"line_end":190,"column_start":15,"column_end":41},"name":"REQ_CREATE_INHIBITOR_SINCE","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibit_manager_v1::REQ_CREATE_INHIBITOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":419},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7561291,"byte_end":7561312,"line_start":193,"line_end":193,"column_start":9,"column_end":30},"name":"zwp_idle_inhibitor_v1","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":12021},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480}],"decl_id":null,"docs":"context object for inhibiting idle behavior","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":438},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7561803,"byte_end":7561810,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":"destroy the idle inhibitor object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":437},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7561595,"byte_end":7561602,"line_start":200,"line_end":200,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the idle inhibitor object\\n\\nRemove the inhibitor effect from the associated wl_surface.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":454},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7563624,"byte_end":7563629,"line_start":261,"line_end":261,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7564929,"byte_end":7564947,"line_start":304,"line_end":304,"column_start":16,"column_end":34},"name":"ZwpIdleInhibitorV1","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::ZwpIdleInhibitorV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":476},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7565309,"byte_end":7565322,"line_start":314,"line_end":314,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7565556,"byte_end":7565563,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":"destroy the idle inhibitor object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":480},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7565839,"byte_end":7565856,"line_start":325,"line_end":325,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::idle_inhibit::v1::generated::client::zwp_idle_inhibitor_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7687,"byte_end":7699,"line_start":43,"line_end":43,"column_start":9,"column_end":21},"name":"input_method","qualname":"::unstable::input_method","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":481}],"decl_id":null,"docs":" Input method protocol\n","sig":null,"attributes":[{"value":"! Input method protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7706,"byte_end":7731,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":481},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::input_method::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":521},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7566398,"byte_end":7566434,"line_start":13,"line_end":13,"column_start":16,"column_end":52},"name":"zwp_input_method_context_v1_requests","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_method_context_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":523},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7569269,"byte_end":7569303,"line_start":85,"line_end":85,"column_start":16,"column_end":50},"name":"zwp_input_method_context_v1_events","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_method_context_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":525},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7570520,"byte_end":7570557,"line_start":117,"line_end":117,"column_start":16,"column_end":53},"name":"zwp_input_method_context_v1_interface","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_method_context_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":530},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7571212,"byte_end":7571238,"line_start":129,"line_end":129,"column_start":16,"column_end":42},"name":"zwp_input_method_v1_events","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_method_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":532},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7571726,"byte_end":7571755,"line_start":141,"line_end":141,"column_start":16,"column_end":45},"name":"zwp_input_method_v1_interface","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_method_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":535},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7572277,"byte_end":7572304,"line_start":153,"line_end":153,"column_start":16,"column_end":43},"name":"zwp_input_panel_v1_requests","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_panel_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":537},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7572575,"byte_end":7572603,"line_start":158,"line_end":158,"column_start":16,"column_end":44},"name":"zwp_input_panel_v1_interface","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_panel_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":540},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7573080,"byte_end":7573115,"line_start":170,"line_end":170,"column_start":16,"column_end":51},"name":"zwp_input_panel_surface_v1_requests","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_panel_surface_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":542},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_interfaces.rs","byte_start":7573594,"byte_end":7573630,"line_start":182,"line_end":182,"column_start":16,"column_end":52},"name":"zwp_input_panel_surface_v1_interface","qualname":"::unstable::input_method::v1::generated::c_interfaces::zwp_input_panel_surface_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":543},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7575318,"byte_end":7575345,"line_start":2,"line_end":2,"column_start":9,"column_end":36},"name":"zwp_input_method_context_v1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":12095},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":610},{"krate":0,"index":637},{"krate":0,"index":654},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":677},{"krate":0,"index":693},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"decl_id":null,"docs":"input method context","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7575736,"byte_end":7575743,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"This is a destructor, once sent this object cannot be used any longer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":564},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7576191,"byte_end":7576203,"line_start":13,"line_end":13,"column_start":9,"column_end":21},"name":"CommitString","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::CommitString","value":"Request::CommitString { serial, text }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"commit string","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7576538,"byte_end":7576551,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"PreeditString","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::PreeditString","value":"Request::PreeditString { serial, text, commit }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"pre-edit string","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":571},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7576983,"byte_end":7576997,"line_start":21,"line_end":21,"column_start":9,"column_end":23},"name":"PreeditStyling","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::PreeditStyling","value":"Request::PreeditStyling { index, length, style }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"pre-edit styling","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":575},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7577327,"byte_end":7577340,"line_start":23,"line_end":23,"column_start":9,"column_end":22},"name":"PreeditCursor","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::PreeditCursor","value":"Request::PreeditCursor { index }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"pre-edit cursor","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":577},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7577528,"byte_end":7577549,"line_start":25,"line_end":25,"column_start":9,"column_end":30},"name":"DeleteSurroundingText","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::DeleteSurroundingText","value":"Request::DeleteSurroundingText { index, length }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"delete text","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":580},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7578201,"byte_end":7578215,"line_start":27,"line_end":27,"column_start":9,"column_end":23},"name":"CursorPosition","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::CursorPosition","value":"Request::CursorPosition { index, anchor }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"set cursor to a new position","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":583},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7578273,"byte_end":7578285,"line_start":29,"line_end":29,"column_start":9,"column_end":21},"name":"ModifiersMap","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::ModifiersMap","value":"Request::ModifiersMap { map }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":585},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7578629,"byte_end":7578635,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"Keysym","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::Keysym","value":"Request::Keysym { serial, time, sym, state, modifiers }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"keysym","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":591},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7579076,"byte_end":7579088,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"GrabKeyboard","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::GrabKeyboard","value":"Request::GrabKeyboard { keyboard }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"grab hardware keyboard","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":593},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7579508,"byte_end":7579511,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"Key","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::Key","value":"Request::Key { serial, time, key, state }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"forward key event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":598},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7579914,"byte_end":7579923,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"Modifiers","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::Modifiers","value":"Request::Modifiers { serial, mods_depressed, mods_latched, mods_locked, group }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"forward modifiers event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":604},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7580108,"byte_end":7580116,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"Language","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::Language","value":"Request::Language { serial, language }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7580180,"byte_end":7580193,"line_start":60,"line_end":60,"column_start":9,"column_end":22},"name":"TextDirection","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request::TextDirection","value":"Request::TextDirection { serial, direction }","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":561},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7575628,"byte_end":7575635,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"This is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"commit string\\n\\nSend the commit string text for insertion to the application.\\n\\nThe text to commit could be either just a single character after a key\\npress or the result of some composing (pre-edit). It could be also an\\nempty text when some text should be removed (see\\ndelete_surrounding_text) or when the input cursor should be moved (see\\ncursor_position).\\n\\nAny previously set composing text will be removed.\"]\n    CommitString {\n        serial: u32,\n        text: String,\n    },\n\n    #[doc =\n      \"pre-edit string\\n\\nSend the pre-edit string text to the application text input.\\n\\nThe commit text can be used to replace the pre-edit text on reset (for\\nexample on unfocus).\\n\\nPreviously sent preedit_style and preedit_cursor requests are also\\nprocessed by the text_input.\"]\n    PreeditString {\n        serial: u32,\n        text: String,\n        commit: String,\n    },\n\n    #[doc =\n      \"pre-edit styling\\n\\nSet the styling information on composing text. The style is applied for\\nlength in bytes from index relative to the beginning of\\nthe composing text (as byte offset). Multiple styles can\\nbe applied to a composing text.\\n\\nThis request should be sent before sending a preedit_string request.\"]\n    PreeditStyling {\n        index: u32,\n        length: u32,\n        style: u32,\n    },\n\n    #[doc =\n      \"pre-edit cursor\\n\\nSet the cursor position inside the composing text (as byte offset)\\nrelative to the start of the composing text.\\n\\nWhen index is negative no cursor should be displayed.\\n\\nThis request should be sent before sending a preedit_string request.\"]\n    PreeditCursor {\n        index: i32,\n    },\n\n    #[doc =\n      \"delete text\\n\\nRemove the surrounding text.\\n\\nThis request will be handled on the text_input side directly following\\na commit_string request.\"]\n    DeleteSurroundingText {\n        index: i32,\n        length: u32,\n    },\n\n    #[doc =\n      \"set cursor to a new position\\n\\nSet the cursor and anchor to a new position. Index is the new cursor\\nposition in bytes (when >= 0 this is relative to the end of the inserted text,\\notherwise it is relative to the beginning of the inserted text). Anchor is\\nthe new anchor position in bytes (when >= 0 this is relative to the end of the\\ninserted text, otherwise it is relative to the beginning of the inserted\\ntext). When there should be no selected text, anchor should be the same\\nas index.\\n\\nThis request will be handled on the text_input side directly following\\na commit_string request.\"]\n    CursorPosition {\n        index: i32,\n        anchor: i32,\n    },\n\n    #[doc = \"\"]\n    ModifiersMap {\n        map: Vec<u8>,\n    },\n\n    #[doc =\n      \"keysym\\n\\nNotify when a key event was sent. Key events should not be used for\\nnormal text input operations, which should be done with commit_string,\\ndelete_surrounding_text, etc. The key event follows the wl_keyboard key\\nevent convention. Sym is an XKB keysym, state is a wl_keyboard key_state.\"]\n    Keysym {\n        serial: u32,\n        time: u32,\n        sym: u32,\n        state: u32,\n        modifiers: u32,\n    },\n\n    #[doc =\n      \"grab hardware keyboard\\n\\nAllow an input method to receive hardware keyboard input and process\\nkey events to generate text events (with pre-edit) over the wire. This\\nallows input methods which compose multiple key events for inputting\\ntext like it is done for CJK languages.\"]\n    GrabKeyboard {\n        keyboard: Proxy<super::wl_keyboard::WlKeyboard>,\n    },\n\n    #[doc =\n      \"forward key event\\n\\nForward a wl_keyboard::key event to the client that was not processed\\nby the input method itself. Should be used when filtering key events\\nwith grab_keyboard.  The arguments should be the ones from the\\nwl_keyboard::key event.\\n\\nFor generating custom key events use the keysym request instead.\"]\n    Key {\n        serial: u32,\n        time: u32,\n        key: u32,\n        state: u32,\n    },\n\n    #[doc =\n      \"forward modifiers event\\n\\nForward a wl_keyboard::modifiers event to the client that was not\\nprocessed by the input method itself.  Should be used when filtering\\nkey events with grab_keyboard. The arguments should be the ones\\nfrom the wl_keyboard::modifiers event.\"]\n    Modifiers {\n        serial: u32,\n        mods_depressed: u32,\n        mods_latched: u32,\n        mods_locked: u32,\n        group: u32,\n    },\n\n    #[doc = \"\"]\n    Language {\n        serial: u32,\n        language: String,\n    },\n\n    #[doc = \"\"]\n    TextDirection {\n        serial: u32,\n        direction: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":598},{"krate":0,"index":604},{"krate":0,"index":607}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":638},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597087,"byte_end":7597102,"line_start":479,"line_end":479,"column_start":9,"column_end":24},"name":"SurroundingText","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event::SurroundingText","value":"Event::SurroundingText { text, cursor, anchor }","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"surrounding text event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":642},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597220,"byte_end":7597225,"line_start":485,"line_end":485,"column_start":9,"column_end":14},"name":"Reset","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event::Reset","value":"Event::Reset","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":644},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597255,"byte_end":7597266,"line_start":487,"line_end":487,"column_start":9,"column_end":20},"name":"ContentType","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event::ContentType","value":"Event::ContentType { hint, purpose }","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":647},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597324,"byte_end":7597336,"line_start":489,"line_end":489,"column_start":9,"column_end":21},"name":"InvokeAction","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event::InvokeAction","value":"Event::InvokeAction { button, index }","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":650},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597394,"byte_end":7597405,"line_start":491,"line_end":491,"column_start":9,"column_end":20},"name":"CommitState","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event::CommitState","value":"Event::CommitState { serial }","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":652},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597451,"byte_end":7597468,"line_start":493,"line_end":493,"column_start":9,"column_end":26},"name":"PreferredLanguage","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event::PreferredLanguage","value":"Event::PreferredLanguage { language }","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":637},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7596682,"byte_end":7596687,"line_start":477,"line_end":477,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"surrounding text event\\n\\nThe plain surrounding text around the input position. Cursor is the\\nposition in bytes within the surrounding text relative to the beginning\\nof the text. Anchor is the position in bytes of the selection anchor\\nwithin the surrounding text relative to the beginning of the text. If\\nthere is no selected text then anchor is the same as cursor.\"]\n    SurroundingText {\n        text: String,\n        cursor: u32,\n        anchor: u32,\n    },\n\n    #[doc = \"\"]\n    Reset,\n\n    #[doc = \"\"]\n    ContentType {\n        hint: u32,\n        purpose: u32,\n    },\n\n    #[doc = \"\"]\n    InvokeAction {\n        button: u32,\n        index: u32,\n    },\n\n    #[doc = \"\"]\n    CommitState {\n        serial: u32,\n    },\n\n    #[doc = \"\"]\n    PreferredLanguage {\n        language: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":652}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7605750,"byte_end":7605773,"line_start":713,"line_end":713,"column_start":16,"column_end":39},"name":"ZwpInputMethodContextV1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::ZwpInputMethodContextV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":677},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7606152,"byte_end":7606165,"line_start":723,"line_end":723,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7606299,"byte_end":7606306,"line_start":725,"line_end":725,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"This is a destructor, you cannot send requests to this object any longer once this method is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7606770,"byte_end":7606783,"line_start":727,"line_end":727,"column_start":12,"column_end":25},"name":"commit_string","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::commit_string","value":"pub fn commit_string(&Self, u32, String) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"commit string","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7607131,"byte_end":7607145,"line_start":729,"line_end":729,"column_start":12,"column_end":26},"name":"preedit_string","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::preedit_string","value":"pub fn preedit_string(&Self, u32, String, String) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"pre-edit string","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7607545,"byte_end":7607560,"line_start":731,"line_end":731,"column_start":12,"column_end":27},"name":"preedit_styling","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::preedit_styling","value":"pub fn preedit_styling(&Self, u32, u32, u32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"pre-edit styling","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7607903,"byte_end":7607917,"line_start":733,"line_end":733,"column_start":12,"column_end":26},"name":"preedit_cursor","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::preedit_cursor","value":"pub fn preedit_cursor(&Self, i32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"pre-edit cursor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7608118,"byte_end":7608141,"line_start":735,"line_end":735,"column_start":12,"column_end":35},"name":"delete_surrounding_text","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::delete_surrounding_text","value":"pub fn delete_surrounding_text(&Self, i32, u32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"delete text","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7608806,"byte_end":7608821,"line_start":737,"line_end":737,"column_start":12,"column_end":27},"name":"cursor_position","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::cursor_position","value":"pub fn cursor_position(&Self, i32, i32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"set cursor to a new position","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7608892,"byte_end":7608905,"line_start":739,"line_end":739,"column_start":12,"column_end":25},"name":"modifiers_map","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::modifiers_map","value":"pub fn modifiers_map(&Self, Vec<u8>) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7609262,"byte_end":7609268,"line_start":741,"line_end":741,"column_start":12,"column_end":18},"name":"keysym","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::keysym","value":"pub fn keysym(&Self, u32, u32, u32, u32, u32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"keysym","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7609653,"byte_end":7609666,"line_start":743,"line_end":743,"column_start":12,"column_end":25},"name":"grab_keyboard","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::grab_keyboard","value":"pub fn grab_keyboard<F>(&Self, F)\n-> Result<Proxy<super::wl_keyboard::WlKeyboard>, ()> where\nF: FnOnce(NewProxy<super::wl_keyboard::WlKeyboard>) ->\nProxy<super::wl_keyboard::WlKeyboard>","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"grab hardware keyboard","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7610280,"byte_end":7610283,"line_start":752,"line_end":752,"column_start":12,"column_end":15},"name":"key","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::key","value":"pub fn key(&Self, u32, u32, u32, u32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"forward key event","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7610642,"byte_end":7610651,"line_start":754,"line_end":754,"column_start":12,"column_end":21},"name":"modifiers","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::modifiers","value":"pub fn modifiers(&Self, u32, u32, u32, u32, u32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"forward modifiers event","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7610863,"byte_end":7610871,"line_start":763,"line_end":763,"column_start":12,"column_end":20},"name":"language","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::language","value":"pub fn language(&Self, u32, String) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7610948,"byte_end":7610962,"line_start":765,"line_end":765,"column_start":12,"column_end":26},"name":"text_direction","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::RequestsTrait::text_direction","value":"pub fn text_direction(&Self, u32, u32) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":709},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7614893,"byte_end":7614910,"line_start":883,"line_end":883,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":710},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615006,"byte_end":7615029,"line_start":885,"line_end":885,"column_start":15,"column_end":38},"name":"REQ_COMMIT_STRING_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_COMMIT_STRING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":711},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615125,"byte_end":7615149,"line_start":887,"line_end":887,"column_start":15,"column_end":39},"name":"REQ_PREEDIT_STRING_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_PREEDIT_STRING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":712},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615245,"byte_end":7615270,"line_start":889,"line_end":889,"column_start":15,"column_end":40},"name":"REQ_PREEDIT_STYLING_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_PREEDIT_STYLING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":713},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615366,"byte_end":7615390,"line_start":891,"line_end":891,"column_start":15,"column_end":39},"name":"REQ_PREEDIT_CURSOR_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_PREEDIT_CURSOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":714},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615486,"byte_end":7615519,"line_start":893,"line_end":893,"column_start":15,"column_end":48},"name":"REQ_DELETE_SURROUNDING_TEXT_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_DELETE_SURROUNDING_TEXT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":715},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615615,"byte_end":7615640,"line_start":895,"line_end":895,"column_start":15,"column_end":40},"name":"REQ_CURSOR_POSITION_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_CURSOR_POSITION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":716},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615736,"byte_end":7615759,"line_start":897,"line_end":897,"column_start":15,"column_end":38},"name":"REQ_MODIFIERS_MAP_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_MODIFIERS_MAP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":717},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615855,"byte_end":7615871,"line_start":899,"line_end":899,"column_start":15,"column_end":31},"name":"REQ_KEYSYM_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_KEYSYM_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":718},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7615967,"byte_end":7615990,"line_start":901,"line_end":901,"column_start":15,"column_end":38},"name":"REQ_GRAB_KEYBOARD_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_GRAB_KEYBOARD_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":719},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616086,"byte_end":7616099,"line_start":903,"line_end":903,"column_start":15,"column_end":28},"name":"REQ_KEY_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_KEY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":720},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616195,"byte_end":7616214,"line_start":905,"line_end":905,"column_start":15,"column_end":34},"name":"REQ_MODIFIERS_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_MODIFIERS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":721},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616310,"byte_end":7616328,"line_start":907,"line_end":907,"column_start":15,"column_end":33},"name":"REQ_LANGUAGE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_LANGUAGE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":722},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616424,"byte_end":7616448,"line_start":909,"line_end":909,"column_start":15,"column_end":39},"name":"REQ_TEXT_DIRECTION_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::REQ_TEXT_DIRECTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":723},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616542,"byte_end":7616568,"line_start":911,"line_end":911,"column_start":15,"column_end":41},"name":"EVT_SURROUNDING_TEXT_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::EVT_SURROUNDING_TEXT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":724},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616662,"byte_end":7616677,"line_start":913,"line_end":913,"column_start":15,"column_end":30},"name":"EVT_RESET_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::EVT_RESET_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":725},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616771,"byte_end":7616793,"line_start":915,"line_end":915,"column_start":15,"column_end":37},"name":"EVT_CONTENT_TYPE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::EVT_CONTENT_TYPE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":726},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7616887,"byte_end":7616910,"line_start":917,"line_end":917,"column_start":15,"column_end":38},"name":"EVT_INVOKE_ACTION_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::EVT_INVOKE_ACTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":727},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7617004,"byte_end":7617026,"line_start":919,"line_end":919,"column_start":15,"column_end":37},"name":"EVT_COMMIT_STATE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::EVT_COMMIT_STATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":728},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7617120,"byte_end":7617148,"line_start":921,"line_end":921,"column_start":15,"column_end":43},"name":"EVT_PREFERRED_LANGUAGE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_context_v1::EVT_PREFERRED_LANGUAGE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7617488,"byte_end":7617507,"line_start":924,"line_end":924,"column_start":9,"column_end":28},"name":"zwp_input_method_v1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":12123},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":761},{"krate":0,"index":766},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":"input method","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":747},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7617790,"byte_end":7617797,"line_start":931,"line_end":931,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::Request","value":"pub enum Request { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":762},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7619170,"byte_end":7619178,"line_start":972,"line_end":972,"column_start":9,"column_end":17},"name":"Activate","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::Event::Activate","value":"Event::Activate { id }","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"activate event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":764},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7619474,"byte_end":7619484,"line_start":976,"line_end":976,"column_start":9,"column_end":19},"name":"Deactivate","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::Event::Deactivate","value":"Event::Deactivate { context }","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"deactivate event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":761},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7619001,"byte_end":7619006,"line_start":970,"line_end":970,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"activate event\\n\\nA text input was activated. Creates an input method context object\\nwhich allows communication with the text input.\"]\n    Activate {\n        id: NewProxy<super::zwp_input_method_context_v1::ZwpInputMethodContextV1>,\n    },\n\n    #[doc =\n      \"deactivate event\\n\\nThe text input corresponding to the context argument was deactivated.\\nThe input method context should be destroyed after deactivation is\\nhandled.\"]\n    Deactivate {\n        context: Proxy<super::zwp_input_method_context_v1::ZwpInputMethodContextV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623365,"byte_end":7623381,"line_start":1085,"line_end":1085,"column_start":16,"column_end":32},"name":"ZwpInputMethodV1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::ZwpInputMethodV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":787},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623737,"byte_end":7623750,"line_start":1095,"line_end":1095,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":789},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623888,"byte_end":7623906,"line_start":1098,"line_end":1098,"column_start":15,"column_end":33},"name":"EVT_ACTIVATE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::EVT_ACTIVATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":790},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7624000,"byte_end":7624020,"line_start":1100,"line_end":1100,"column_start":15,"column_end":35},"name":"EVT_DEACTIVATE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_method_v1::EVT_DEACTIVATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":791},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7624146,"byte_end":7624164,"line_start":1103,"line_end":1103,"column_start":9,"column_end":27},"name":"zwp_input_panel_v1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":12151},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":813},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855}],"decl_id":null,"docs":"interface for implementing keyboards","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":810},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7624485,"byte_end":7624505,"line_start":1112,"line_end":1112,"column_start":9,"column_end":29},"name":"GetInputPanelSurface","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::Request::GetInputPanelSurface","value":"Request::GetInputPanelSurface { id, surface }","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7624447,"byte_end":7624454,"line_start":1110,"line_end":1110,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::Request","value":"pub enum Request {\n\n    #[doc = \"\"]\n    GetInputPanelSurface {\n        id: Proxy<super::zwp_input_panel_surface_v1::ZwpInputPanelSurfaceV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":827},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7626963,"byte_end":7626968,"line_start":1179,"line_end":1179,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7628268,"byte_end":7628283,"line_start":1222,"line_end":1222,"column_start":16,"column_end":31},"name":"ZwpInputPanelV1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::ZwpInputPanelV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":849},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7628636,"byte_end":7628649,"line_start":1232,"line_end":1232,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":850}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7628683,"byte_end":7628706,"line_start":1234,"line_end":1234,"column_start":12,"column_end":35},"name":"get_input_panel_surface","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::RequestsTrait::get_input_panel_surface","value":"pub fn get_input_panel_surface<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                                  F)\n->\n    Result<Proxy<super::zwp_input_panel_surface_v1::ZwpInputPanelSurfaceV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_input_panel_surface_v1::ZwpInputPanelSurfaceV1>)\n-> Proxy<super::zwp_input_panel_surface_v1::ZwpInputPanelSurfaceV1>","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":855},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7629965,"byte_end":7629998,"line_start":1265,"line_end":1265,"column_start":15,"column_end":48},"name":"REQ_GET_INPUT_PANEL_SURFACE_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_v1::REQ_GET_INPUT_PANEL_SURFACE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":856},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630022,"byte_end":7630048,"line_start":1267,"line_end":1267,"column_start":9,"column_end":35},"name":"zwp_input_panel_surface_v1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":12179},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":928},{"krate":0,"index":939},{"krate":0,"index":937},{"krate":0,"index":935},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":883},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630412,"byte_end":7630424,"line_start":1277,"line_end":1277,"column_start":9,"column_end":21},"name":"CenterBottom","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::Position::CenterBottom","value":"Position::CenterBottom","parent":{"krate":0,"index":928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":928},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630393,"byte_end":7630401,"line_start":1276,"line_end":1276,"column_start":14,"column_end":22},"name":"Position","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::Position","value":"pub enum Position { CenterBottom = , }","parent":null,"children":[{"krate":0,"index":929}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630322,"byte_end":7630334,"line_start":1274,"line_end":1274,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630471,"byte_end":7630479,"line_start":1280,"line_end":1280,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Position>::from_raw","value":"pub fn from_raw(u32) -> Option<Position>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630657,"byte_end":7630663,"line_start":1286,"line_end":1286,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Position>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":878},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630920,"byte_end":7630931,"line_start":1292,"line_end":1292,"column_start":9,"column_end":20},"name":"SetToplevel","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::Request::SetToplevel","value":"Request::SetToplevel { output, position }","parent":{"krate":0,"index":877},"children":[],"decl_id":null,"docs":"set the surface type as a keyboard","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7631248,"byte_end":7631263,"line_start":1297,"line_end":1297,"column_start":9,"column_end":24},"name":"SetOverlayPanel","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::Request::SetOverlayPanel","value":"Request::SetOverlayPanel","parent":{"krate":0,"index":877},"children":[],"decl_id":null,"docs":"set the surface type as an overlay panel","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":877},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630734,"byte_end":7630741,"line_start":1290,"line_end":1290,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set the surface type as a keyboard\\n\\nSet the input_panel_surface type to keyboard.\\n\\nA keyboard surface is only shown when a text input is active.\"]\n    SetToplevel {\n        output: Proxy<super::wl_output::WlOutput>,\n        position: u32,\n    },\n\n    #[doc =\n      \"set the surface type as an overlay panel\\n\\nSet the input_panel_surface to be an overlay panel.\\n\\nThis is shown near the input cursor above the application window when\\na text input is active.\"]\n    SetOverlayPanel,\n}","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":898},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7633967,"byte_end":7633972,"line_start":1375,"line_end":1375,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7635272,"byte_end":7635294,"line_start":1418,"line_end":1418,"column_start":16,"column_end":38},"name":"ZwpInputPanelSurfaceV1","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::ZwpInputPanelSurfaceV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7635670,"byte_end":7635683,"line_start":1428,"line_end":1428,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7635865,"byte_end":7635877,"line_start":1430,"line_end":1430,"column_start":12,"column_end":24},"name":"set_toplevel","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::RequestsTrait::set_toplevel","value":"pub fn set_toplevel(&Self, &Proxy<super::wl_output::WlOutput>, u32) -> ()","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"set the surface type as a keyboard","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7636175,"byte_end":7636192,"line_start":1432,"line_end":1432,"column_start":12,"column_end":29},"name":"set_overlay_panel","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::RequestsTrait::set_overlay_panel","value":"pub fn set_overlay_panel(&Self) -> ()","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"set the surface type as an overlay panel","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":926},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7636762,"byte_end":7636784,"line_start":1448,"line_end":1448,"column_start":15,"column_end":37},"name":"REQ_SET_TOPLEVEL_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::REQ_SET_TOPLEVEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":927},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7636880,"byte_end":7636907,"line_start":1450,"line_end":1450,"column_start":15,"column_end":42},"name":"REQ_SET_OVERLAY_PANEL_SINCE","qualname":"::unstable::input_method::v1::generated::client::zwp_input_panel_surface_v1::REQ_SET_OVERLAY_PANEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7997,"byte_end":8013,"line_start":58,"line_end":58,"column_start":9,"column_end":25},"name":"input_timestamps","qualname":"::unstable::input_timestamps","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":940}],"decl_id":null,"docs":" Input timestamps protocol\n","sig":null,"attributes":[{"value":"! Input timestamps protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8020,"byte_end":8049,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::input_timestamps::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":984},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_interfaces.rs","byte_start":7637974,"byte_end":7638014,"line_start":24,"line_end":24,"column_start":16,"column_end":56},"name":"zwp_input_timestamps_manager_v1_requests","qualname":"::unstable::input_timestamps::v1::generated::c_interfaces::zwp_input_timestamps_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":986},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_interfaces.rs","byte_start":7639096,"byte_end":7639137,"line_start":52,"line_end":52,"column_start":16,"column_end":57},"name":"zwp_input_timestamps_manager_v1_interface","qualname":"::unstable::input_timestamps::v1::generated::c_interfaces::zwp_input_timestamps_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":987},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_interfaces.rs","byte_start":7639445,"byte_end":7639477,"line_start":60,"line_end":60,"column_start":16,"column_end":48},"name":"zwp_input_timestamps_v1_requests","qualname":"::unstable::input_timestamps::v1::generated::c_interfaces::zwp_input_timestamps_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":989},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_interfaces.rs","byte_start":7639683,"byte_end":7639713,"line_start":65,"line_end":65,"column_start":16,"column_end":46},"name":"zwp_input_timestamps_v1_events","qualname":"::unstable::input_timestamps::v1::generated::c_interfaces::zwp_input_timestamps_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":991},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_interfaces.rs","byte_start":7639924,"byte_end":7639957,"line_start":70,"line_end":70,"column_start":16,"column_end":49},"name":"zwp_input_timestamps_v1_interface","qualname":"::unstable::input_timestamps::v1::generated::c_interfaces::zwp_input_timestamps_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":992},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7640420,"byte_end":7640451,"line_start":2,"line_end":2,"column_start":9,"column_end":40},"name":"zwp_input_timestamps_manager_v1","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":12253},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1022},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1061},{"krate":0,"index":1069},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"decl_id":null,"docs":"context object for high-resolution input timestamps","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7641033,"byte_end":7641040,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":"destroy the input timestamps manager object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7641531,"byte_end":7641552,"line_start":13,"line_end":13,"column_start":9,"column_end":30},"name":"GetKeyboardTimestamps","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::Request::GetKeyboardTimestamps","value":"Request::GetKeyboardTimestamps { id, keyboard }","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":"subscribe to high-resolution keyboard timestamp events","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1016},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7642190,"byte_end":7642210,"line_start":18,"line_end":18,"column_start":9,"column_end":29},"name":"GetPointerTimestamps","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::Request::GetPointerTimestamps","value":"Request::GetPointerTimestamps { id, pointer }","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":"subscribe to high-resolution pointer timestamp events","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1019},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7642840,"byte_end":7642858,"line_start":23,"line_end":23,"column_start":9,"column_end":27},"name":"GetTouchTimestamps","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::Request::GetTouchTimestamps","value":"Request::GetTouchTimestamps { id, touch }","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":"subscribe to high-resolution touch timestamp events","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1010},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7640734,"byte_end":7640741,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the input timestamps manager object\\n\\nInforms the server that the client will no longer be using this\\nprotocol object. Existing objects created by this object are not\\naffected.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"subscribe to high-resolution keyboard timestamp events\\n\\nCreates a new input timestamps object that represents a subscription\\nto high-resolution timestamp events for all wl_keyboard events that\\ncarry a timestamp.\\n\\nIf the associated wl_keyboard object is invalidated, either through\\nclient action (e.g. release) or server-side changes, the input\\ntimestamps object becomes inert and the client should destroy it\\nby calling zwp_input_timestamps_v1.destroy.\"]\n    GetKeyboardTimestamps {\n        id: Proxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>,\n        keyboard: Proxy<super::wl_keyboard::WlKeyboard>,\n    },\n\n    #[doc =\n      \"subscribe to high-resolution pointer timestamp events\\n\\nCreates a new input timestamps object that represents a subscription\\nto high-resolution timestamp events for all wl_pointer events that\\ncarry a timestamp.\\n\\nIf the associated wl_pointer object is invalidated, either through\\nclient action (e.g. release) or server-side changes, the input\\ntimestamps object becomes inert and the client should destroy it\\nby calling zwp_input_timestamps_v1.destroy.\"]\n    GetPointerTimestamps {\n        id: Proxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>,\n        pointer: Proxy<super::wl_pointer::WlPointer>,\n    },\n\n    #[doc =\n      \"subscribe to high-resolution touch timestamp events\\n\\nCreates a new input timestamps object that represents a subscription\\nto high-resolution timestamp events for all wl_touch events that\\ncarry a timestamp.\\n\\nIf the associated wl_touch object becomes invalid, either through\\nclient action (e.g. release) or server-side changes, the input\\ntimestamps object becomes inert and the client should destroy it\\nby calling zwp_input_timestamps_v1.destroy.\"]\n    GetTouchTimestamps {\n        id: Proxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>,\n        touch: Proxy<super::wl_touch::WlTouch>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1039},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7647998,"byte_end":7648003,"line_start":148,"line_end":148,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1053},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7649303,"byte_end":7649330,"line_start":191,"line_end":191,"column_start":16,"column_end":43},"name":"ZwpInputTimestampsManagerV1","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::ZwpInputTimestampsManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1061},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7649721,"byte_end":7649734,"line_start":201,"line_end":201,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7650059,"byte_end":7650066,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":"destroy the input timestamps manager object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7650573,"byte_end":7650596,"line_start":205,"line_end":205,"column_start":12,"column_end":35},"name":"get_keyboard_timestamps","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::RequestsTrait::get_keyboard_timestamps","value":"pub fn get_keyboard_timestamps<F>(&Self,\n                                  &Proxy<super::wl_keyboard::WlKeyboard>, F)\n-> Result<Proxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>) ->\nProxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":"subscribe to high-resolution keyboard timestamp events","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7651479,"byte_end":7651501,"line_start":215,"line_end":215,"column_start":12,"column_end":34},"name":"get_pointer_timestamps","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::RequestsTrait::get_pointer_timestamps","value":"pub fn get_pointer_timestamps<F>(&Self, &Proxy<super::wl_pointer::WlPointer>,\n                                 F)\n-> Result<Proxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>) ->\nProxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":"subscribe to high-resolution pointer timestamp events","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7652376,"byte_end":7652396,"line_start":225,"line_end":225,"column_start":12,"column_end":32},"name":"get_touch_timestamps","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::RequestsTrait::get_touch_timestamps","value":"pub fn get_touch_timestamps<F>(&Self, &Proxy<super::wl_touch::WlTouch>, F)\n-> Result<Proxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>) ->\nProxy<super::zwp_input_timestamps_v1::ZwpInputTimestampsV1>","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":"subscribe to high-resolution touch timestamp events","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1077},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7655021,"byte_end":7655038,"line_start":290,"line_end":290,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1078},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7655134,"byte_end":7655167,"line_start":292,"line_end":292,"column_start":15,"column_end":48},"name":"REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1079},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7655263,"byte_end":7655295,"line_start":294,"line_end":294,"column_start":15,"column_end":47},"name":"REQ_GET_POINTER_TIMESTAMPS_SINCE","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::REQ_GET_POINTER_TIMESTAMPS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1080},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7655391,"byte_end":7655421,"line_start":296,"line_end":296,"column_start":15,"column_end":45},"name":"REQ_GET_TOUCH_TIMESTAMPS_SINCE","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_manager_v1::REQ_GET_TOUCH_TIMESTAMPS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1081},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7655701,"byte_end":7655724,"line_start":299,"line_end":299,"column_start":9,"column_end":32},"name":"zwp_input_timestamps_v1","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":12281},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1116},{"krate":0,"index":1121},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1147}],"decl_id":null,"docs":"context object for input timestamps","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1100},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7656322,"byte_end":7656329,"line_start":308,"line_end":308,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1099},"children":[],"decl_id":null,"docs":"destroy the input timestamps object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1099},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7656007,"byte_end":7656014,"line_start":306,"line_end":306,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the input timestamps object\\n\\nInforms the server that the client will no longer be using this\\nprotocol object. After the server processes the request, no more\\ntimestamp events will be emitted.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":1100}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1117},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7658967,"byte_end":7658976,"line_start":369,"line_end":369,"column_start":9,"column_end":18},"name":"Timestamp","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::Event::Timestamp","value":"Event::Timestamp { tv_sec_hi, tv_sec_lo, tv_nsec }","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":"high-resolution timestamp event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1116},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7658143,"byte_end":7658148,"line_start":367,"line_end":367,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"high-resolution timestamp event\\n\\nThe timestamp event is associated with the first subsequent input event\\ncarrying a timestamp which belongs to the set of input events this\\nobject is subscribed to.\\n\\nThe timestamp provided by this event is a high-resolution version of\\nthe timestamp argument of the associated input event. The provided\\ntimestamp is in the same clock domain and is at least as accurate as\\nthe associated input event timestamp.\\n\\nThe timestamp is expressed as tv_sec_hi, tv_sec_lo, tv_nsec triples,\\neach component being an unsigned 32-bit value. Whole seconds are in\\ntv_sec which is a 64-bit value combined from tv_sec_hi and tv_sec_lo,\\nand the additional fractional part in tv_nsec as nanoseconds. Hence,\\nfor valid timestamps tv_nsec must be in [0, 999999999].\"]\n    Timestamp {\n        tv_sec_hi: u32,\n        tv_sec_lo: u32,\n        tv_nsec: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662080,"byte_end":7662100,"line_start":463,"line_end":463,"column_start":16,"column_end":36},"name":"ZwpInputTimestampsV1","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::ZwpInputTimestampsV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1142},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662468,"byte_end":7662481,"line_start":473,"line_end":473,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1143}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662822,"byte_end":7662829,"line_start":475,"line_end":475,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":"destroy the input timestamps object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1146},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7663107,"byte_end":7663124,"line_start":484,"line_end":484,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1147},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7663218,"byte_end":7663237,"line_start":486,"line_end":486,"column_start":15,"column_end":34},"name":"EVT_TIMESTAMP_SINCE","qualname":"::unstable::input_timestamps::v1::generated::client::zwp_input_timestamps_v1::EVT_TIMESTAMP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8317,"byte_end":8343,"line_start":73,"line_end":73,"column_start":9,"column_end":35},"name":"keyboard_shortcuts_inhibit","qualname":"::unstable::keyboard_shortcuts_inhibit","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":1148}],"decl_id":null,"docs":" Protocol for inhibiting the compositor keyboard shortcuts","sig":null,"attributes":[{"value":"! Protocol for inhibiting the compositor keyboard shortcuts","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8350,"byte_end":8411,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8416,"byte_end":8419,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"! This protocol specifies a way for a client to request the compositor","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8424,"byte_end":8496,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"! to ignore its own keyboard shortcuts for a given seat, so that all","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8501,"byte_end":8571,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"! key events from that seat get forwarded to a surface.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8576,"byte_end":8633,"line_start":78,"line_end":78,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1148},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::keyboard_shortcuts_inhibit::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":1186},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_interfaces.rs","byte_start":7663766,"byte_end":7663816,"line_start":11,"line_end":11,"column_start":16,"column_end":66},"name":"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::c_interfaces::zwp_keyboard_shortcuts_inhibit_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1188},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_interfaces.rs","byte_start":7664331,"byte_end":7664382,"line_start":25,"line_end":25,"column_start":16,"column_end":67},"name":"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::c_interfaces::zwp_keyboard_shortcuts_inhibit_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1189},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_interfaces.rs","byte_start":7664710,"byte_end":7664754,"line_start":33,"line_end":33,"column_start":16,"column_end":60},"name":"zwp_keyboard_shortcuts_inhibitor_v1_requests","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::c_interfaces::zwp_keyboard_shortcuts_inhibitor_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1191},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_interfaces.rs","byte_start":7664960,"byte_end":7665002,"line_start":38,"line_end":38,"column_start":16,"column_end":58},"name":"zwp_keyboard_shortcuts_inhibitor_v1_events","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::c_interfaces::zwp_keyboard_shortcuts_inhibitor_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1193},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_interfaces.rs","byte_start":7665420,"byte_end":7665465,"line_start":50,"line_end":50,"column_start":16,"column_end":61},"name":"zwp_keyboard_shortcuts_inhibitor_v1_interface","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::c_interfaces::zwp_keyboard_shortcuts_inhibitor_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7665942,"byte_end":7665983,"line_start":2,"line_end":2,"column_start":9,"column_end":50},"name":"zwp_keyboard_shortcuts_inhibit_manager_v1","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":12351},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1337},{"krate":0,"index":1348},{"krate":0,"index":1346},{"krate":0,"index":1344},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1222},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1267},{"krate":0,"index":1268}],"decl_id":null,"docs":"context object for keyboard grab_manager","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1338},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666416,"byte_end":7666432,"line_start":13,"line_end":13,"column_start":9,"column_end":25},"name":"AlreadyInhibited","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Error::AlreadyInhibited","value":"Error::AlreadyInhibited","parent":{"krate":0,"index":1337},"children":[],"decl_id":null,"docs":"the shortcuts are already inhibited for this surface\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1337},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666328,"byte_end":7666333,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Error","value":"pub enum Error {\n\n    #[doc = \"the shortcuts are already inhibited for this surface\"]\n    AlreadyInhibited = ,\n}","parent":null,"children":[{"krate":0,"index":1338}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666257,"byte_end":7666269,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666476,"byte_end":7666484,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666660,"byte_end":7666666,"line_start":22,"line_end":22,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666949,"byte_end":7666956,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":"destroy the keyboard shortcuts inhibitor object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1218},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7667284,"byte_end":7667300,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"name":"InhibitShortcuts","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request::InhibitShortcuts","value":"Request::InhibitShortcuts { id, surface, seat }","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":"create a new keyboard shortcuts inhibitor object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1215},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666737,"byte_end":7666744,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the keyboard shortcuts inhibitor object\\n\\nDestroy the keyboard shortcuts inhibitor manager.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a new keyboard shortcuts inhibitor object\\n\\nCreate a new keyboard shortcuts inhibitor object associated with\\nthe given surface for the given seat.\\n\\nIf shortcuts are already inhibited for the specified seat and surface,\\na protocol error \\\"already_inhibited\\\" is raised by the compositor.\"]\n    InhibitShortcuts {\n        id: Proxy<super::zwp_keyboard_shortcuts_inhibitor_v1::ZwpKeyboardShortcutsInhibitorV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1237},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7670755,"byte_end":7670760,"line_start":125,"line_end":125,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7672060,"byte_end":7672096,"line_start":168,"line_end":168,"column_start":16,"column_end":52},"name":"ZwpKeyboardShortcutsInhibitManagerV1","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::ZwpKeyboardShortcutsInhibitManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1259},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7672544,"byte_end":7672557,"line_start":180,"line_end":180,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7672795,"byte_end":7672802,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"destroy the keyboard shortcuts inhibitor object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7673146,"byte_end":7673163,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"inhibit_shortcuts","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::RequestsTrait::inhibit_shortcuts","value":"pub fn inhibit_shortcuts<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                            &Proxy<super::wl_seat::WlSeat>, F)\n->\n    Result<Proxy<super::zwp_keyboard_shortcuts_inhibitor_v1::ZwpKeyboardShortcutsInhibitorV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_keyboard_shortcuts_inhibitor_v1::ZwpKeyboardShortcutsInhibitorV1>)\n->\nProxy<super::zwp_keyboard_shortcuts_inhibitor_v1::ZwpKeyboardShortcutsInhibitorV1>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"create a new keyboard shortcuts inhibitor object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1267},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7674967,"byte_end":7674984,"line_start":234,"line_end":234,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1268},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7675080,"byte_end":7675107,"line_start":236,"line_end":236,"column_start":15,"column_end":42},"name":"REQ_INHIBIT_SHORTCUTS_SINCE","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibit_manager_v1::REQ_INHIBIT_SHORTCUTS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1269},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7676864,"byte_end":7676899,"line_start":239,"line_end":239,"column_start":9,"column_end":44},"name":"zwp_keyboard_shortcuts_inhibitor_v1","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":12379},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1304},{"krate":0,"index":1309},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":"context object for keyboard shortcuts inhibitor","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7677416,"byte_end":7677423,"line_start":248,"line_end":248,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1287},"children":[],"decl_id":null,"docs":"destroy the keyboard shortcuts inhibitor object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1287},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7677182,"byte_end":7677189,"line_start":246,"line_end":246,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the keyboard shortcuts inhibitor object\\n\\nRemove the keyboard shortcuts inhibitor from the associated wl_surface.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":1288}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7679828,"byte_end":7679834,"line_start":309,"line_end":309,"column_start":9,"column_end":15},"name":"Active","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::Event::Active","value":"Event::Active","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"shortcuts are inhibited","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7680012,"byte_end":7680020,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"name":"Inactive","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::Event::Inactive","value":"Event::Inactive","parent":{"krate":0,"index":1304},"children":[],"decl_id":null,"docs":"shortcuts are restored","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1304},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7679237,"byte_end":7679242,"line_start":307,"line_end":307,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"shortcuts are inhibited\\n\\nThis event indicates that the shortcut inhibitor is active.\\n\\nThe compositor sends this event every time compositor shortcuts\\nare inhibited on behalf of the surface. When active, the client\\nmay receive input events normally reserved by the compositor\\n(see zwp_keyboard_shortcuts_inhibitor_v1).\\n\\nThis occurs typically when the initial request \\\"inhibit_shortcuts\\\"\\nfirst becomes active or when the user instructs the compositor to\\nre-enable and existing shortcuts inhibitor using any mechanism\\noffered by the compositor.\"]\n    Active,\n\n    #[doc =\n      \"shortcuts are restored\\n\\nThis event indicates that the shortcuts inhibitor is inactive,\\nnormal shortcuts processing is restored by the compositor.\"]\n    Inactive,\n}","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1307}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7681903,"byte_end":7681934,"line_start":375,"line_end":375,"column_start":16,"column_end":47},"name":"ZwpKeyboardShortcutsInhibitorV1","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::ZwpKeyboardShortcutsInhibitorV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1330},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7682337,"byte_end":7682350,"line_start":385,"line_end":385,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1331}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7682610,"byte_end":7682617,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1330},"children":[],"decl_id":null,"docs":"destroy the keyboard shortcuts inhibitor object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1334},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7682906,"byte_end":7682923,"line_start":396,"line_end":396,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1335},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7683017,"byte_end":7683033,"line_start":398,"line_end":398,"column_start":15,"column_end":31},"name":"EVT_ACTIVE_SINCE","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::EVT_ACTIVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1336},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7683127,"byte_end":7683145,"line_start":400,"line_end":400,"column_start":15,"column_end":33},"name":"EVT_INACTIVE_SINCE","qualname":"::unstable::keyboard_shortcuts_inhibit::v1::generated::client::zwp_keyboard_shortcuts_inhibitor_v1::EVT_INACTIVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8859,"byte_end":8871,"line_start":91,"line_end":91,"column_start":9,"column_end":21},"name":"linux_dmabuf","qualname":"::unstable::linux_dmabuf","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":1349}],"decl_id":null,"docs":" Linux DMA-BUF protocol\n","sig":null,"attributes":[{"value":"! Linux DMA-BUF protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8878,"byte_end":8904,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1349},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::linux_dmabuf::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":1385},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_interfaces.rs","byte_start":7683730,"byte_end":7683758,"line_start":14,"line_end":14,"column_start":16,"column_end":44},"name":"zwp_linux_dmabuf_v1_requests","qualname":"::unstable::linux_dmabuf::v1::generated::c_interfaces::zwp_linux_dmabuf_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1387},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_interfaces.rs","byte_start":7684221,"byte_end":7684247,"line_start":26,"line_end":26,"column_start":16,"column_end":42},"name":"zwp_linux_dmabuf_v1_events","qualname":"::unstable::linux_dmabuf::v1::generated::c_interfaces::zwp_linux_dmabuf_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1389},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_interfaces.rs","byte_start":7684670,"byte_end":7684699,"line_start":38,"line_end":38,"column_start":16,"column_end":45},"name":"zwp_linux_dmabuf_v1_interface","qualname":"::unstable::linux_dmabuf::v1::generated::c_interfaces::zwp_linux_dmabuf_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1392},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_interfaces.rs","byte_start":7685308,"byte_end":7685343,"line_start":53,"line_end":53,"column_start":16,"column_end":51},"name":"zwp_linux_buffer_params_v1_requests","qualname":"::unstable::linux_dmabuf::v1::generated::c_interfaces::zwp_linux_buffer_params_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1396},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_interfaces.rs","byte_start":7686348,"byte_end":7686381,"line_start":77,"line_end":77,"column_start":16,"column_end":49},"name":"zwp_linux_buffer_params_v1_events","qualname":"::unstable::linux_dmabuf::v1::generated::c_interfaces::zwp_linux_buffer_params_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1398},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_interfaces.rs","byte_start":7686836,"byte_end":7686872,"line_start":89,"line_end":89,"column_start":16,"column_end":52},"name":"zwp_linux_buffer_params_v1_interface","qualname":"::unstable::linux_dmabuf::v1::generated::c_interfaces::zwp_linux_buffer_params_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1399},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7689987,"byte_end":7690006,"line_start":2,"line_end":2,"column_start":9,"column_end":28},"name":"zwp_linux_dmabuf_v1","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":12445},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1422},{"krate":0,"index":1437},{"krate":0,"index":1444},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1465},{"krate":0,"index":1469},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476}],"decl_id":null,"docs":"factory for creating dmabuf-based wl_buffers","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7690505,"byte_end":7690512,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":"unbind the factory","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7690807,"byte_end":7690819,"line_start":13,"line_end":13,"column_start":9,"column_end":21},"name":"CreateParams","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::Request::CreateParams","value":"Request::CreateParams { params_id }","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":"create a temporary object for buffer parameters","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1417},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7690289,"byte_end":7690296,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"unbind the factory\\n\\nObjects created through this interface, especially wl_buffers, will\\nremain valid.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a temporary object for buffer parameters\\n\\nThis temporary object is used to collect multiple dmabuf handles into\\na single batch to create a wl_buffer. It can only be used once and\\nshould be destroyed after a 'created' or 'failed' event has been\\nreceived.\"]\n    CreateParams {\n        params_id: Proxy<super::zwp_linux_buffer_params_v1::ZwpLinuxBufferParamsV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1420}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1438},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7694331,"byte_end":7694337,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"name":"Format","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::Event::Format","value":"Event::Format { format }","parent":{"krate":0,"index":1437},"children":[],"decl_id":null,"docs":"supported buffer format","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1440},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7694916,"byte_end":7694924,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"Modifier","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::Event::Modifier","value":"Event::Modifier { format, modifier_hi, modifier_lo }","parent":{"krate":0,"index":1437},"children":[],"decl_id":null,"docs":"supported buffer format modifier","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1437},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7693698,"byte_end":7693703,"line_start":96,"line_end":96,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"supported buffer format\\n\\nThis event advertises one buffer format that the server supports.\\nAll the supported formats are advertised once when the client\\nbinds to this interface. A roundtrip after binding guarantees\\nthat the client has received all supported formats.\\n\\nFor the definition of the format codes, see the\\nzwp_linux_buffer_params_v1::create request.\\n\\nWarning: the 'format' event is likely to be deprecated and replaced\\nwith the 'modifier' event introduced in zwp_linux_dmabuf_v1\\nversion 3, described below. Please refrain from using the information\\nreceived from this event.\"]\n    Format {\n        format: u32,\n    },\n\n    #[doc =\n      \"supported buffer format modifier\\n\\nThis event advertises the formats that the server supports, along with\\nthe modifiers supported for each format. All the supported modifiers\\nfor all the supported formats are advertised once when the client\\nbinds to this interface. A roundtrip after binding guarantees that\\nthe client has received all supported format-modifier pairs.\\n\\nFor the definition of the format and modifier codes, see the\\nzwp_linux_buffer_params_v1::create request.\\n\\nOnly available since version 3 of the interface\"]\n    Modifier {\n        format: u32,\n        modifier_hi: u32,\n        modifier_lo: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1440}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7698916,"byte_end":7698932,"line_start":218,"line_end":218,"column_start":16,"column_end":32},"name":"ZwpLinuxDmabufV1","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::ZwpLinuxDmabufV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1465},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7699288,"byte_end":7699301,"line_start":228,"line_end":228,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7699543,"byte_end":7699550,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":"unbind the factory","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7699861,"byte_end":7699874,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"create_params","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::RequestsTrait::create_params","value":"pub fn create_params<F>(&Self, F)\n->\n    Result<Proxy<super::zwp_linux_buffer_params_v1::ZwpLinuxBufferParamsV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_linux_buffer_params_v1::ZwpLinuxBufferParamsV1>)\n-> Proxy<super::zwp_linux_buffer_params_v1::ZwpLinuxBufferParamsV1>","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":"create a temporary object for buffer parameters","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1473},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7701075,"byte_end":7701092,"line_start":264,"line_end":264,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1474},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7701188,"byte_end":7701211,"line_start":266,"line_end":266,"column_start":15,"column_end":38},"name":"REQ_CREATE_PARAMS_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::REQ_CREATE_PARAMS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1475},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7701305,"byte_end":7701321,"line_start":268,"line_end":268,"column_start":15,"column_end":31},"name":"EVT_FORMAT_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::EVT_FORMAT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1476},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7701415,"byte_end":7701433,"line_start":270,"line_end":270,"column_start":15,"column_end":33},"name":"EVT_MODIFIER_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_dmabuf_v1::EVT_MODIFIER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1477},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702265,"byte_end":7702291,"line_start":273,"line_end":273,"column_start":9,"column_end":35},"name":"zwp_linux_buffer_params_v1","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":12473},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1583},{"krate":0,"index":1615},{"krate":0,"index":1613},{"krate":0,"index":1611},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1495},{"krate":0,"index":1616},{"krate":0,"index":1633},{"krate":0,"index":1631},{"krate":0,"index":1629},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1522},{"krate":0,"index":1539},{"krate":0,"index":1544},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1565},{"krate":0,"index":1571},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"decl_id":null,"docs":"parameters for creating a dmabuf-based wl_buffer","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1584},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702739,"byte_end":7702750,"line_start":284,"line_end":284,"column_start":9,"column_end":20},"name":"AlreadyUsed","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::AlreadyUsed","value":"Error::AlreadyUsed","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"the dmabuf_batch object has already been used to create a wl_buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1587},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702809,"byte_end":7702817,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"name":"PlaneIdx","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::PlaneIdx","value":"Error::PlaneIdx","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"plane index out of bounds\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1590},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702882,"byte_end":7702890,"line_start":288,"line_end":288,"column_start":9,"column_end":17},"name":"PlaneSet","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::PlaneSet","value":"Error::PlaneSet","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"the plane index was already set\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1593},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702969,"byte_end":7702979,"line_start":290,"line_end":290,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::Incomplete","value":"Error::Incomplete","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"missing or too many planes to create a buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1596},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703033,"byte_end":7703046,"line_start":292,"line_end":292,"column_start":9,"column_end":22},"name":"InvalidFormat","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::InvalidFormat","value":"Error::InvalidFormat","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"format not supported\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1599},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703103,"byte_end":7703120,"line_start":294,"line_end":294,"column_start":9,"column_end":26},"name":"InvalidDimensions","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::InvalidDimensions","value":"Error::InvalidDimensions","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"invalid width or height\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1602},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703204,"byte_end":7703215,"line_start":296,"line_end":296,"column_start":9,"column_end":20},"name":"OutOfBounds","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::OutOfBounds","value":"Error::OutOfBounds","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"offset + stride * height goes out of dmabuf bounds\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1605},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703350,"byte_end":7703365,"line_start":298,"line_end":298,"column_start":9,"column_end":24},"name":"InvalidWlBuffer","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error::InvalidWlBuffer","value":"Error::InvalidWlBuffer","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1583},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702636,"byte_end":7702641,"line_start":282,"line_end":282,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Error","value":"pub enum Error {\n\n    #[doc =\n      \"the dmabuf_batch object has already been used to create a wl_buffer\"]\n    AlreadyUsed = ,\n\n    #[doc = \"plane index out of bounds\"]\n    PlaneIdx = ,\n\n    #[doc = \"the plane index was already set\"]\n    PlaneSet = ,\n\n    #[doc = \"missing or too many planes to create a buffer\"]\n    Incomplete = ,\n\n    #[doc = \"format not supported\"]\n    InvalidFormat = ,\n\n    #[doc = \"invalid width or height\"]\n    InvalidDimensions = ,\n\n    #[doc = \"offset + stride * height goes out of dmabuf bounds\"]\n    OutOfBounds = ,\n\n    #[doc =\n      \"invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params\"]\n    InvalidWlBuffer = ,\n}","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7702565,"byte_end":7702577,"line_start":280,"line_end":280,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703409,"byte_end":7703417,"line_start":301,"line_end":301,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703922,"byte_end":7703928,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704120,"byte_end":7704127,"line_start":322,"line_end":322,"column_start":9,"column_end":16},"name":"YInvert","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Flags::YInvert","value":"Flags::YInvert","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":"contents are y-inverted\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704182,"byte_end":7704192,"line_start":324,"line_end":324,"column_start":9,"column_end":19},"name":"Interlaced","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Flags::Interlaced","value":"Flags::Interlaced","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":"content is interlaced\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704244,"byte_end":7704255,"line_start":326,"line_end":326,"column_start":9,"column_end":20},"name":"BottomFirst","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Flags::BottomFirst","value":"Flags::BottomFirst","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":"bottom field first\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1616},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704061,"byte_end":7704066,"line_start":320,"line_end":320,"column_start":14,"column_end":19},"name":"Flags","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Flags","value":"pub enum Flags {\n\n    #[doc = \"contents are y-inverted\"]\n    YInvert = ,\n\n    #[doc = \"content is interlaced\"]\n    Interlaced = ,\n\n    #[doc = \"bottom field first\"]\n    BottomFirst = ,\n}","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703990,"byte_end":7704002,"line_start":318,"line_end":318,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704299,"byte_end":7704307,"line_start":329,"line_end":329,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Flags>::from_raw","value":"pub fn from_raw(u32) -> Option<Flags>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704567,"byte_end":7704573,"line_start":337,"line_end":337,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Flags>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1502},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704876,"byte_end":7704883,"line_start":343,"line_end":343,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":"delete this object, used or not","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1504},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7705543,"byte_end":7705546,"line_start":345,"line_end":345,"column_start":9,"column_end":12},"name":"Add","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Request::Add","value":"Request::Add { fd, plane_idx, offset, stride, modifier_hi, modifier_lo }","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":"add a dmabuf to the temporary set","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1511},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7708848,"byte_end":7708854,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"name":"Create","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Request::Create","value":"Request::Create { width, height, format, flags }","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":"create a wl_buffer from the given dmabufs","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1516},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7710114,"byte_end":7710125,"line_start":361,"line_end":361,"column_start":9,"column_end":20},"name":"CreateImmed","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Request::CreateImmed","value":"Request::CreateImmed { buffer_id, width, height, format, flags }","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":"immediately create a wl_buffer from the given dmabufs","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1501},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704644,"byte_end":7704651,"line_start":341,"line_end":341,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"delete this object, used or not\\n\\nCleans up the temporary data sent to the server for dmabuf-based\\nwl_buffer creation.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"add a dmabuf to the temporary set\\n\\nThis request adds one dmabuf to the set in this\\nzwp_linux_buffer_params_v1.\\n\\nThe 64-bit unsigned value combined from modifier_hi and modifier_lo\\nis the dmabuf layout modifier. DRM AddFB2 ioctl calls this the\\nfb modifier, which is defined in drm_mode.h of Linux UAPI.\\nThis is an opaque token. Drivers use this token to express tiling,\\ncompression, etc. driver-specific modifications to the base format\\ndefined by the DRM fourcc code.\\n\\nThis request raises the PLANE_IDX error if plane_idx is too large.\\nThe error PLANE_SET is raised if attempting to set a plane that\\nwas already set.\"]\n    Add {\n        fd: ::std::os::unix::io::RawFd,\n        plane_idx: u32,\n        offset: u32,\n        stride: u32,\n        modifier_hi: u32,\n        modifier_lo: u32,\n    },\n\n    #[doc =\n      \"create a wl_buffer from the given dmabufs\\n\\nThis asks for creation of a wl_buffer from the added dmabuf\\nbuffers. The wl_buffer is not created immediately but returned via\\nthe 'created' event if the dmabuf sharing succeeds. The sharing\\nmay fail at runtime for reasons a client cannot predict, in\\nwhich case the 'failed' event is triggered.\\n\\nThe 'format' argument is a DRM_FORMAT code, as defined by the\\nlibdrm's drm_fourcc.h. The Linux kernel's DRM sub-system is the\\nauthoritative source on how the format codes should work.\\n\\nThe 'flags' is a bitfield of the flags defined in enum \\\"flags\\\".\\n'y_invert' means the that the image needs to be y-flipped.\\n\\nFlag 'interlaced' means that the frame in the buffer is not\\nprogressive as usual, but interlaced. An interlaced buffer as\\nsupported here must always contain both top and bottom fields.\\nThe top field always begins on the first pixel row. The temporal\\nordering between the two fields is top field first, unless\\n'bottom_first' is specified. It is undefined whether 'bottom_first'\\nis ignored if 'interlaced' is not set.\\n\\nThis protocol does not convey any information about field rate,\\nduration, or timing, other than the relative ordering between the\\ntwo fields in one buffer. A compositor may have to estimate the\\nintended field rate from the incoming buffer rate. It is undefined\\nwhether the time of receiving wl_surface.commit with a new buffer\\nattached, applying the wl_surface state, wl_surface.frame callback\\ntrigger, presentation, or any other point in the compositor cycle\\nis used to measure the frame or field times. There is no support\\nfor detecting missed or late frames/fields/buffers either, and\\nthere is no support whatsoever for cooperating with interlaced\\ncompositor output.\\n\\nThe composited image quality resulting from the use of interlaced\\nbuffers is explicitly undefined. A compositor may use elaborate\\nhardware features or software to deinterlace and create progressive\\noutput frames from a sequence of interlaced input buffers, or it\\nmay produce substandard image quality. However, compositors that\\ncannot guarantee reasonable image quality in all cases are recommended\\nto just reject all interlaced buffers.\\n\\nAny argument errors, including non-positive width or height,\\nmismatch between the number of planes and the format, bad\\nformat, bad offset or stride, may be indicated by fatal protocol\\nerrors: INCOMPLETE, INVALID_FORMAT, INVALID_DIMENSIONS,\\nOUT_OF_BOUNDS.\\n\\nDmabuf import errors in the server that are not obvious client\\nbugs are returned via the 'failed' event as non-fatal. This\\nallows attempting dmabuf sharing and falling back in the client\\nif it fails.\\n\\nThis request can be sent only once in the object's lifetime, after\\nwhich the only legal request is destroy. This object should be\\ndestroyed after issuing a 'create' request. Attempting to use this\\nobject after issuing 'create' raises ALREADY_USED protocol error.\\n\\nIt is not mandatory to issue 'create'. If a client wants to\\ncancel the buffer creation, it can just destroy this object.\"]\n    Create {\n        width: i32,\n        height: i32,\n        format: u32,\n        flags: u32,\n    },\n\n    #[doc =\n      \"immediately create a wl_buffer from the given dmabufs\\n\\nThis asks for immediate creation of a wl_buffer by importing the\\nadded dmabufs.\\n\\nIn case of import success, no event is sent from the server, and the\\nwl_buffer is ready to be used by the client.\\n\\nUpon import failure, either of the following may happen, as seen fit\\nby the implementation:\\n- the client is terminated with one of the following fatal protocol\\nerrors:\\n- INCOMPLETE, INVALID_FORMAT, INVALID_DIMENSIONS, OUT_OF_BOUNDS,\\nin case of argument errors such as mismatch between the number\\nof planes and the format, bad format, non-positive width or\\nheight, or bad offset or stride.\\n- INVALID_WL_BUFFER, in case the cause for failure is unknown or\\nplaform specific.\\n- the server creates an invalid wl_buffer, marks it as failed and\\nsends a 'failed' event to the client. The result of using this\\ninvalid wl_buffer as an argument in any request by the client is\\ndefined by the compositor implementation.\\n\\nThis takes the same arguments as a 'create' request, and obeys the\\nsame restrictions.\\n\\nOnly available since version 2 of the interface\"]\n    CreateImmed {\n        buffer_id: Proxy<super::wl_buffer::WlBuffer>,\n        width: i32,\n        height: i32,\n        format: u32,\n        flags: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1511},{"krate":0,"index":1516}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1540},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7717514,"byte_end":7717521,"line_start":567,"line_end":567,"column_start":9,"column_end":16},"name":"Created","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Event::Created","value":"Event::Created { buffer }","parent":{"krate":0,"index":1539},"children":[],"decl_id":null,"docs":"buffer creation succeeded","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7717882,"byte_end":7717888,"line_start":571,"line_end":571,"column_start":9,"column_end":15},"name":"Failed","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Event::Failed","value":"Event::Failed","parent":{"krate":0,"index":1539},"children":[],"decl_id":null,"docs":"buffer creation failed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1539},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7717230,"byte_end":7717235,"line_start":565,"line_end":565,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"buffer creation succeeded\\n\\nThis event indicates that the attempted buffer creation was\\nsuccessful. It provides the new wl_buffer referencing the dmabuf(s).\\n\\nUpon receiving this event, the client should destroy the\\nzlinux_dmabuf_params object.\"]\n    Created {\n        buffer: NewProxy<super::wl_buffer::WlBuffer>,\n    },\n\n    #[doc =\n      \"buffer creation failed\\n\\nThis event indicates that the attempted buffer creation has\\nfailed. It usually means that one of the dmabuf constraints\\nhas not been fulfilled.\\n\\nUpon receiving this event, the client should destroy the\\nzlinux_buffer_params object.\"]\n    Failed,\n}","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1542}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1557},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7720692,"byte_end":7720714,"line_start":657,"line_end":657,"column_start":16,"column_end":38},"name":"ZwpLinuxBufferParamsV1","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::ZwpLinuxBufferParamsV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1565},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7721090,"byte_end":7721103,"line_start":667,"line_end":667,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7721361,"byte_end":7721368,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1565},"children":[],"decl_id":null,"docs":"delete this object, used or not","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7722044,"byte_end":7722047,"line_start":671,"line_end":671,"column_start":12,"column_end":15},"name":"add","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::RequestsTrait::add","value":"pub fn add(&Self, ::std::os::unix::io::RawFd, u32, u32, u32, u32, u32) -> ()","parent":{"krate":0,"index":1565},"children":[],"decl_id":null,"docs":"add a dmabuf to the temporary set","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7725376,"byte_end":7725382,"line_start":681,"line_end":681,"column_start":12,"column_end":18},"name":"create","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::RequestsTrait::create","value":"pub fn create(&Self, i32, i32, u32, u32) -> ()","parent":{"krate":0,"index":1565},"children":[],"decl_id":null,"docs":"create a wl_buffer from the given dmabufs","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7726599,"byte_end":7726611,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"create_immed","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::RequestsTrait::create_immed","value":"pub fn create_immed<F>(&Self, i32, i32, u32, u32, F)\n-> Result<Proxy<super::wl_buffer::WlBuffer>, ()> where\nF: FnOnce(NewProxy<super::wl_buffer::WlBuffer>) ->\nProxy<super::wl_buffer::WlBuffer>","parent":{"krate":0,"index":1565},"children":[],"decl_id":null,"docs":"immediately create a wl_buffer from the given dmabufs","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1577},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7728691,"byte_end":7728708,"line_start":749,"line_end":749,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1578},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7728804,"byte_end":7728817,"line_start":751,"line_end":751,"column_start":15,"column_end":28},"name":"REQ_ADD_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::REQ_ADD_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1579},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7728913,"byte_end":7728929,"line_start":753,"line_end":753,"column_start":15,"column_end":31},"name":"REQ_CREATE_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::REQ_CREATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1580},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7729025,"byte_end":7729047,"line_start":755,"line_end":755,"column_start":15,"column_end":37},"name":"REQ_CREATE_IMMED_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::REQ_CREATE_IMMED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1581},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7729141,"byte_end":7729158,"line_start":757,"line_end":757,"column_start":15,"column_end":32},"name":"EVT_CREATED_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::EVT_CREATED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1582},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7729252,"byte_end":7729268,"line_start":759,"line_end":759,"column_start":15,"column_end":31},"name":"EVT_FAILED_SINCE","qualname":"::unstable::linux_dmabuf::v1::generated::client::zwp_linux_buffer_params_v1::EVT_FAILED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9050,"byte_end":9080,"line_start":102,"line_end":102,"column_start":9,"column_end":39},"name":"linux_explicit_synchronization","qualname":"::unstable::linux_explicit_synchronization","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":1634}],"decl_id":null,"docs":" Linux explicit synchronization protocol\n","sig":null,"attributes":[{"value":"! Linux explicit synchronization protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9087,"byte_end":9130,"line_start":103,"line_end":103,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1634},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::linux_explicit_synchronization::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":1670},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_interfaces.rs","byte_start":7729768,"byte_end":7729814,"line_start":10,"line_end":10,"column_start":16,"column_end":62},"name":"zwp_linux_explicit_synchronization_v1_requests","qualname":"::unstable::linux_explicit_synchronization::v1::generated::c_interfaces::zwp_linux_explicit_synchronization_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1672},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_interfaces.rs","byte_start":7730328,"byte_end":7730375,"line_start":24,"line_end":24,"column_start":16,"column_end":63},"name":"zwp_linux_explicit_synchronization_v1_interface","qualname":"::unstable::linux_explicit_synchronization::v1::generated::c_interfaces::zwp_linux_explicit_synchronization_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1675},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_interfaces.rs","byte_start":7730878,"byte_end":7730923,"line_start":34,"line_end":34,"column_start":16,"column_end":61},"name":"zwp_linux_surface_synchronization_v1_requests","qualname":"::unstable::linux_explicit_synchronization::v1::generated::c_interfaces::zwp_linux_surface_synchronization_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1677},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_interfaces.rs","byte_start":7731619,"byte_end":7731665,"line_start":53,"line_end":53,"column_start":16,"column_end":62},"name":"zwp_linux_surface_synchronization_v1_interface","qualname":"::unstable::linux_explicit_synchronization::v1::generated::c_interfaces::zwp_linux_surface_synchronization_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1678},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_interfaces.rs","byte_start":7731983,"byte_end":7732017,"line_start":61,"line_end":61,"column_start":16,"column_end":50},"name":"zwp_linux_buffer_release_v1_events","qualname":"::unstable::linux_explicit_synchronization::v1::generated::c_interfaces::zwp_linux_buffer_release_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1680},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_interfaces.rs","byte_start":7732453,"byte_end":7732490,"line_start":73,"line_end":73,"column_start":16,"column_end":53},"name":"zwp_linux_buffer_release_v1_interface","qualname":"::unstable::linux_explicit_synchronization::v1::generated::c_interfaces::zwp_linux_buffer_release_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1681},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7733651,"byte_end":7733688,"line_start":2,"line_end":2,"column_start":9,"column_end":46},"name":"zwp_linux_explicit_synchronization_v1","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":12539},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1896},{"krate":0,"index":1907},{"krate":0,"index":1905},{"krate":0,"index":1903},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1708},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1745},{"krate":0,"index":1749},{"krate":0,"index":1753},{"krate":0,"index":1754}],"decl_id":null,"docs":"protocol for providing explicit synchronization","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734128,"byte_end":7734149,"line_start":13,"line_end":13,"column_start":9,"column_end":30},"name":"SynchronizationExists","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::Error::SynchronizationExists","value":"Error::SynchronizationExists","parent":{"krate":0,"index":1896},"children":[],"decl_id":null,"docs":"the surface already has a synchronization object associated\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1896},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734033,"byte_end":7734038,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::Error","value":"pub enum Error {\n\n    #[doc = \"the surface already has a synchronization object associated\"]\n    SynchronizationExists = ,\n}","parent":null,"children":[{"krate":0,"index":1897}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7733962,"byte_end":7733974,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734193,"byte_end":7734201,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734382,"byte_end":7734388,"line_start":22,"line_end":22,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1703},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734811,"byte_end":7734818,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1702},"children":[],"decl_id":null,"docs":"destroy explicit synchronization factory object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1705},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7735471,"byte_end":7735489,"line_start":30,"line_end":30,"column_start":9,"column_end":27},"name":"GetSynchronization","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::Request::GetSynchronization","value":"Request::GetSynchronization { id, surface }","parent":{"krate":0,"index":1702},"children":[],"decl_id":null,"docs":"extend surface interface for explicit synchronization","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1702},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734459,"byte_end":7734466,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy explicit synchronization factory object\\n\\nDestroy this explicit synchronization factory object. Other objects,\\nincluding zwp_linux_surface_synchronization_v1 objects created by this\\nfactory, shall not be affected by this request.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"extend surface interface for explicit synchronization\\n\\nInstantiate an interface extension for the given wl_surface to provide\\nexplicit synchronization.\\n\\nIf the given wl_surface already has an explicit synchronization object\\nassociated, the synchronization_exists protocol error is raised.\\n\\nGraphics APIs, like EGL or Vulkan, that manage the buffer queue and\\ncommits of a wl_surface themselves, are likely to be using this\\nextension internally. If a client is using such an API for a\\nwl_surface, it should not directly use this extension on that surface,\\nto avoid raising a synchronization_exists protocol error.\"]\n    GetSynchronization {\n        id: Proxy<super::zwp_linux_surface_synchronization_v1::ZwpLinuxSurfaceSynchronizationV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1705}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1723},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7738631,"byte_end":7738636,"line_start":117,"line_end":117,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1737},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7739936,"byte_end":7739969,"line_start":160,"line_end":160,"column_start":16,"column_end":49},"name":"ZwpLinuxExplicitSynchronizationV1","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::ZwpLinuxExplicitSynchronizationV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1745},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7740378,"byte_end":7740391,"line_start":170,"line_end":170,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7740769,"byte_end":7740776,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1745},"children":[],"decl_id":null,"docs":"destroy explicit synchronization factory object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7741445,"byte_end":7741464,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"get_synchronization","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::RequestsTrait::get_synchronization","value":"pub fn get_synchronization<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n->\n    Result<Proxy<super::zwp_linux_surface_synchronization_v1::ZwpLinuxSurfaceSynchronizationV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_linux_surface_synchronization_v1::ZwpLinuxSurfaceSynchronizationV1>)\n->\nProxy<super::zwp_linux_surface_synchronization_v1::ZwpLinuxSurfaceSynchronizationV1>","parent":{"krate":0,"index":1745},"children":[],"decl_id":null,"docs":"extend surface interface for explicit synchronization","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1753},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7743145,"byte_end":7743162,"line_start":221,"line_end":221,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1754},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7743258,"byte_end":7743287,"line_start":223,"line_end":223,"column_start":15,"column_end":44},"name":"REQ_GET_SYNCHRONIZATION_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_explicit_synchronization_v1::REQ_GET_SYNCHRONIZATION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1755},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7744963,"byte_end":7744999,"line_start":226,"line_end":226,"column_start":9,"column_end":45},"name":"zwp_linux_surface_synchronization_v1","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":12567},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1908},{"krate":0,"index":1934},{"krate":0,"index":1932},{"krate":0,"index":1930},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1783},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1821},{"krate":0,"index":1826},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833}],"decl_id":null,"docs":"per-surface explicit synchronization support","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1909},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745435,"byte_end":7745447,"line_start":237,"line_end":237,"column_start":9,"column_end":21},"name":"InvalidFence","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error::InvalidFence","value":"Error::InvalidFence","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"the fence specified by the client could not be imported\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745530,"byte_end":7745544,"line_start":239,"line_end":239,"column_start":9,"column_end":23},"name":"DuplicateFence","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error::DuplicateFence","value":"Error::DuplicateFence","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"multiple fences added for a single surface commit\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1915},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745629,"byte_end":7745645,"line_start":241,"line_end":241,"column_start":9,"column_end":25},"name":"DuplicateRelease","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error::DuplicateRelease","value":"Error::DuplicateRelease","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"multiple releases added for a single surface commit\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1918},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745718,"byte_end":7745727,"line_start":243,"line_end":243,"column_start":9,"column_end":18},"name":"NoSurface","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error::NoSurface","value":"Error::NoSurface","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"the associated wl_surface was destroyed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745813,"byte_end":7745830,"line_start":245,"line_end":245,"column_start":9,"column_end":26},"name":"UnsupportedBuffer","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error::UnsupportedBuffer","value":"Error::UnsupportedBuffer","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"the buffer does not support explicit synchronization\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1924},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745886,"byte_end":7745894,"line_start":247,"line_end":247,"column_start":9,"column_end":17},"name":"NoBuffer","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error::NoBuffer","value":"Error::NoBuffer","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"no buffer was attached\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1908},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745344,"byte_end":7745349,"line_start":235,"line_end":235,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Error","value":"pub enum Error {\n\n    #[doc = \"the fence specified by the client could not be imported\"]\n    InvalidFence = ,\n\n    #[doc = \"multiple fences added for a single surface commit\"]\n    DuplicateFence = ,\n\n    #[doc = \"multiple releases added for a single surface commit\"]\n    DuplicateRelease = ,\n\n    #[doc = \"the associated wl_surface was destroyed\"]\n    NoSurface = ,\n\n    #[doc = \"the buffer does not support explicit synchronization\"]\n    UnsupportedBuffer = ,\n\n    #[doc = \"no buffer was attached\"]\n    NoBuffer = ,\n}","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745273,"byte_end":7745285,"line_start":233,"line_end":233,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745938,"byte_end":7745946,"line_start":250,"line_end":250,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7746362,"byte_end":7746368,"line_start":261,"line_end":261,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1777},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7746910,"byte_end":7746917,"line_start":267,"line_end":267,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":"destroy synchronization object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1779},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7747854,"byte_end":7747869,"line_start":269,"line_end":269,"column_start":9,"column_end":24},"name":"SetAcquireFence","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Request::SetAcquireFence","value":"Request::SetAcquireFence { fd }","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":"set the acquire fence","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1781},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7748605,"byte_end":7748615,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"name":"GetRelease","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Request::GetRelease","value":"Request::GetRelease { release }","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":"release fence for last-attached buffer","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1776},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7746439,"byte_end":7746446,"line_start":265,"line_end":265,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy synchronization object\\n\\nDestroy this explicit synchronization object.\\n\\nAny fence set by this object with set_acquire_fence since the last\\ncommit will be discarded by the server. Any fences set by this object\\nbefore the last commit are not affected.\\n\\nzwp_linux_buffer_release_v1 objects created by this object are not\\naffected by this request.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the acquire fence\\n\\nSet the acquire fence that must be signaled before the compositor\\nmay sample from the buffer attached with wl_surface.attach. The fence\\nis a dma_fence kernel object.\\n\\nThe acquire fence is double-buffered state, and will be applied on the\\nnext wl_surface.commit request for the associated surface. Thus, it\\napplies only to the buffer that is attached to the surface at commit\\ntime.\\n\\nIf the provided fd is not a valid dma_fence fd, then an INVALID_FENCE\\nerror is raised.\\n\\nIf a fence has already been attached during the same commit cycle, a\\nDUPLICATE_FENCE error is raised.\\n\\nIf the associated wl_surface was destroyed, a NO_SURFACE error is\\nraised.\\n\\nIf at surface commit time the attached buffer does not support explicit\\nsynchronization, an UNSUPPORTED_BUFFER error is raised.\\n\\nIf at surface commit time there is no buffer attached, a NO_BUFFER\\nerror is raised.\"]\n    SetAcquireFence {\n        fd: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"release fence for last-attached buffer\\n\\nCreate a listener for the release of the buffer attached by the\\nclient with wl_surface.attach. See zwp_linux_buffer_release_v1\\ndocumentation for more information.\\n\\nThe release object is double-buffered state, and will be associated\\nwith the buffer that is attached to the surface at wl_surface.commit\\ntime.\\n\\nIf a zwp_linux_buffer_release_v1 object has already been requested for\\nthe surface in the same commit cycle, a DUPLICATE_RELEASE error is\\nraised.\\n\\nIf the associated wl_surface was destroyed, a NO_SURFACE error\\nis raised.\\n\\nIf at surface commit time there is no buffer attached, a NO_BUFFER\\nerror is raised.\"]\n    GetRelease {\n        release: Proxy<super::zwp_linux_buffer_release_v1::ZwpLinuxBufferReleaseV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1781}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1799},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7752159,"byte_end":7752164,"line_start":370,"line_end":370,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1813},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7753464,"byte_end":7753496,"line_start":413,"line_end":413,"column_start":16,"column_end":48},"name":"ZwpLinuxSurfaceSynchronizationV1","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::ZwpLinuxSurfaceSynchronizationV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1821},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7753902,"byte_end":7753915,"line_start":423,"line_end":423,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7754412,"byte_end":7754419,"line_start":425,"line_end":425,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":"destroy synchronization object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7755372,"byte_end":7755389,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"set_acquire_fence","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::RequestsTrait::set_acquire_fence","value":"pub fn set_acquire_fence(&Self, ::std::os::unix::io::RawFd) -> ()","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":"set the acquire fence","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7756138,"byte_end":7756149,"line_start":429,"line_end":429,"column_start":12,"column_end":23},"name":"get_release","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::RequestsTrait::get_release","value":"pub fn get_release<F>(&Self, F)\n->\n    Result<Proxy<super::zwp_linux_buffer_release_v1::ZwpLinuxBufferReleaseV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_linux_buffer_release_v1::ZwpLinuxBufferReleaseV1>)\n-> Proxy<super::zwp_linux_buffer_release_v1::ZwpLinuxBufferReleaseV1>","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":"release fence for last-attached buffer","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1831},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7757545,"byte_end":7757562,"line_start":465,"line_end":465,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1832},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7757658,"byte_end":7757685,"line_start":467,"line_end":467,"column_start":15,"column_end":42},"name":"REQ_SET_ACQUIRE_FENCE_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::REQ_SET_ACQUIRE_FENCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1833},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7757781,"byte_end":7757802,"line_start":469,"line_end":469,"column_start":15,"column_end":36},"name":"REQ_GET_RELEASE_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_surface_synchronization_v1::REQ_GET_RELEASE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1834},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7758658,"byte_end":7758685,"line_start":472,"line_end":472,"column_start":9,"column_end":36},"name":"zwp_linux_buffer_release_v1","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":12595},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1866},{"krate":0,"index":1871},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895}],"decl_id":null,"docs":"buffer release explicit synchronization","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1852},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7758968,"byte_end":7758975,"line_start":479,"line_end":479,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::Request","value":"pub enum Request { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1867},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7760771,"byte_end":7760784,"line_start":520,"line_end":520,"column_start":9,"column_end":22},"name":"FencedRelease","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::Event::FencedRelease","value":"Event::FencedRelease { fence }","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":"release buffer with fence","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1869},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7761414,"byte_end":7761430,"line_start":522,"line_end":522,"column_start":9,"column_end":25},"name":"ImmediateRelease","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::Event::ImmediateRelease","value":"Event::ImmediateRelease","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":"release buffer immediately","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1866},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7760179,"byte_end":7760184,"line_start":518,"line_end":518,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"release buffer with fence\\n\\nSent when the compositor has finalised its usage of the associated\\nbuffer for the relevant commit, providing a dma_fence which will be\\nsignaled when all operations by the compositor on that buffer for that\\ncommit have finished.\\n\\nOnce the fence has signaled, and assuming the associated buffer is not\\npending release from other wl_surface.commit requests, no additional\\nexplicit or implicit synchronization is required to safely reuse or\\ndestroy the buffer.\\n\\nThis event destroys the zwp_linux_buffer_release_v1 object.\"]\n    FencedRelease {\n        fence: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"release buffer immediately\\n\\nSent when the compositor has finalised its usage of the associated\\nbuffer for the relevant commit, and either performed no operations\\nusing it, or has a guarantee that all its operations on that buffer for\\nthat commit have finished.\\n\\nOnce this event is received, and assuming the associated buffer is not\\npending release from other wl_surface.commit requests, no additional\\nexplicit or implicit synchronization is required to safely reuse or\\ndestroy the buffer.\\n\\nThis event destroys the zwp_linux_buffer_release_v1 object.\"]\n    ImmediateRelease,\n}","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1884},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7763943,"byte_end":7763966,"line_start":600,"line_end":600,"column_start":16,"column_end":39},"name":"ZwpLinuxBufferReleaseV1","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::ZwpLinuxBufferReleaseV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1892},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7764345,"byte_end":7764358,"line_start":610,"line_end":610,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1894},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7764503,"byte_end":7764527,"line_start":613,"line_end":613,"column_start":15,"column_end":39},"name":"EVT_FENCED_RELEASE_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::EVT_FENCED_RELEASE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1895},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7764621,"byte_end":7764648,"line_start":615,"line_end":615,"column_start":15,"column_end":42},"name":"EVT_IMMEDIATE_RELEASE_SINCE","qualname":"::unstable::linux_explicit_synchronization::v1::generated::client::zwp_linux_buffer_release_v1::EVT_IMMEDIATE_RELEASE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9318,"byte_end":9337,"line_start":115,"line_end":115,"column_start":9,"column_end":28},"name":"pointer_constraints","qualname":"::unstable::pointer_constraints","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":1935}],"decl_id":null,"docs":" protocol for constraining pointer motions","sig":null,"attributes":[{"value":"! protocol for constraining pointer motions","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9344,"byte_end":9389,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9394,"byte_end":9397,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"! This protocol specifies a set of interfaces used for adding constraints to","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9402,"byte_end":9480,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"! the motion of a pointer. Possible constraints include confining pointer","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9485,"byte_end":9560,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"! motions to a given region, or locking it to its current position.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9565,"byte_end":9634,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9639,"byte_end":9642,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"! In order to constrain the pointer, a client must first bind the global","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9647,"byte_end":9721,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"! interface \"wp_pointer_constraints\" which, if a compositor supports pointer","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9726,"byte_end":9804,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"! constraints, is exposed by the registry. Using the bound global object, the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9809,"byte_end":9888,"line_start":124,"line_end":124,"column_start":5,"column_end":84}},{"value":"! client uses the request that corresponds to the type of constraint it wants","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9893,"byte_end":9972,"line_start":125,"line_end":125,"column_start":5,"column_end":84}},{"value":"! to make. See wp_pointer_constraints for more details.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9977,"byte_end":10034,"line_start":126,"line_end":126,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1935},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::pointer_constraints::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":1977},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7765705,"byte_end":7765740,"line_start":22,"line_end":22,"column_start":16,"column_end":51},"name":"zwp_pointer_constraints_v1_requests","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_pointer_constraints_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1979},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7766463,"byte_end":7766499,"line_start":39,"line_end":39,"column_start":16,"column_end":52},"name":"zwp_pointer_constraints_v1_interface","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_pointer_constraints_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1982},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7766946,"byte_end":7766976,"line_start":49,"line_end":49,"column_start":16,"column_end":46},"name":"zwp_locked_pointer_v1_requests","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_locked_pointer_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1984},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7767644,"byte_end":7767672,"line_start":66,"line_end":66,"column_start":16,"column_end":44},"name":"zwp_locked_pointer_v1_events","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_locked_pointer_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1986},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7768090,"byte_end":7768121,"line_start":78,"line_end":78,"column_start":16,"column_end":47},"name":"zwp_locked_pointer_v1_interface","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_locked_pointer_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1989},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7768584,"byte_end":7768616,"line_start":88,"line_end":88,"column_start":16,"column_end":48},"name":"zwp_confined_pointer_v1_requests","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_confined_pointer_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1991},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7769078,"byte_end":7769108,"line_start":100,"line_end":100,"column_start":16,"column_end":46},"name":"zwp_confined_pointer_v1_events","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_confined_pointer_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1993},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_interfaces.rs","byte_start":7769530,"byte_end":7769563,"line_start":112,"line_end":112,"column_start":16,"column_end":49},"name":"zwp_confined_pointer_v1_interface","qualname":"::unstable::pointer_constraints::v1::generated::c_interfaces::zwp_confined_pointer_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1994},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7770652,"byte_end":7770678,"line_start":2,"line_end":2,"column_start":9,"column_end":35},"name":"zwp_pointer_constraints_v1","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":12669},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2249},{"krate":0,"index":2260},{"krate":0,"index":2258},{"krate":0,"index":2256},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2012},{"krate":0,"index":2261},{"krate":0,"index":2275},{"krate":0,"index":2273},{"krate":0,"index":2271},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2033},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2073},{"krate":0,"index":2079},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089}],"decl_id":null,"docs":"constrain the movement of a pointer","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771242,"byte_end":7771260,"line_start":14,"line_end":14,"column_start":9,"column_end":27},"name":"AlreadyConstrained","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Error::AlreadyConstrained","value":"Error::AlreadyConstrained","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":"pointer constraint already requested on that surface\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2249},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771154,"byte_end":7771159,"line_start":12,"line_end":12,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Error","value":"pub enum Error {\n\n    #[doc = \"pointer constraint already requested on that surface\"]\n    AlreadyConstrained = ,\n}","parent":null,"children":[{"krate":0,"index":2250}],"decl_id":null,"docs":"wp_pointer_constraints error values","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771083,"byte_end":7771095,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771304,"byte_end":7771312,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771490,"byte_end":7771496,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2262},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772128,"byte_end":7772135,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"Oneshot","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Lifetime::Oneshot","value":"Lifetime::Oneshot","parent":{"krate":0,"index":2261},"children":[],"decl_id":null,"docs":"the pointer constraint is defunct once deactivated","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2265},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772413,"byte_end":7772423,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"Persistent","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Lifetime::Persistent","value":"Lifetime::Persistent","parent":{"krate":0,"index":2261},"children":[],"decl_id":null,"docs":"the pointer constraint may reactivate","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2261},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771834,"byte_end":7771842,"line_start":30,"line_end":30,"column_start":14,"column_end":22},"name":"Lifetime","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Lifetime","value":"pub enum Lifetime {\n\n    #[doc =\n      \"the pointer constraint is defunct once deactivated\\n\\nA oneshot pointer constraint will never reactivate once it has been\\ndeactivated. See the corresponding deactivation event\\n(wp_locked_pointer.unlocked and wp_confined_pointer.unconfined) for\\ndetails.\"]\n    Oneshot = ,\n\n    #[doc =\n      \"the pointer constraint may reactivate\\n\\nA persistent pointer constraint may again reactivate once it has\\nbeen deactivated. See the corresponding deactivation event\\n(wp_locked_pointer.unlocked and wp_confined_pointer.unconfined) for\\ndetails.\"]\n    Persistent = ,\n}","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2265}],"decl_id":null,"docs":"constraint lifetime","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771763,"byte_end":7771775,"line_start":28,"line_end":28,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772470,"byte_end":7772478,"line_start":37,"line_end":37,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Lifetime>::from_raw","value":"pub fn from_raw(u32) -> Option<Lifetime>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772700,"byte_end":7772706,"line_start":44,"line_end":44,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Lifetime>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2019},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7773039,"byte_end":7773046,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2018},"children":[],"decl_id":null,"docs":"destroy the pointer constraints manager object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2021},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7774950,"byte_end":7774961,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"name":"LockPointer","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Request::LockPointer","value":"Request::LockPointer { id, surface, pointer, region, lifetime }","parent":{"krate":0,"index":2018},"children":[],"decl_id":null,"docs":"lock pointer to a position","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2027},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7776241,"byte_end":7776255,"line_start":60,"line_end":60,"column_start":9,"column_end":23},"name":"ConfinePointer","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Request::ConfinePointer","value":"Request::ConfinePointer { id, surface, pointer, region, lifetime }","parent":{"krate":0,"index":2018},"children":[],"decl_id":null,"docs":"confine pointer to a region","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2018},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772777,"byte_end":7772784,"line_start":48,"line_end":48,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the pointer constraints manager object\\n\\nUsed by the client to notify the server that it will no longer use this\\npointer constraints object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"lock pointer to a position\\n\\nThe lock_pointer request lets the client request to disable movements of\\nthe virtual pointer (i.e. the cursor), effectively locking the pointer\\nto a position. This request may not take effect immediately; in the\\nfuture, when the compositor deems implementation-specific constraints\\nare satisfied, the pointer lock will be activated and the compositor\\nsends a locked event.\\n\\nThe protocol provides no guarantee that the constraints are ever\\nsatisfied, and does not require the compositor to send an error if the\\nconstraints cannot ever be satisfied. It is thus possible to request a\\nlock that will never activate.\\n\\nThere may not be another pointer constraint of any kind requested or\\nactive on the surface for any of the wl_pointer objects of the seat of\\nthe passed pointer when requesting a lock. If there is, an error will be\\nraised. See general pointer lock documentation for more details.\\n\\nThe intersection of the region passed with this request and the input\\nregion of the surface is used to determine where the pointer must be\\nin order for the lock to activate. It is up to the compositor whether to\\nwarp the pointer or require some kind of user interaction for the lock\\nto activate. If the region is null the surface input region is used.\\n\\nA surface may receive pointer focus without the lock being activated.\\n\\nThe request creates a new object wp_locked_pointer which is used to\\ninteract with the lock as well as receive updates about its state. See\\nthe the description of wp_locked_pointer for further information.\\n\\nNote that while a pointer is locked, the wl_pointer objects of the\\ncorresponding seat will not emit any wl_pointer.motion events, but\\nrelative motion events will still be emitted via wp_relative_pointer\\nobjects of the same seat. wl_pointer.axis and wl_pointer.button events\\nare unaffected.\"]\n    LockPointer {\n        id: Proxy<super::zwp_locked_pointer_v1::ZwpLockedPointerV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        pointer: Proxy<super::wl_pointer::WlPointer>,\n        region: Option<Proxy<super::wl_region::WlRegion>>,\n        lifetime: u32,\n    },\n\n    #[doc =\n      \"confine pointer to a region\\n\\nThe confine_pointer request lets the client request to confine the\\npointer cursor to a given region. This request may not take effect\\nimmediately; in the future, when the compositor deems implementation-\\nspecific constraints are satisfied, the pointer confinement will be\\nactivated and the compositor sends a confined event.\\n\\nThe intersection of the region passed with this request and the input\\nregion of the surface is used to determine where the pointer must be\\nin order for the confinement to activate. It is up to the compositor\\nwhether to warp the pointer or require some kind of user interaction for\\nthe confinement to activate. If the region is null the surface input\\nregion is used.\\n\\nThe request will create a new object wp_confined_pointer which is used\\nto interact with the confinement as well as receive updates about its\\nstate. See the the description of wp_confined_pointer for further\\ninformation.\"]\n    ConfinePointer {\n        id: Proxy<super::zwp_confined_pointer_v1::ZwpConfinedPointerV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        pointer: Proxy<super::wl_pointer::WlPointer>,\n        region: Option<Proxy<super::wl_region::WlRegion>>,\n        lifetime: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2051},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7782495,"byte_end":7782500,"line_start":226,"line_end":226,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2065},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7783800,"byte_end":7783823,"line_start":269,"line_end":269,"column_start":16,"column_end":39},"name":"ZwpPointerConstraintsV1","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::ZwpPointerConstraintsV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2073},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7784200,"byte_end":7784213,"line_start":279,"line_end":279,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7784501,"byte_end":7784508,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":"destroy the pointer constraints manager object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7786428,"byte_end":7786440,"line_start":283,"line_end":283,"column_start":12,"column_end":24},"name":"lock_pointer","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::RequestsTrait::lock_pointer","value":"pub fn lock_pointer<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                       &Proxy<super::wl_pointer::WlPointer>,\n                       Option<&Proxy<super::wl_region::WlRegion>>, u32, F)\n-> Result<Proxy<super::zwp_locked_pointer_v1::ZwpLockedPointerV1>, ()> where\nF: FnOnce(NewProxy<super::zwp_locked_pointer_v1::ZwpLockedPointerV1>) ->\nProxy<super::zwp_locked_pointer_v1::ZwpLockedPointerV1>","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":"lock pointer to a position","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7787959,"byte_end":7787974,"line_start":296,"line_end":296,"column_start":12,"column_end":27},"name":"confine_pointer","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::RequestsTrait::confine_pointer","value":"pub fn confine_pointer<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                          &Proxy<super::wl_pointer::WlPointer>,\n                          Option<&Proxy<super::wl_region::WlRegion>>, u32, F)\n-> Result<Proxy<super::zwp_confined_pointer_v1::ZwpConfinedPointerV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwp_confined_pointer_v1::ZwpConfinedPointerV1>) ->\nProxy<super::zwp_confined_pointer_v1::ZwpConfinedPointerV1>","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":"confine pointer to a region","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2087},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7790613,"byte_end":7790630,"line_start":360,"line_end":360,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2088},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7790726,"byte_end":7790748,"line_start":362,"line_end":362,"column_start":15,"column_end":37},"name":"REQ_LOCK_POINTER_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::REQ_LOCK_POINTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2089},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7790844,"byte_end":7790869,"line_start":364,"line_end":364,"column_start":15,"column_end":40},"name":"REQ_CONFINE_POINTER_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_pointer_constraints_v1::REQ_CONFINE_POINTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2090},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7792009,"byte_end":7792030,"line_start":367,"line_end":367,"column_start":9,"column_end":30},"name":"zwp_locked_pointer_v1","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":12697},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2116},{"krate":0,"index":2133},{"krate":0,"index":2138},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2159},{"krate":0,"index":2163},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172}],"decl_id":null,"docs":"receive relative pointer motion events","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2109},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7792552,"byte_end":7792559,"line_start":376,"line_end":376,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":"destroy the locked pointer object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2111},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7793105,"byte_end":7793126,"line_start":378,"line_end":378,"column_start":9,"column_end":30},"name":"SetCursorPositionHint","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Request::SetCursorPositionHint","value":"Request::SetCursorPositionHint { surface_x, surface_y }","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":"set the pointer cursor position hint","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7793501,"byte_end":7793510,"line_start":380,"line_end":380,"column_start":9,"column_end":18},"name":"SetRegion","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Request::SetRegion","value":"Request::SetRegion { region }","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":"set a new lock region","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2108},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7792313,"byte_end":7792320,"line_start":374,"line_end":374,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the locked pointer object\\n\\nDestroy the locked pointer object. If applicable, the compositor will\\nunlock the pointer.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the pointer cursor position hint\\n\\nSet the cursor position hint relative to the top left corner of the\\nsurface.\\n\\nIf the client is drawing its own cursor, it should update the position\\nhint to the position of its own cursor. A compositor may use this\\ninformation to warp the pointer upon unlock in order to avoid pointer\\njumps.\\n\\nThe cursor position hint is double buffered. The new hint will only take\\neffect when the associated surface gets it pending state applied. See\\nwl_surface.commit for details.\"]\n    SetCursorPositionHint {\n        surface_x: f64,\n        surface_y: f64,\n    },\n\n    #[doc =\n      \"set a new lock region\\n\\nSet a new region used to lock the pointer.\\n\\nThe new lock region is double-buffered. The new lock region will\\nonly take effect when the associated surface gets its pending state\\napplied. See wl_surface.commit for details.\\n\\nFor details about the lock region, see wp_locked_pointer.\"]\n    SetRegion {\n        region: Option<Proxy<super::wl_region::WlRegion>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2114}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2134},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7797532,"byte_end":7797538,"line_start":490,"line_end":490,"column_start":9,"column_end":15},"name":"Locked","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Event::Locked","value":"Event::Locked","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":"lock activation event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2136},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7797930,"byte_end":7797938,"line_start":492,"line_end":492,"column_start":9,"column_end":17},"name":"Unlocked","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Event::Unlocked","value":"Event::Unlocked","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":"lock deactivation event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2133},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7797401,"byte_end":7797406,"line_start":488,"line_end":488,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"lock activation event\\n\\nNotification that the pointer lock of the seat's pointer is activated.\"]\n    Locked,\n\n    #[doc =\n      \"lock deactivation event\\n\\nNotification that the pointer lock of the seat's pointer is no longer\\nactive. If this is a oneshot pointer lock (see\\nwp_pointer_constraints.lifetime) this object is now defunct and should\\nbe destroyed. If this is a persistent pointer lock (see\\nwp_pointer_constraints.lifetime) this pointer lock may again\\nreactivate in the future.\"]\n    Unlocked,\n}","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2151},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7799821,"byte_end":7799839,"line_start":556,"line_end":556,"column_start":16,"column_end":34},"name":"ZwpLockedPointerV1","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::ZwpLockedPointerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2159},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7800201,"byte_end":7800214,"line_start":566,"line_end":566,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7800479,"byte_end":7800486,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2159},"children":[],"decl_id":null,"docs":"destroy the locked pointer object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7801048,"byte_end":7801072,"line_start":570,"line_end":570,"column_start":12,"column_end":36},"name":"set_cursor_position_hint","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::RequestsTrait::set_cursor_position_hint","value":"pub fn set_cursor_position_hint(&Self, f64, f64) -> ()","parent":{"krate":0,"index":2159},"children":[],"decl_id":null,"docs":"set the pointer cursor position hint","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7801460,"byte_end":7801470,"line_start":572,"line_end":572,"column_start":12,"column_end":22},"name":"set_region","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::RequestsTrait::set_region","value":"pub fn set_region(&Self, Option<&Proxy<super::wl_region::WlRegion>>) -> ()","parent":{"krate":0,"index":2159},"children":[],"decl_id":null,"docs":"set a new lock region","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2168},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7802301,"byte_end":7802318,"line_start":594,"line_end":594,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2169},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7802414,"byte_end":7802448,"line_start":596,"line_end":596,"column_start":15,"column_end":49},"name":"REQ_SET_CURSOR_POSITION_HINT_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::REQ_SET_CURSOR_POSITION_HINT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2170},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7802544,"byte_end":7802564,"line_start":598,"line_end":598,"column_start":15,"column_end":35},"name":"REQ_SET_REGION_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::REQ_SET_REGION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2171},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7802658,"byte_end":7802674,"line_start":600,"line_end":600,"column_start":15,"column_end":31},"name":"EVT_LOCKED_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::EVT_LOCKED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2172},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7802768,"byte_end":7802786,"line_start":602,"line_end":602,"column_start":15,"column_end":33},"name":"EVT_UNLOCKED_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_locked_pointer_v1::EVT_UNLOCKED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2173},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7803666,"byte_end":7803689,"line_start":605,"line_end":605,"column_start":9,"column_end":32},"name":"zwp_confined_pointer_v1","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":12725},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2196},{"krate":0,"index":2212},{"krate":0,"index":2217},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248}],"decl_id":null,"docs":"confined pointer object","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2192},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7804218,"byte_end":7804225,"line_start":614,"line_end":614,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2191},"children":[],"decl_id":null,"docs":"destroy the confined pointer object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7804979,"byte_end":7804988,"line_start":616,"line_end":616,"column_start":9,"column_end":18},"name":"SetRegion","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::Request::SetRegion","value":"Request::SetRegion { region }","parent":{"krate":0,"index":2191},"children":[],"decl_id":null,"docs":"set a new confine region","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2191},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7803972,"byte_end":7803979,"line_start":612,"line_end":612,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the confined pointer object\\n\\nDestroy the confined pointer object. If applicable, the compositor will\\nunconfine the pointer.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set a new confine region\\n\\nSet a new region used to confine the pointer.\\n\\nThe new confine region is double-buffered. The new confine region will\\nonly take effect when the associated surface gets its pending state\\napplied. See wl_surface.commit for details.\\n\\nIf the confinement is active when the new confinement region is applied\\nand the pointer ends up outside of newly applied region, the pointer may\\nwarped to a position within the new confinement region. If warped, a\\nwl_pointer.motion event will be emitted, but no\\nwp_relative_pointer.relative_motion event.\\n\\nThe compositor may also, instead of using the new region, unconfine the\\npointer.\\n\\nFor details about the confine region, see wp_confined_pointer.\"]\n    SetRegion {\n        region: Option<Proxy<super::wl_region::WlRegion>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2213},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7807898,"byte_end":7807906,"line_start":700,"line_end":700,"column_start":9,"column_end":17},"name":"Confined","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::Event::Confined","value":"Event::Confined","parent":{"krate":0,"index":2212},"children":[],"decl_id":null,"docs":"pointer confined","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7808321,"byte_end":7808331,"line_start":702,"line_end":702,"column_start":9,"column_end":19},"name":"Unconfined","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::Event::Unconfined","value":"Event::Unconfined","parent":{"krate":0,"index":2212},"children":[],"decl_id":null,"docs":"pointer unconfined","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2212},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7807764,"byte_end":7807769,"line_start":698,"line_end":698,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"pointer confined\\n\\nNotification that the pointer confinement of the seat's pointer is\\nactivated.\"]\n    Confined,\n\n    #[doc =\n      \"pointer unconfined\\n\\nNotification that the pointer confinement of the seat's pointer is no\\nlonger active. If this is a oneshot pointer confinement (see\\nwp_pointer_constraints.lifetime) this object is now defunct and should\\nbe destroyed. If this is a persistent pointer confinement (see\\nwp_pointer_constraints.lifetime) this pointer confinement may again\\nreactivate in the future.\"]\n    Unconfined,\n}","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2215}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2230},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7810230,"byte_end":7810250,"line_start":766,"line_end":766,"column_start":16,"column_end":36},"name":"ZwpConfinedPointerV1","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::ZwpConfinedPointerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2238},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7810618,"byte_end":7810631,"line_start":776,"line_end":776,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7810903,"byte_end":7810910,"line_start":778,"line_end":778,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2238},"children":[],"decl_id":null,"docs":"destroy the confined pointer object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7811680,"byte_end":7811690,"line_start":780,"line_end":780,"column_start":12,"column_end":22},"name":"set_region","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::RequestsTrait::set_region","value":"pub fn set_region(&Self, Option<&Proxy<super::wl_region::WlRegion>>) -> ()","parent":{"krate":0,"index":2238},"children":[],"decl_id":null,"docs":"set a new confine region","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2245},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7812256,"byte_end":7812273,"line_start":795,"line_end":795,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2246},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7812369,"byte_end":7812389,"line_start":797,"line_end":797,"column_start":15,"column_end":35},"name":"REQ_SET_REGION_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::REQ_SET_REGION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2247},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7812483,"byte_end":7812501,"line_start":799,"line_end":799,"column_start":15,"column_end":33},"name":"EVT_CONFINED_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::EVT_CONFINED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2248},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7812595,"byte_end":7812615,"line_start":801,"line_end":801,"column_start":15,"column_end":35},"name":"EVT_UNCONFINED_SINCE","qualname":"::unstable::pointer_constraints::v1::generated::client::zwp_confined_pointer_v1::EVT_UNCONFINED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10305,"byte_end":10321,"line_start":140,"line_end":140,"column_start":9,"column_end":25},"name":"pointer_gestures","qualname":"::unstable::pointer_gestures","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":2280}],"decl_id":null,"docs":" Pointer gestures protocol\n","sig":null,"attributes":[{"value":"! Pointer gestures protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10328,"byte_end":10357,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":2280},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::pointer_gestures::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":2320},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7813479,"byte_end":7813511,"line_start":19,"line_end":19,"column_start":16,"column_end":48},"name":"zwp_pointer_gestures_v1_requests","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gestures_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2322},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7814045,"byte_end":7814078,"line_start":31,"line_end":31,"column_start":16,"column_end":49},"name":"zwp_pointer_gestures_v1_interface","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gestures_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2323},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7814370,"byte_end":7814407,"line_start":39,"line_end":39,"column_start":16,"column_end":53},"name":"zwp_pointer_gesture_swipe_v1_requests","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gesture_swipe_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2327},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7814874,"byte_end":7814909,"line_start":50,"line_end":50,"column_start":16,"column_end":51},"name":"zwp_pointer_gesture_swipe_v1_events","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gesture_swipe_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2329},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7815556,"byte_end":7815594,"line_start":67,"line_end":67,"column_start":16,"column_end":54},"name":"zwp_pointer_gesture_swipe_v1_interface","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gesture_swipe_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2330},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7815927,"byte_end":7815964,"line_start":75,"line_end":75,"column_start":16,"column_end":53},"name":"zwp_pointer_gesture_pinch_v1_requests","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gesture_pinch_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2334},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7816431,"byte_end":7816466,"line_start":86,"line_end":86,"column_start":16,"column_end":51},"name":"zwp_pointer_gesture_pinch_v1_events","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gesture_pinch_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2336},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_interfaces.rs","byte_start":7817115,"byte_end":7817153,"line_start":103,"line_end":103,"column_start":16,"column_end":54},"name":"zwp_pointer_gesture_pinch_v1_interface","qualname":"::unstable::pointer_gestures::v1::generated::c_interfaces::zwp_pointer_gesture_pinch_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2337},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7818282,"byte_end":7818305,"line_start":2,"line_end":2,"column_start":9,"column_end":32},"name":"zwp_pointer_gestures_v1","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":12795},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2362},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2399},{"krate":0,"index":2404},{"krate":0,"index":2409},{"krate":0,"index":2410}],"decl_id":null,"docs":"touchpad gestures","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2356},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7818734,"byte_end":7818749,"line_start":11,"line_end":11,"column_start":9,"column_end":24},"name":"GetSwipeGesture","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::Request::GetSwipeGesture","value":"Request::GetSwipeGesture { id, pointer }","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":"get swipe gesture","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2359},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7819043,"byte_end":7819058,"line_start":16,"line_end":16,"column_start":9,"column_end":24},"name":"GetPinchGesture","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::Request::GetPinchGesture","value":"Request::GetPinchGesture { id, pointer }","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":"get pinch gesture","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2355},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7818588,"byte_end":7818595,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"get swipe gesture\\n\\nCreate a swipe gesture object. See the\\nwl_pointer_gesture_swipe interface for details.\"]\n    GetSwipeGesture {\n        id: Proxy<super::zwp_pointer_gesture_swipe_v1::ZwpPointerGestureSwipeV1>,\n        pointer: Proxy<super::wl_pointer::WlPointer>,\n    },\n\n    #[doc =\n      \"get pinch gesture\\n\\nCreate a pinch gesture object. See the\\nwl_pointer_gesture_pinch interface for details.\"]\n    GetPinchGesture {\n        id: Proxy<super::zwp_pointer_gesture_pinch_v1::ZwpPointerGesturePinchV1>,\n        pointer: Proxy<super::wl_pointer::WlPointer>,\n    },\n}","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2377},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7822573,"byte_end":7822578,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7823878,"byte_end":7823898,"line_start":148,"line_end":148,"column_start":16,"column_end":36},"name":"ZwpPointerGesturesV1","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::ZwpPointerGesturesV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2399},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7824266,"byte_end":7824279,"line_start":158,"line_end":158,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2402}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7824421,"byte_end":7824438,"line_start":160,"line_end":160,"column_start":12,"column_end":29},"name":"get_swipe_gesture","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::RequestsTrait::get_swipe_gesture","value":"pub fn get_swipe_gesture<F>(&Self, &Proxy<super::wl_pointer::WlPointer>, F)\n->\n    Result<Proxy<super::zwp_pointer_gesture_swipe_v1::ZwpPointerGestureSwipeV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_pointer_gesture_swipe_v1::ZwpPointerGestureSwipeV1>)\n-> Proxy<super::zwp_pointer_gesture_swipe_v1::ZwpPointerGestureSwipeV1>","parent":{"krate":0,"index":2399},"children":[],"decl_id":null,"docs":"get swipe gesture","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7825011,"byte_end":7825028,"line_start":171,"line_end":171,"column_start":12,"column_end":29},"name":"get_pinch_gesture","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::RequestsTrait::get_pinch_gesture","value":"pub fn get_pinch_gesture<F>(&Self, &Proxy<super::wl_pointer::WlPointer>, F)\n->\n    Result<Proxy<super::zwp_pointer_gesture_pinch_v1::ZwpPointerGesturePinchV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_pointer_gesture_pinch_v1::ZwpPointerGesturePinchV1>)\n-> Proxy<super::zwp_pointer_gesture_pinch_v1::ZwpPointerGesturePinchV1>","parent":{"krate":0,"index":2399},"children":[],"decl_id":null,"docs":"get pinch gesture","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2409},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7826997,"byte_end":7827024,"line_start":219,"line_end":219,"column_start":15,"column_end":42},"name":"REQ_GET_SWIPE_GESTURE_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::REQ_GET_SWIPE_GESTURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2410},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7827120,"byte_end":7827147,"line_start":221,"line_end":221,"column_start":15,"column_end":42},"name":"REQ_GET_PINCH_GESTURE_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gestures_v1::REQ_GET_PINCH_GESTURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2411},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7827979,"byte_end":7828007,"line_start":224,"line_end":224,"column_start":9,"column_end":37},"name":"zwp_pointer_gesture_swipe_v1","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":12823},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2446},{"krate":0,"index":2460},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488}],"decl_id":null,"docs":"a swipe gesture object","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2430},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7828446,"byte_end":7828453,"line_start":233,"line_end":233,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2429},"children":[],"decl_id":null,"docs":"destroy the pointer swipe gesture object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2429},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7828290,"byte_end":7828297,"line_start":231,"line_end":231,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the pointer swipe gesture object\\n\\n\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":2430}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2447},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7830411,"byte_end":7830416,"line_start":294,"line_end":294,"column_start":9,"column_end":14},"name":"Begin","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::Event::Begin","value":"Event::Begin { serial, time, surface, fingers }","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":"multi-finger swipe begin","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7830840,"byte_end":7830846,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"name":"Update","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::Event::Update","value":"Event::Update { time, dx, dy }","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":"multi-finger swipe motion","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7831251,"byte_end":7831254,"line_start":303,"line_end":303,"column_start":9,"column_end":12},"name":"End","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::Event::End","value":"Event::End { serial, time, cancelled }","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":"multi-finger swipe end","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2446},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7830267,"byte_end":7830272,"line_start":292,"line_end":292,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"multi-finger swipe begin\\n\\nThis event is sent when a multi-finger swipe gesture is detected\\non the device.\"]\n    Begin {\n        serial: u32,\n        time: u32,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        fingers: u32,\n    },\n\n    #[doc =\n      \"multi-finger swipe motion\\n\\nThis event is sent when a multi-finger swipe gesture changes the\\nposition of the logical center.\\n\\nThe dx and dy coordinates are relative coordinates of the logical\\ncenter of the gesture compared to the previous event.\"]\n    Update {\n        time: u32,\n        dx: f64,\n        dy: f64,\n    },\n\n    #[doc =\n      \"multi-finger swipe end\\n\\nThis event is sent when a multi-finger swipe gesture ceases to\\nbe valid. This may happen when one or more fingers are lifted or\\nthe gesture is cancelled.\\n\\nWhen a gesture is cancelled, the client should undo state changes\\ncaused by this gesture. What causes a gesture to be cancelled is\\nimplementation-dependent.\"]\n    End {\n        serial: u32,\n        time: u32,\n        cancelled: i32,\n    },\n}","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2452},{"krate":0,"index":2456}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2473},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838277,"byte_end":7838301,"line_start":498,"line_end":498,"column_start":16,"column_end":40},"name":"ZwpPointerGestureSwipeV1","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::ZwpPointerGestureSwipeV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2481},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838683,"byte_end":7838696,"line_start":508,"line_end":508,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2482}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838878,"byte_end":7838885,"line_start":510,"line_end":510,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":"destroy the pointer swipe gesture object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2485},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7839167,"byte_end":7839184,"line_start":519,"line_end":519,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2486},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7839278,"byte_end":7839293,"line_start":521,"line_end":521,"column_start":15,"column_end":30},"name":"EVT_BEGIN_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::EVT_BEGIN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2487},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7839387,"byte_end":7839403,"line_start":523,"line_end":523,"column_start":15,"column_end":31},"name":"EVT_UPDATE_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::EVT_UPDATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2488},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7839497,"byte_end":7839510,"line_start":525,"line_end":525,"column_start":15,"column_end":28},"name":"EVT_END_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_swipe_v1::EVT_END_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2489},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7840390,"byte_end":7840418,"line_start":528,"line_end":528,"column_start":9,"column_end":37},"name":"zwp_pointer_gesture_pinch_v1","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":12851},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2524},{"krate":0,"index":2540},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568}],"decl_id":null,"docs":"a pinch gesture object","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2508},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7840849,"byte_end":7840856,"line_start":537,"line_end":537,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":"destroy the pinch gesture object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2507},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7840701,"byte_end":7840708,"line_start":535,"line_end":535,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the pinch gesture object\\n\\n\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":2508}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2525},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7842814,"byte_end":7842819,"line_start":598,"line_end":598,"column_start":9,"column_end":14},"name":"Begin","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::Event::Begin","value":"Event::Begin { serial, time, surface, fingers }","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":"multi-finger pinch begin","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2530},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7843624,"byte_end":7843630,"line_start":605,"line_end":605,"column_start":9,"column_end":15},"name":"Update","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::Event::Update","value":"Event::Update { time, dx, dy, scale, rotation }","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":"multi-finger pinch motion","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2536},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7844131,"byte_end":7844134,"line_start":613,"line_end":613,"column_start":9,"column_end":12},"name":"End","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::Event::End","value":"Event::End { serial, time, cancelled }","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":"multi-finger pinch end","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2524},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7842670,"byte_end":7842675,"line_start":596,"line_end":596,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"multi-finger pinch begin\\n\\nThis event is sent when a multi-finger pinch gesture is detected\\non the device.\"]\n    Begin {\n        serial: u32,\n        time: u32,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        fingers: u32,\n    },\n\n    #[doc =\n      \"multi-finger pinch motion\\n\\nThis event is sent when a multi-finger pinch gesture changes the\\nposition of the logical center, the rotation or the relative scale.\\n\\nThe dx and dy coordinates are relative coordinates in the\\nsurface coordinate space of the logical center of the gesture.\\n\\nThe scale factor is an absolute scale compared to the\\npointer_gesture_pinch.begin event, e.g. a scale of 2 means the fingers\\nare now twice as far apart as on pointer_gesture_pinch.begin.\\n\\nThe rotation is the relative angle in degrees clockwise compared to the previous\\npointer_gesture_pinch.begin or pointer_gesture_pinch.update event.\"]\n    Update {\n        time: u32,\n        dx: f64,\n        dy: f64,\n        scale: f64,\n        rotation: f64,\n    },\n\n    #[doc =\n      \"multi-finger pinch end\\n\\nThis event is sent when a multi-finger pinch gesture ceases to\\nbe valid. This may happen when one or more fingers are lifted or\\nthe gesture is cancelled.\\n\\nWhen a gesture is cancelled, the client should undo state changes\\ncaused by this gesture. What causes a gesture to be cancelled is\\nimplementation-dependent.\"]\n    End {\n        serial: u32,\n        time: u32,\n        cancelled: i32,\n    },\n}","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2530},{"krate":0,"index":2536}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7851987,"byte_end":7852011,"line_start":826,"line_end":826,"column_start":16,"column_end":40},"name":"ZwpPointerGesturePinchV1","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::ZwpPointerGesturePinchV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2561},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852393,"byte_end":7852406,"line_start":836,"line_end":836,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2562}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852580,"byte_end":7852587,"line_start":838,"line_end":838,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2561},"children":[],"decl_id":null,"docs":"destroy the pinch gesture object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2565},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852869,"byte_end":7852886,"line_start":847,"line_end":847,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2566},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852980,"byte_end":7852995,"line_start":849,"line_end":849,"column_start":15,"column_end":30},"name":"EVT_BEGIN_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::EVT_BEGIN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7853089,"byte_end":7853105,"line_start":851,"line_end":851,"column_start":15,"column_end":31},"name":"EVT_UPDATE_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::EVT_UPDATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2568},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7853199,"byte_end":7853212,"line_start":853,"line_end":853,"column_start":15,"column_end":28},"name":"EVT_END_SINCE","qualname":"::unstable::pointer_gestures::v1::generated::client::zwp_pointer_gesture_pinch_v1::EVT_END_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10579,"byte_end":10596,"line_start":154,"line_end":154,"column_start":9,"column_end":26},"name":"primary_selection","qualname":"::unstable::primary_selection","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":2569}],"decl_id":null,"docs":" Primary selection protocol\n","sig":null,"attributes":[{"value":"! Primary selection protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10603,"byte_end":10633,"line_start":155,"line_end":155,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":2569},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::primary_selection::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":2607},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7853936,"byte_end":7853984,"line_start":16,"line_end":16,"column_start":16,"column_end":64},"name":"zwp_primary_selection_device_manager_v1_requests","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_device_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2609},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7854756,"byte_end":7854805,"line_start":37,"line_end":37,"column_start":16,"column_end":65},"name":"zwp_primary_selection_device_manager_v1_interface","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_device_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2612},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7855352,"byte_end":7855392,"line_start":49,"line_end":49,"column_start":16,"column_end":56},"name":"zwp_primary_selection_device_v1_requests","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_device_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2618},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7856224,"byte_end":7856262,"line_start":65,"line_end":65,"column_start":16,"column_end":54},"name":"zwp_primary_selection_device_v1_events","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_device_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2620},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7856777,"byte_end":7856818,"line_start":77,"line_end":77,"column_start":16,"column_end":57},"name":"zwp_primary_selection_device_v1_interface","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_device_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2621},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7857160,"byte_end":7857199,"line_start":85,"line_end":85,"column_start":16,"column_end":55},"name":"zwp_primary_selection_offer_v1_requests","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_offer_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2623},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7857619,"byte_end":7857656,"line_start":97,"line_end":97,"column_start":16,"column_end":53},"name":"zwp_primary_selection_offer_v1_events","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_offer_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2625},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7857861,"byte_end":7857901,"line_start":102,"line_end":102,"column_start":16,"column_end":56},"name":"zwp_primary_selection_offer_v1_interface","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_offer_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2626},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7858240,"byte_end":7858280,"line_start":110,"line_end":110,"column_start":16,"column_end":56},"name":"zwp_primary_selection_source_v1_requests","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_source_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2628},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7858697,"byte_end":7858735,"line_start":122,"line_end":122,"column_start":16,"column_end":54},"name":"zwp_primary_selection_source_v1_events","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_source_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2630},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_interfaces.rs","byte_start":7859154,"byte_end":7859195,"line_start":134,"line_end":134,"column_start":16,"column_end":57},"name":"zwp_primary_selection_source_v1_interface","qualname":"::unstable::primary_selection::v1::generated::c_interfaces::zwp_primary_selection_source_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2631},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7859820,"byte_end":7859859,"line_start":2,"line_end":2,"column_start":9,"column_end":48},"name":"zwp_primary_selection_device_manager_v1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":12917},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2657},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2687},{"krate":0,"index":2689},{"krate":0,"index":2695},{"krate":0,"index":2701},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709}],"decl_id":null,"docs":"X primary selection emulation","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2650},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7860259,"byte_end":7860271,"line_start":11,"line_end":11,"column_start":9,"column_end":21},"name":"CreateSource","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::Request::CreateSource","value":"Request::CreateSource { id }","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":"create a new primary selection source","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2652},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7860488,"byte_end":7860497,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"name":"GetDevice","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::Request::GetDevice","value":"Request::GetDevice { id, seat }","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":"create a new primary selection device","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2655},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7860847,"byte_end":7860854,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":"destroy the primary selection device manager","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2649},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7860142,"byte_end":7860149,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"create a new primary selection source\\n\\nCreate a new primary selection source.\"]\n    CreateSource {\n        id: Proxy<super::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1>,\n    },\n\n    #[doc =\n      \"create a new primary selection device\\n\\nCreate a new data device for a given seat.\"]\n    GetDevice {\n        id: Proxy<super::zwp_primary_selection_device_v1::ZwpPrimarySelectionDeviceV1>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n\n    #[doc =\n      \"destroy the primary selection device manager\\n\\nDestroy the primary selection device manager.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2655}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2673},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7864614,"byte_end":7864619,"line_start":121,"line_end":121,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2687},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7865919,"byte_end":7865953,"line_start":164,"line_end":164,"column_start":16,"column_end":50},"name":"ZwpPrimarySelectionDeviceManagerV1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::ZwpPrimarySelectionDeviceManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2695},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7866395,"byte_end":7866408,"line_start":176,"line_end":176,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7866521,"byte_end":7866534,"line_start":178,"line_end":178,"column_start":12,"column_end":25},"name":"create_source","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::RequestsTrait::create_source","value":"pub fn create_source<F>(&Self, F)\n->\n    Result<Proxy<super::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1>)\n-> Proxy<super::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1>","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":"create a new primary selection source","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7867041,"byte_end":7867051,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"get_device","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::RequestsTrait::get_device","value":"pub fn get_device<F>(&Self, &Proxy<super::wl_seat::WlSeat>, F)\n->\n    Result<Proxy<super::zwp_primary_selection_device_v1::ZwpPrimarySelectionDeviceV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_primary_selection_device_v1::ZwpPrimarySelectionDeviceV1>)\n-> Proxy<super::zwp_primary_selection_device_v1::ZwpPrimarySelectionDeviceV1>","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":"create a new primary selection device","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7867722,"byte_end":7867729,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":"destroy the primary selection device manager","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2707},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7869305,"byte_end":7869328,"line_start":240,"line_end":240,"column_start":15,"column_end":38},"name":"REQ_CREATE_SOURCE_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::REQ_CREATE_SOURCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2708},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7869424,"byte_end":7869444,"line_start":242,"line_end":242,"column_start":15,"column_end":35},"name":"REQ_GET_DEVICE_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::REQ_GET_DEVICE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2709},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7869540,"byte_end":7869557,"line_start":244,"line_end":244,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2710},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7869581,"byte_end":7869612,"line_start":246,"line_end":246,"column_start":9,"column_end":40},"name":"zwp_primary_selection_device_v1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":12945},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2734},{"krate":0,"index":2750},{"krate":0,"index":2755},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2729},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7870149,"byte_end":7870161,"line_start":255,"line_end":255,"column_start":9,"column_end":21},"name":"SetSelection","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::Request::SetSelection","value":"Request::SetSelection { source, serial }","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":"set the primary selection","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7870499,"byte_end":7870506,"line_start":261,"line_end":261,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":"destroy the primary selection device","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2728},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7869895,"byte_end":7869902,"line_start":253,"line_end":253,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set the primary selection\\n\\nReplaces the current selection. The previous owner of the primary\\nselection will receive a wp_primary_selection_source.cancelled event.\\n\\nTo unset the selection, set the source to NULL.\"]\n    SetSelection {\n        source: Option<Proxy<super::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1>>,\n        serial: u32,\n    },\n\n    #[doc =\n      \"destroy the primary selection device\\n\\nDestroy the primary selection device.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2732}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2751},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7873761,"byte_end":7873770,"line_start":347,"line_end":347,"column_start":9,"column_end":18},"name":"DataOffer","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::Event::DataOffer","value":"Event::DataOffer { offer }","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":"introduce a new wp_primary_selection_offer","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2753},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7874438,"byte_end":7874447,"line_start":351,"line_end":351,"column_start":9,"column_end":18},"name":"Selection","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::Event::Selection","value":"Event::Selection { id }","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":"advertise a new primary selection","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2750},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7873404,"byte_end":7873409,"line_start":345,"line_end":345,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"introduce a new wp_primary_selection_offer\\n\\nIntroduces a new wp_primary_selection_offer object that may be used\\nto receive the current primary selection. Immediately following this\\nevent, the new wp_primary_selection_offer object will send\\nwp_primary_selection_offer.offer events to describe the offered mime\\ntypes.\"]\n    DataOffer {\n        offer: NewProxy<super::zwp_primary_selection_offer_v1::ZwpPrimarySelectionOfferV1>,\n    },\n\n    #[doc =\n      \"advertise a new primary selection\\n\\nThe wp_primary_selection_device.selection event is sent to notify the\\nclient of a new primary selection. This event is sent after the\\nwp_primary_selection.data_offer event introducing this object, and after\\nthe offer has announced its mimetypes through\\nwp_primary_selection_offer.offer.\\n\\nThe data_offer is valid until a new offer or NULL is received\\nor until the client loses keyboard focus. The client must destroy the\\nprevious selection data_offer, if any, upon receiving this event.\"]\n    Selection {\n        id: Option<Proxy<super::zwp_primary_selection_offer_v1::ZwpPrimarySelectionOfferV1>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":2751},{"krate":0,"index":2753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2768},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7878620,"byte_end":7878647,"line_start":466,"line_end":466,"column_start":16,"column_end":43},"name":"ZwpPrimarySelectionDeviceV1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::ZwpPrimarySelectionDeviceV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2776},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7879038,"byte_end":7879051,"line_start":476,"line_end":476,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7879301,"byte_end":7879314,"line_start":478,"line_end":478,"column_start":12,"column_end":25},"name":"set_selection","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::RequestsTrait::set_selection","value":"pub fn set_selection(&Self,\n                     Option<&Proxy<super::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1>>,\n                     u32) -> ()","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"set the primary selection","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7879725,"byte_end":7879732,"line_start":486,"line_end":486,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"destroy the primary selection device","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2783},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7880423,"byte_end":7880446,"line_start":508,"line_end":508,"column_start":15,"column_end":38},"name":"REQ_SET_SELECTION_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::REQ_SET_SELECTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2784},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7880542,"byte_end":7880559,"line_start":510,"line_end":510,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2785},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7880653,"byte_end":7880673,"line_start":512,"line_end":512,"column_start":15,"column_end":35},"name":"EVT_DATA_OFFER_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::EVT_DATA_OFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2786},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7880767,"byte_end":7880786,"line_start":514,"line_end":514,"column_start":15,"column_end":34},"name":"EVT_SELECTION_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_device_v1::EVT_SELECTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2787},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7881175,"byte_end":7881205,"line_start":517,"line_end":517,"column_start":9,"column_end":39},"name":"zwp_primary_selection_offer_v1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":12973},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2811},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859}],"decl_id":null,"docs":"offer to transfer primary selection contents","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2806},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7882064,"byte_end":7882071,"line_start":526,"line_end":526,"column_start":9,"column_end":16},"name":"Receive","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::Request::Receive","value":"Request::Receive { mime_type, fd }","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":"request that the data is transferred","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7882337,"byte_end":7882344,"line_start":531,"line_end":531,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":"destroy the primary selection offer","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2805},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7881488,"byte_end":7881495,"line_start":524,"line_end":524,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"request that the data is transferred\\n\\nTo transfer the contents of the primary selection clipboard, the client\\nissues this request and indicates the mime type that it wants to\\nreceive. The transfer happens through the passed file descriptor\\n(typically created with the pipe system call). The source client writes\\nthe data in the mime type representation requested and then closes the\\nfile descriptor.\\n\\nThe receiving client reads from the read end of the pipe until EOF and\\ncloses its end, at which point the transfer is complete.\"]\n    Receive {\n        mime_type: String,\n        fd: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"destroy the primary selection offer\\n\\nDestroy the primary selection offer.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2827},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7885493,"byte_end":7885498,"line_start":618,"line_end":618,"column_start":9,"column_end":14},"name":"Offer","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::Event::Offer","value":"Event::Offer { mime_type }","parent":{"krate":0,"index":2826},"children":[],"decl_id":null,"docs":"advertise offered mime type","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2826},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7885261,"byte_end":7885266,"line_start":616,"line_end":616,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"advertise offered mime type\\n\\nSent immediately after creating announcing the\\nwp_primary_selection_offer through\\nwp_primary_selection_device.data_offer. One event is sent per offered\\nmime type.\"]\n    Offer {\n        mime_type: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":2827}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2843},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7888053,"byte_end":7888079,"line_start":693,"line_end":693,"column_start":16,"column_end":42},"name":"ZwpPrimarySelectionOfferV1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::ZwpPrimarySelectionOfferV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2851},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7888467,"byte_end":7888480,"line_start":703,"line_end":703,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2852},{"krate":0,"index":2853}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7889052,"byte_end":7889059,"line_start":705,"line_end":705,"column_start":12,"column_end":19},"name":"receive","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::RequestsTrait::receive","value":"pub fn receive(&Self, String, ::std::os::unix::io::RawFd) -> ()","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"request that the data is transferred","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7889335,"byte_end":7889342,"line_start":707,"line_end":707,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"destroy the primary selection offer","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2857},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7889867,"byte_end":7889884,"line_start":723,"line_end":723,"column_start":15,"column_end":32},"name":"REQ_RECEIVE_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::REQ_RECEIVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2858},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7889980,"byte_end":7889997,"line_start":725,"line_end":725,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2859},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7890091,"byte_end":7890106,"line_start":727,"line_end":727,"column_start":15,"column_end":30},"name":"EVT_OFFER_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_offer_v1::EVT_OFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2860},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7890392,"byte_end":7890423,"line_start":730,"line_end":730,"column_start":9,"column_end":40},"name":"zwp_primary_selection_source_v1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":13001},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2883},{"krate":0,"index":2898},{"krate":0,"index":2904},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"decl_id":null,"docs":"offer to replace the contents of the primary selection","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2879},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7890903,"byte_end":7890908,"line_start":739,"line_end":739,"column_start":9,"column_end":14},"name":"Offer","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::Request::Offer","value":"Request::Offer { mime_type }","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":"add an offered mime type","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2881},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7891111,"byte_end":7891118,"line_start":741,"line_end":741,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":"destroy the primary selection source","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2878},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7890706,"byte_end":7890713,"line_start":737,"line_end":737,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"add an offered mime type\\n\\nThis request adds a mime type to the set of mime types advertised to\\ntargets. Can be called several times to offer multiple types.\"]\n    Offer {\n        mime_type: String,\n    },\n\n    #[doc =\n      \"destroy the primary selection source\\n\\nDestroy the primary selection source.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2899},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7894075,"byte_end":7894079,"line_start":824,"line_end":824,"column_start":9,"column_end":13},"name":"Send","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::Event::Send","value":"Event::Send { mime_type, fd }","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":"send the primary selection contents","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2902},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7894371,"byte_end":7894380,"line_start":829,"line_end":829,"column_start":9,"column_end":18},"name":"Cancelled","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::Event::Cancelled","value":"Event::Cancelled","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":"request for primary selection contents was canceled","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2898},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7893854,"byte_end":7893859,"line_start":822,"line_end":822,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"send the primary selection contents\\n\\nRequest for the current primary selection contents from the client.\\nSend the specified mime type over the passed file descriptor, then\\nclose it.\"]\n    Send {\n        mime_type: String,\n        fd: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"request for primary selection contents was canceled\\n\\nThis primary selection source is no longer valid. The client should\\nclean up and destroy this primary selection source.\"]\n    Cancelled,\n}","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2918},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7897562,"byte_end":7897589,"line_start":922,"line_end":922,"column_start":16,"column_end":43},"name":"ZwpPrimarySelectionSourceV1","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::ZwpPrimarySelectionSourceV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2926},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7897980,"byte_end":7897993,"line_start":932,"line_end":932,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7898186,"byte_end":7898191,"line_start":934,"line_end":934,"column_start":12,"column_end":17},"name":"offer","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::RequestsTrait::offer","value":"pub fn offer(&Self, String) -> ()","parent":{"krate":0,"index":2926},"children":[],"decl_id":null,"docs":"add an offered mime type","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7898437,"byte_end":7898444,"line_start":936,"line_end":936,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":2926},"children":[],"decl_id":null,"docs":"destroy the primary selection source","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2932},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7898910,"byte_end":7898925,"line_start":951,"line_end":951,"column_start":15,"column_end":30},"name":"REQ_OFFER_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::REQ_OFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2933},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7899021,"byte_end":7899038,"line_start":953,"line_end":953,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2934},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7899132,"byte_end":7899146,"line_start":955,"line_end":955,"column_start":15,"column_end":29},"name":"EVT_SEND_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::EVT_SEND_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2935},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7899240,"byte_end":7899259,"line_start":957,"line_end":957,"column_start":15,"column_end":34},"name":"EVT_CANCELLED_SINCE","qualname":"::unstable::primary_selection::v1::generated::client::zwp_primary_selection_source_v1::EVT_CANCELLED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10802,"byte_end":10818,"line_start":167,"line_end":167,"column_start":9,"column_end":25},"name":"relative_pointer","qualname":"::unstable::relative_pointer","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":2937}],"decl_id":null,"docs":" protocol for relative pointer motion events","sig":null,"attributes":[{"value":"! protocol for relative pointer motion events","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10825,"byte_end":10872,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10877,"byte_end":10880,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"! This protocol specifies a set of interfaces used for making clients able to","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10885,"byte_end":10964,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"! receive relative pointer events not obstructed by barriers (such as the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10969,"byte_end":11044,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"! monitor edge or other pointer barriers).","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11049,"byte_end":11093,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11098,"byte_end":11101,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"! To start receiving relative pointer events, a client must first bind the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11106,"byte_end":11182,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"! global interface \"wp_relative_pointer_manager\" which, if a compositor","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11187,"byte_end":11260,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"! supports relative pointer motion events, is exposed by the registry. After","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11265,"byte_end":11343,"line_start":176,"line_end":176,"column_start":5,"column_end":83}},{"value":"! having created the relative pointer manager proxy object, the client uses","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11348,"byte_end":11425,"line_start":177,"line_end":177,"column_start":5,"column_end":82}},{"value":"! it to create the actual relative pointer object using the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11430,"byte_end":11491,"line_start":178,"line_end":178,"column_start":5,"column_end":66}},{"value":"! \"get_relative_pointer\" request given a wl_pointer. The relative pointer","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11496,"byte_end":11571,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"! motion events will then, when applicable, be transmitted via the proxy of","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11576,"byte_end":11653,"line_start":180,"line_end":180,"column_start":5,"column_end":82}},{"value":"! the newly created relative pointer object. See the documentation of the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11658,"byte_end":11733,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"! relative pointer interface for more details.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11738,"byte_end":11786,"line_start":182,"line_end":182,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":2937},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::relative_pointer::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":2973},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_interfaces.rs","byte_start":7899928,"byte_end":7899968,"line_start":17,"line_end":17,"column_start":16,"column_end":56},"name":"zwp_relative_pointer_manager_v1_requests","qualname":"::unstable::relative_pointer::v1::generated::c_interfaces::zwp_relative_pointer_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2975},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_interfaces.rs","byte_start":7900478,"byte_end":7900519,"line_start":31,"line_end":31,"column_start":16,"column_end":57},"name":"zwp_relative_pointer_manager_v1_interface","qualname":"::unstable::relative_pointer::v1::generated::c_interfaces::zwp_relative_pointer_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2976},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_interfaces.rs","byte_start":7900827,"byte_end":7900859,"line_start":39,"line_end":39,"column_start":16,"column_end":48},"name":"zwp_relative_pointer_v1_requests","qualname":"::unstable::relative_pointer::v1::generated::c_interfaces::zwp_relative_pointer_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2978},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_interfaces.rs","byte_start":7901065,"byte_end":7901095,"line_start":44,"line_end":44,"column_start":16,"column_end":46},"name":"zwp_relative_pointer_v1_events","qualname":"::unstable::relative_pointer::v1::generated::c_interfaces::zwp_relative_pointer_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":2980},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_interfaces.rs","byte_start":7901315,"byte_end":7901348,"line_start":49,"line_end":49,"column_start":16,"column_end":49},"name":"zwp_relative_pointer_v1_interface","qualname":"::unstable::relative_pointer::v1::generated::c_interfaces::zwp_relative_pointer_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2981},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7901789,"byte_end":7901820,"line_start":2,"line_end":2,"column_start":9,"column_end":40},"name":"zwp_relative_pointer_manager_v1","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":13067},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3005},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3042},{"krate":0,"index":3046},{"krate":0,"index":3050},{"krate":0,"index":3051}],"decl_id":null,"docs":"get relative pointer objects","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3000},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7902367,"byte_end":7902374,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":"destroy the relative pointer manager object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3002},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7902556,"byte_end":7902574,"line_start":13,"line_end":13,"column_start":9,"column_end":27},"name":"GetRelativePointer","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::Request::GetRelativePointer","value":"Request::GetRelativePointer { id, pointer }","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":"get a relative pointer object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2999},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7902103,"byte_end":7902110,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the relative pointer manager object\\n\\nUsed by the client to notify the server that it will no longer use this\\nrelative pointer manager object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"get a relative pointer object\\n\\nCreate a relative pointer interface given a wl_pointer object. See the\\nwp_relative_pointer interface for more details.\"]\n    GetRelativePointer {\n        id: Proxy<super::zwp_relative_pointer_v1::ZwpRelativePointerV1>,\n        pointer: Proxy<super::wl_pointer::WlPointer>,\n    },\n}","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3002}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3020},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7905636,"byte_end":7905641,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3034},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7906941,"byte_end":7906968,"line_start":141,"line_end":141,"column_start":16,"column_end":43},"name":"ZwpRelativePointerManagerV1","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::ZwpRelativePointerManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3042},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7907359,"byte_end":7907372,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3044}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7907662,"byte_end":7907669,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":"destroy the relative pointer manager object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7907867,"byte_end":7907887,"line_start":155,"line_end":155,"column_start":12,"column_end":32},"name":"get_relative_pointer","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::RequestsTrait::get_relative_pointer","value":"pub fn get_relative_pointer<F>(&Self, &Proxy<super::wl_pointer::WlPointer>, F)\n-> Result<Proxy<super::zwp_relative_pointer_v1::ZwpRelativePointerV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwp_relative_pointer_v1::ZwpRelativePointerV1>) ->\nProxy<super::zwp_relative_pointer_v1::ZwpRelativePointerV1>","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":"get a relative pointer object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3050},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7909203,"byte_end":7909220,"line_start":188,"line_end":188,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3051},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7909316,"byte_end":7909346,"line_start":190,"line_end":190,"column_start":15,"column_end":45},"name":"REQ_GET_RELATIVE_POINTER_SINCE","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_manager_v1::REQ_GET_RELATIVE_POINTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3052},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7909636,"byte_end":7909659,"line_start":193,"line_end":193,"column_start":9,"column_end":32},"name":"zwp_relative_pointer_v1","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":13095},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3087},{"krate":0,"index":3095},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3121}],"decl_id":null,"docs":"relative pointer object","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7910093,"byte_end":7910100,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3070},"children":[],"decl_id":null,"docs":"release the relative pointer object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3070},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7909942,"byte_end":7909949,"line_start":200,"line_end":200,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"release the relative pointer object\\n\\n\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3071}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3088},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7913550,"byte_end":7913564,"line_start":263,"line_end":263,"column_start":9,"column_end":23},"name":"RelativeMotion","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::Event::RelativeMotion","value":"Event::RelativeMotion { utime_hi, utime_lo, dx, dy, dx_unaccel, dy_unaccel }","parent":{"krate":0,"index":3087},"children":[],"decl_id":null,"docs":"relative pointer motion","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3087},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7911914,"byte_end":7911919,"line_start":261,"line_end":261,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"relative pointer motion\\n\\nRelative x/y pointer motion from the pointer of the seat associated with\\nthis object.\\n\\nA relative motion is in the same dimension as regular wl_pointer motion\\nevents, except they do not represent an absolute position. For example,\\nmoving a pointer from (x, y) to (x', y') would have the equivalent\\nrelative motion (x' - x, y' - y). If a pointer motion caused the\\nabsolute pointer position to be clipped by for example the edge of the\\nmonitor, the relative motion is unaffected by the clipping and will\\nrepresent the unclipped motion.\\n\\nThis event also contains non-accelerated motion deltas. The\\nnon-accelerated delta is, when applicable, the regular pointer motion\\ndelta as it was before having applied motion acceleration and other\\ntransformations such as normalization.\\n\\nNote that the non-accelerated delta does not represent 'raw' events as\\nthey were read from some device. Pointer motion acceleration is device-\\nand configuration-specific and non-accelerated deltas and accelerated\\ndeltas may have the same value on some devices.\\n\\nRelative motions are not coupled to wl_pointer.motion events, and can be\\nsent in combination with such events, but also independently. There may\\nalso be scenarios where wl_pointer.motion is sent, but there is no\\nrelative motion. The order of an absolute and relative motion event\\noriginating from the same physical motion is not guaranteed.\\n\\nIf the client needs button events or focus state, it can receive them\\nfrom a wl_pointer object of the same seat that the wp_relative_pointer\\nobject is associated with.\"]\n    RelativeMotion {\n        utime_hi: u32,\n        utime_lo: u32,\n        dx: f64,\n        dy: f64,\n        dx_unaccel: f64,\n        dy_unaccel: f64,\n    },\n}","parent":null,"children":[{"krate":0,"index":3088}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3108},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918019,"byte_end":7918039,"line_start":387,"line_end":387,"column_start":16,"column_end":36},"name":"ZwpRelativePointerV1","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::ZwpRelativePointerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3116},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918407,"byte_end":7918420,"line_start":397,"line_end":397,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918597,"byte_end":7918604,"line_start":399,"line_end":399,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3116},"children":[],"decl_id":null,"docs":"release the relative pointer object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3120},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918882,"byte_end":7918899,"line_start":408,"line_end":408,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3121},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918993,"byte_end":7919018,"line_start":410,"line_end":410,"column_start":15,"column_end":40},"name":"EVT_RELATIVE_MOTION_SINCE","qualname":"::unstable::relative_pointer::v1::generated::client::zwp_relative_pointer_v1::EVT_RELATIVE_MOTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11938,"byte_end":11944,"line_start":192,"line_end":192,"column_start":9,"column_end":15},"name":"tablet","qualname":"::unstable::tablet","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3123}],"decl_id":null,"docs":" Wayland protocol for graphics tablets","sig":null,"attributes":[{"value":"! Wayland protocol for graphics tablets","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11951,"byte_end":11992,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11997,"byte_end":12000,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"! This description provides a high-level overview of the interplay between","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12005,"byte_end":12081,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"! the interfaces defined this protocol. For details, see the protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12086,"byte_end":12157,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"! specification.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12162,"byte_end":12180,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12185,"byte_end":12188,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"! More than one tablet may exist, and device-specifics matter. Tablets are","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12193,"byte_end":12269,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"! not represented by a single virtual device like wl_pointer. A client","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12274,"byte_end":12346,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"! binds to the tablet manager object which is just a proxy object. From","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12351,"byte_end":12424,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"! that, the client requests wp_tablet_manager.get_tablet_seat(wl_seat)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12429,"byte_end":12501,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"! and that returns the actual interface that has all the tablets. With","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12506,"byte_end":12578,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"! this indirection, we can avoid merging wp_tablet into the actual Wayland","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12583,"byte_end":12659,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"! protocol, a long-term benefit.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12664,"byte_end":12698,"line_start":205,"line_end":205,"column_start":5,"column_end":39}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12703,"byte_end":12706,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"! The wp_tablet_seat sends a \"tablet added\" event for each tablet","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12711,"byte_end":12778,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"! connected. That event is followed by descriptive events about the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12783,"byte_end":12852,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"! hardware; currently that includes events for name, vid/pid and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12857,"byte_end":12923,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"! a wp_tablet.path event that describes a local path. This path can be","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":12928,"byte_end":13000,"line_start":210,"line_end":210,"column_start":5,"column_end":77}},{"value":"! used to uniquely identify a tablet or get more information through","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13005,"byte_end":13075,"line_start":211,"line_end":211,"column_start":5,"column_end":75}},{"value":"! libwacom. Emulated or nested tablets can skip any of those, e.g. a","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13080,"byte_end":13150,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"! virtual tablet may not have a vid/pid. The sequence of descriptive","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13155,"byte_end":13225,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"! events is terminated by a wp_tablet.done event to signal that a client","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13230,"byte_end":13304,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"! may now finalize any initialization for that tablet.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13309,"byte_end":13365,"line_start":215,"line_end":215,"column_start":5,"column_end":61}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13370,"byte_end":13373,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"! Events from tablets require a tool in proximity. Tools are also managed","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13378,"byte_end":13453,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"! by the tablet seat; a \"tool added\" event is sent whenever a tool is new","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13458,"byte_end":13533,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"! to the compositor. That event is followed by a number of descriptive","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13538,"byte_end":13610,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"! events about the hardware; currently that includes capabilities,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13615,"byte_end":13683,"line_start":220,"line_end":220,"column_start":5,"column_end":73}},{"value":"! hardware id and serial number, and tool type. Similar to the tablet","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13688,"byte_end":13759,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"! interface, a wp_tablet_tool.done event is sent to terminate that initial","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13764,"byte_end":13840,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"! sequence.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13845,"byte_end":13858,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13863,"byte_end":13866,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"! Any event from a tool happens on the wp_tablet_tool interface. When the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13871,"byte_end":13946,"line_start":225,"line_end":225,"column_start":5,"column_end":80}},{"value":"! tool gets into proximity of the tablet, a proximity_in event is sent on","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":13951,"byte_end":14026,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"! the wp_tablet_tool interface, listing the tablet and the surface. That","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14031,"byte_end":14105,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"! event is followed by a motion event with the coordinates. After that,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14110,"byte_end":14183,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"! it's the usual motion, axis, button, etc. events. The protocol's","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14188,"byte_end":14256,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"! serialisation means events are grouped by wp_tablet_tool.frame events.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14261,"byte_end":14335,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14340,"byte_end":14343,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"! Two special events (that don't exist in X) are down and up. They signal","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14348,"byte_end":14423,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"! \"tip touching the surface\". For tablets without real proximity","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14428,"byte_end":14494,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"! detection, the sequence is: proximity_in, motion, down, frame.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14499,"byte_end":14565,"line_start":234,"line_end":234,"column_start":5,"column_end":71}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14570,"byte_end":14573,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"! When the tool leaves proximity, a proximity_out event is sent. If any","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14578,"byte_end":14651,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"! button is still down, a button release event is sent before this","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14656,"byte_end":14724,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"! proximity event. These button events are sent in the same frame as the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14729,"byte_end":14803,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"! proximity event to signal to the client that the buttons were held when","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14808,"byte_end":14883,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"! the tool left proximity.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14888,"byte_end":14916,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14921,"byte_end":14924,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"! If the tool moves out of the surface but stays in proximity (i.e.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":14929,"byte_end":14998,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"! between windows), compositor-specific grab policies apply. This usually","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15003,"byte_end":15078,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"! means that the proximity-out is delayed until all buttons are released.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15083,"byte_end":15158,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15163,"byte_end":15166,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"! Moving a tool physically from one tablet to the other has no real effect","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15171,"byte_end":15247,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"! on the protocol, since we already have the tool object from the \"tool","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15252,"byte_end":15325,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"! added\" event. All the information is already there and the proximity","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15330,"byte_end":15402,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"! events on both tablets are all a client needs to reconstruct what","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15407,"byte_end":15476,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"! happened.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15481,"byte_end":15494,"line_start":250,"line_end":250,"column_start":5,"column_end":18}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15499,"byte_end":15502,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"! Some extra axes are normalized, i.e. the client knows the range as","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15507,"byte_end":15577,"line_start":252,"line_end":252,"column_start":5,"column_end":75}},{"value":"! specified in the protocol (e.g. [0, 65535]), the granularity however is","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15582,"byte_end":15657,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"! unknown. The current normalized axes are pressure, distance, and slider.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15662,"byte_end":15738,"line_start":254,"line_end":254,"column_start":5,"column_end":81}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15743,"byte_end":15746,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"! Other extra axes are in physical units as specified in the protocol.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15751,"byte_end":15823,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"! The current extra axes with physical units are tilt, rotation and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15828,"byte_end":15897,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"! wheel rotation.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15902,"byte_end":15921,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15926,"byte_end":15929,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"! Since tablets work independently of the pointer controlled by the mouse,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":15934,"byte_end":16010,"line_start":260,"line_end":260,"column_start":5,"column_end":81}},{"value":"! the focus handling is independent too and controlled by proximity.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16015,"byte_end":16085,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"! The wp_tablet_tool.set_cursor request sets a tool-specific cursor.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16090,"byte_end":16160,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"! This cursor surface may be the same as the mouse cursor, and it may be","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16165,"byte_end":16239,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"! the same across tools but it is possible to be more fine-grained. For","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16244,"byte_end":16317,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"! example, a client may set different cursors for the pen and eraser.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16322,"byte_end":16393,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16398,"byte_end":16401,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"! Tools are generally independent of tablets and it is","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16406,"byte_end":16462,"line_start":267,"line_end":267,"column_start":5,"column_end":61}},{"value":"! compositor-specific policy when a tool can be removed. Common approaches","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16467,"byte_end":16543,"line_start":268,"line_end":268,"column_start":5,"column_end":81}},{"value":"! will likely include some form of removing a tool when all tablets the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16548,"byte_end":16621,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"! tool was used on are removed.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16626,"byte_end":16659,"line_start":270,"line_end":270,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3122},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::tablet::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":3161},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7919552,"byte_end":7919582,"line_start":13,"line_end":13,"column_start":16,"column_end":46},"name":"zwp_tablet_manager_v1_requests","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3163},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7920052,"byte_end":7920083,"line_start":25,"line_end":25,"column_start":16,"column_end":47},"name":"zwp_tablet_manager_v1_interface","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3164},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7920371,"byte_end":7920398,"line_start":33,"line_end":33,"column_start":16,"column_end":43},"name":"zwp_tablet_seat_v1_requests","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_seat_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3170},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7920907,"byte_end":7920932,"line_start":42,"line_end":42,"column_start":16,"column_end":41},"name":"zwp_tablet_seat_v1_events","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_seat_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3172},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7921426,"byte_end":7921454,"line_start":54,"line_end":54,"column_start":16,"column_end":44},"name":"zwp_tablet_seat_v1_interface","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_seat_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3175},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7922015,"byte_end":7922042,"line_start":68,"line_end":68,"column_start":16,"column_end":43},"name":"zwp_tablet_tool_v1_requests","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_tool_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3179},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7922752,"byte_end":7922777,"line_start":85,"line_end":85,"column_start":16,"column_end":41},"name":"zwp_tablet_tool_v1_events","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_tool_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3181},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7926478,"byte_end":7926506,"line_start":182,"line_end":182,"column_start":16,"column_end":44},"name":"zwp_tablet_tool_v1_interface","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_tool_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3182},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7926810,"byte_end":7926832,"line_start":190,"line_end":190,"column_start":16,"column_end":38},"name":"zwp_tablet_v1_requests","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3184},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7927038,"byte_end":7927058,"line_start":195,"line_end":195,"column_start":16,"column_end":36},"name":"zwp_tablet_v1_events","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3186},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_interfaces.rs","byte_start":7928033,"byte_end":7928056,"line_start":222,"line_end":222,"column_start":16,"column_end":39},"name":"zwp_tablet_v1_interface","qualname":"::unstable::tablet::v1::generated::c_interfaces::zwp_tablet_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3187},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7928596,"byte_end":7928617,"line_start":2,"line_end":2,"column_start":9,"column_end":30},"name":"zwp_tablet_manager_v1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":13165},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3211},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3240},{"krate":0,"index":3242},{"krate":0,"index":3248},{"krate":0,"index":3252},{"krate":0,"index":3256},{"krate":0,"index":3257}],"decl_id":null,"docs":"controller object for graphic tablet devices","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3206},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7929077,"byte_end":7929090,"line_start":11,"line_end":11,"column_start":9,"column_end":22},"name":"GetTabletSeat","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::Request::GetTabletSeat","value":"Request::GetTabletSeat { tablet_seat, seat }","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"get the tablet seat","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3209},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7929505,"byte_end":7929512,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"release the memory for the tablet manager object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3205},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7928900,"byte_end":7928907,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"get the tablet seat\\n\\nGet the wp_tablet_seat object for the given seat. This object\\nprovides access to all graphics tablets in this seat.\"]\n    GetTabletSeat {\n        tablet_seat: Proxy<super::zwp_tablet_seat_v1::ZwpTabletSeatV1>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n\n    #[doc =\n      \"release the memory for the tablet manager object\\n\\nDestroy the wp_tablet_manager object. Objects created from this\\nobject are unaffected and should be destroyed separately.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3206},{"krate":0,"index":3209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3226},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7932492,"byte_end":7932497,"line_start":101,"line_end":101,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3240},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7933797,"byte_end":7933815,"line_start":144,"line_end":144,"column_start":16,"column_end":34},"name":"ZwpTabletManagerV1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::ZwpTabletManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3248},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7934177,"byte_end":7934190,"line_start":154,"line_end":154,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3251}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7934363,"byte_end":7934378,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"get_tablet_seat","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::RequestsTrait::get_tablet_seat","value":"pub fn get_tablet_seat<F>(&Self, &Proxy<super::wl_seat::WlSeat>, F)\n-> Result<Proxy<super::zwp_tablet_seat_v1::ZwpTabletSeatV1>, ()> where\nF: FnOnce(NewProxy<super::zwp_tablet_seat_v1::ZwpTabletSeatV1>) ->\nProxy<super::zwp_tablet_seat_v1::ZwpTabletSeatV1>","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"get the tablet seat","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7935039,"byte_end":7935046,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"release the memory for the tablet manager object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3256},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7935931,"byte_end":7935956,"line_start":191,"line_end":191,"column_start":15,"column_end":40},"name":"REQ_GET_TABLET_SEAT_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::REQ_GET_TABLET_SEAT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3257},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7936052,"byte_end":7936069,"line_start":193,"line_end":193,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3258},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7936372,"byte_end":7936390,"line_start":196,"line_end":196,"column_start":9,"column_end":27},"name":"zwp_tablet_seat_v1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":13193},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3293},{"krate":0,"index":3298},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325}],"decl_id":null,"docs":"controller object for graphic tablet devices of a seat","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3277},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7936953,"byte_end":7936960,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3276},"children":[],"decl_id":null,"docs":"release the memory for the tablet seat object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3276},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7936673,"byte_end":7936680,"line_start":203,"line_end":203,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"release the memory for the tablet seat object\\n\\nDestroy the wp_tablet_seat object. Objects created from this\\nobject are unaffected and should be destroyed separately.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3277}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3294},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7939076,"byte_end":7939087,"line_start":266,"line_end":266,"column_start":9,"column_end":20},"name":"TabletAdded","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::Event::TabletAdded","value":"Event::TabletAdded { id }","parent":{"krate":0,"index":3293},"children":[],"decl_id":null,"docs":"new device notification","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3296},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7939496,"byte_end":7939505,"line_start":270,"line_end":270,"column_start":9,"column_end":18},"name":"ToolAdded","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::Event::ToolAdded","value":"Event::ToolAdded { id }","parent":{"krate":0,"index":3293},"children":[],"decl_id":null,"docs":"a new tool has been used with a tablet","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3293},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7938774,"byte_end":7938779,"line_start":264,"line_end":264,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"new device notification\\n\\nThis event is sent whenever a new tablet becomes available on this\\nseat. This event only provides the object id of the tablet, any\\nstatic information about the tablet (device name, vid/pid, etc.) is\\nsent through the wp_tablet interface.\"]\n    TabletAdded {\n        id: NewProxy<super::zwp_tablet_v1::ZwpTabletV1>,\n    },\n\n    #[doc =\n      \"a new tool has been used with a tablet\\n\\nThis event is sent whenever a tool that has not previously been used\\nwith a tablet comes into use. This event only provides the object id\\nof the tool; any static information about the tool (capabilities,\\ntype, etc.) is sent through the wp_tablet_tool interface.\"]\n    ToolAdded {\n        id: NewProxy<super::zwp_tablet_tool_v1::ZwpTabletToolV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":3294},{"krate":0,"index":3296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3311},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7943356,"byte_end":7943371,"line_start":379,"line_end":379,"column_start":16,"column_end":31},"name":"ZwpTabletSeatV1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::ZwpTabletSeatV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3319},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7943724,"byte_end":7943737,"line_start":389,"line_end":389,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7944043,"byte_end":7944050,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3319},"children":[],"decl_id":null,"docs":"release the memory for the tablet seat object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3323},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7944323,"byte_end":7944340,"line_start":400,"line_end":400,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3324},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7944434,"byte_end":7944456,"line_start":402,"line_end":402,"column_start":15,"column_end":37},"name":"EVT_TABLET_ADDED_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::EVT_TABLET_ADDED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3325},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7944550,"byte_end":7944570,"line_start":404,"line_end":404,"column_start":15,"column_end":35},"name":"EVT_TOOL_ADDED_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_seat_v1::EVT_TOOL_ADDED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3326},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7945728,"byte_end":7945746,"line_start":407,"line_end":407,"column_start":9,"column_end":27},"name":"zwp_tablet_tool_v1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":13221},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3557},{"krate":0,"index":3589},{"krate":0,"index":3587},{"krate":0,"index":3585},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3344},{"krate":0,"index":3590},{"krate":0,"index":3616},{"krate":0,"index":3614},{"krate":0,"index":3612},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3347},{"krate":0,"index":3617},{"krate":0,"index":3631},{"krate":0,"index":3629},{"krate":0,"index":3627},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3350},{"krate":0,"index":3632},{"krate":0,"index":3643},{"krate":0,"index":3641},{"krate":0,"index":3639},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3353},{"krate":0,"index":3356},{"krate":0,"index":3364},{"krate":0,"index":3380},{"krate":0,"index":3428},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3449},{"krate":0,"index":3452},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476}],"decl_id":null,"docs":"a physical tablet tool","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946509,"byte_end":7946512,"line_start":419,"line_end":419,"column_start":9,"column_end":12},"name":"Pen","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Pen","value":"Type::Pen","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Pen\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3561},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946554,"byte_end":7946560,"line_start":421,"line_end":421,"column_start":9,"column_end":15},"name":"Eraser","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Eraser","value":"Type::Eraser","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Eraser\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3564},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946601,"byte_end":7946606,"line_start":423,"line_end":423,"column_start":9,"column_end":14},"name":"Brush","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Brush","value":"Type::Brush","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Brush\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946648,"byte_end":7946654,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"name":"Pencil","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Pencil","value":"Type::Pencil","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Pencil\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3570},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946698,"byte_end":7946706,"line_start":427,"line_end":427,"column_start":9,"column_end":17},"name":"Airbrush","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Airbrush","value":"Type::Airbrush","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Airbrush\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3573},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946748,"byte_end":7946754,"line_start":429,"line_end":429,"column_start":9,"column_end":15},"name":"Finger","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Finger","value":"Type::Finger","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Finger\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946795,"byte_end":7946800,"line_start":431,"line_end":431,"column_start":9,"column_end":14},"name":"Mouse","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Mouse","value":"Type::Mouse","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Mouse\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946840,"byte_end":7946844,"line_start":433,"line_end":433,"column_start":9,"column_end":13},"name":"Lens","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type::Lens","value":"Type::Lens","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"Lens\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3557},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946471,"byte_end":7946475,"line_start":417,"line_end":417,"column_start":14,"column_end":18},"name":"Type","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Type","value":"pub enum Type {\n\n    #[doc = \"Pen\"]\n    Pen = ,\n\n    #[doc = \"Eraser\"]\n    Eraser = ,\n\n    #[doc = \"Brush\"]\n    Brush = ,\n\n    #[doc = \"Pencil\"]\n    Pencil = ,\n\n    #[doc = \"Airbrush\"]\n    Airbrush = ,\n\n    #[doc = \"Finger\"]\n    Finger = ,\n\n    #[doc = \"Mouse\"]\n    Mouse = ,\n\n    #[doc = \"Lens\"]\n    Lens = ,\n}","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3579}],"decl_id":null,"docs":"a physical tool type","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946400,"byte_end":7946412,"line_start":415,"line_end":415,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946889,"byte_end":7946897,"line_start":436,"line_end":436,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Type>::from_raw","value":"pub fn from_raw(u32) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947359,"byte_end":7947365,"line_start":449,"line_end":449,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Type>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3591},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947710,"byte_end":7947714,"line_start":458,"line_end":458,"column_start":9,"column_end":13},"name":"Tilt","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability::Tilt","value":"Capability::Tilt","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":"Tilt axes\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3594},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947761,"byte_end":7947769,"line_start":460,"line_end":460,"column_start":9,"column_end":17},"name":"Pressure","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability::Pressure","value":"Capability::Pressure","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":"Pressure axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3597},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947816,"byte_end":7947824,"line_start":462,"line_end":462,"column_start":9,"column_end":17},"name":"Distance","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability::Distance","value":"Capability::Distance","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":"Distance axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3600},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947873,"byte_end":7947881,"line_start":464,"line_end":464,"column_start":9,"column_end":17},"name":"Rotation","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability::Rotation","value":"Capability::Rotation","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":"Z-rotation axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3603},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947926,"byte_end":7947932,"line_start":466,"line_end":466,"column_start":9,"column_end":15},"name":"Slider","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability::Slider","value":"Capability::Slider","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":"Slider axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3606},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947976,"byte_end":7947981,"line_start":468,"line_end":468,"column_start":9,"column_end":14},"name":"Wheel","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability::Wheel","value":"Capability::Wheel","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":"Wheel axis\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3590},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947660,"byte_end":7947670,"line_start":456,"line_end":456,"column_start":14,"column_end":24},"name":"Capability","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Capability","value":"pub enum Capability {\n\n    #[doc = \"Tilt axes\"]\n    Tilt = ,\n\n    #[doc = \"Pressure axis\"]\n    Pressure = ,\n\n    #[doc = \"Distance axis\"]\n    Distance = ,\n\n    #[doc = \"Z-rotation axis\"]\n    Rotation = ,\n\n    #[doc = \"Slider axis\"]\n    Slider = ,\n\n    #[doc = \"Wheel axis\"]\n    Wheel = ,\n}","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3606}],"decl_id":null,"docs":"capability flags for a tool","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7947589,"byte_end":7947601,"line_start":454,"line_end":454,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948030,"byte_end":7948038,"line_start":471,"line_end":471,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Capability>::from_raw","value":"pub fn from_raw(u32) -> Option<Capability>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948452,"byte_end":7948458,"line_start":482,"line_end":482,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Capability>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3618},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948767,"byte_end":7948775,"line_start":491,"line_end":491,"column_start":9,"column_end":17},"name":"Released","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::ButtonState::Released","value":"ButtonState::Released","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":"button is not pressed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3621},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948826,"byte_end":7948833,"line_start":493,"line_end":493,"column_start":9,"column_end":16},"name":"Pressed","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::ButtonState::Pressed","value":"ButtonState::Pressed","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":"button is pressed\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3617},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948704,"byte_end":7948715,"line_start":489,"line_end":489,"column_start":14,"column_end":25},"name":"ButtonState","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::ButtonState","value":"pub enum ButtonState {\n\n    #[doc = \"button is not pressed\"]\n    Released = ,\n\n    #[doc = \"button is pressed\"]\n    Pressed = ,\n}","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3621}],"decl_id":null,"docs":"physical button state","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948633,"byte_end":7948645,"line_start":487,"line_end":487,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948883,"byte_end":7948891,"line_start":496,"line_end":496,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ButtonState>::from_raw","value":"pub fn from_raw(u32) -> Option<ButtonState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949120,"byte_end":7949126,"line_start":503,"line_end":503,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ButtonState>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3633},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949328,"byte_end":7949332,"line_start":511,"line_end":511,"column_start":9,"column_end":13},"name":"Role","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Error::Role","value":"Error::Role","parent":{"krate":0,"index":3632},"children":[],"decl_id":null,"docs":"given wl_surface has another role\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3632},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949259,"byte_end":7949264,"line_start":509,"line_end":509,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Error","value":"pub enum Error {\n\n    #[doc = \"given wl_surface has another role\"]\n    Role = ,\n}","parent":null,"children":[{"krate":0,"index":3633}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949188,"byte_end":7949200,"line_start":507,"line_end":507,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949376,"byte_end":7949384,"line_start":514,"line_end":514,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949548,"byte_end":7949554,"line_start":520,"line_end":520,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7951333,"byte_end":7951342,"line_start":526,"line_end":526,"column_start":9,"column_end":18},"name":"SetCursor","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Request::SetCursor","value":"Request::SetCursor { serial, surface, hotspot_x, hotspot_y }","parent":{"krate":0,"index":3356},"children":[],"decl_id":null,"docs":"set the tablet tool's surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3362},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7951689,"byte_end":7951696,"line_start":533,"line_end":533,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3356},"children":[],"decl_id":null,"docs":"destroy the tool object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3356},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949625,"byte_end":7949632,"line_start":524,"line_end":524,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set the tablet tool's surface\\n\\nSets the surface of the cursor used for this tool on the given\\ntablet. This request only takes effect if the tool is in proximity\\nof one of the requesting client's surfaces or the surface parameter\\nis the current pointer surface. If there was a previous surface set\\nwith this request it is replaced. If surface is NULL, the cursor\\nimage is hidden.\\n\\nThe parameters hotspot_x and hotspot_y define the position of the\\npointer surface relative to the pointer location. Its top-left corner\\nis always at (x, y) - (hotspot_x, hotspot_y), where (x, y) are the\\ncoordinates of the pointer location, in surface-local coordinates.\\n\\nOn surface.attach requests to the pointer surface, hotspot_x and\\nhotspot_y are decremented by the x and y parameters passed to the\\nrequest. Attach must be confirmed by wl_surface.commit as usual.\\n\\nThe hotspot can also be updated by passing the currently set pointer\\nsurface to this request with new values for hotspot_x and hotspot_y.\\n\\nThe current and pending input regions of the wl_surface are cleared,\\nand wl_surface.set_input_region is ignored until the wl_surface is no\\nlonger used as the cursor. When the use as a cursor ends, the current\\nand pending input regions become undefined, and the wl_surface is\\nunmapped.\\n\\nThis request gives the surface the role of a cursor. The role\\nassigned by this request is the same as assigned by\\nwl_pointer.set_cursor meaning the same surface can be\\nused both as a wl_pointer cursor and a wp_tablet cursor. If the\\nsurface already has another role, it raises a protocol error.\\nThe surface may be used on multiple tablets and across multiple\\nseats.\"]\n    SetCursor {\n        serial: u32,\n        surface: Option<Proxy<super::wl_surface::WlSurface>>,\n        hotspot_x: i32,\n        hotspot_y: i32,\n    },\n\n    #[doc =\n      \"destroy the tool object\\n\\nThis destroys the client's resource for this tool object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3381},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7955426,"byte_end":7955430,"line_start":638,"line_end":638,"column_start":9,"column_end":13},"name":"Type","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Type","value":"Event::Type { tool_type }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tool type","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3383},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7956161,"byte_end":7956175,"line_start":640,"line_end":640,"column_start":9,"column_end":23},"name":"HardwareSerial","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::HardwareSerial","value":"Event::HardwareSerial { hardware_serial_hi, hardware_serial_lo }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"unique hardware serial number of the tool","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3386},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7956779,"byte_end":7956794,"line_start":645,"line_end":645,"column_start":9,"column_end":24},"name":"HardwareIdWacom","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::HardwareIdWacom","value":"Event::HardwareIdWacom { hardware_id_hi, hardware_id_lo }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"hardware id notification in Wacom's format","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3389},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7957221,"byte_end":7957231,"line_start":650,"line_end":650,"column_start":9,"column_end":19},"name":"Capability","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Capability","value":"Event::Capability { capability }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tool capability notification","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3391},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7957518,"byte_end":7957522,"line_start":652,"line_end":652,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Done","value":"Event::Done","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tool description events sequence complete","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3393},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7958231,"byte_end":7958238,"line_start":654,"line_end":654,"column_start":9,"column_end":16},"name":"Removed","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Removed","value":"Event::Removed","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tool removed","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3395},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7958691,"byte_end":7958702,"line_start":656,"line_end":656,"column_start":9,"column_end":20},"name":"ProximityIn","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::ProximityIn","value":"Event::ProximityIn { serial, tablet, surface }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"proximity in event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3399},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7959494,"byte_end":7959506,"line_start":662,"line_end":662,"column_start":9,"column_end":21},"name":"ProximityOut","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::ProximityOut","value":"Event::ProximityOut","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"proximity out event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3401},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7960081,"byte_end":7960085,"line_start":664,"line_end":664,"column_start":9,"column_end":13},"name":"Down","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Down","value":"Event::Down { serial }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tablet tool is making contact","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3403},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7961007,"byte_end":7961009,"line_start":666,"line_end":666,"column_start":9,"column_end":11},"name":"Up","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Up","value":"Event::Up","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tablet tool is no longer making contact","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3405},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7961089,"byte_end":7961095,"line_start":668,"line_end":668,"column_start":9,"column_end":15},"name":"Motion","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Motion","value":"Event::Motion { x, y }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"motion event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3408},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7961417,"byte_end":7961425,"line_start":670,"line_end":670,"column_start":9,"column_end":17},"name":"Pressure","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Pressure","value":"Event::Pressure { pressure }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"pressure change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3410},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7961746,"byte_end":7961754,"line_start":672,"line_end":672,"column_start":9,"column_end":17},"name":"Distance","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Distance","value":"Event::Distance { distance }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"distance change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3412},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7962047,"byte_end":7962051,"line_start":674,"line_end":674,"column_start":9,"column_end":13},"name":"Tilt","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Tilt","value":"Event::Tilt { tilt_x, tilt_y }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"tilt change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3415},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7962287,"byte_end":7962295,"line_start":676,"line_end":676,"column_start":9,"column_end":17},"name":"Rotation","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Rotation","value":"Event::Rotation { degrees }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"z-rotation change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3417},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7962594,"byte_end":7962600,"line_start":678,"line_end":678,"column_start":9,"column_end":15},"name":"Slider","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Slider","value":"Event::Slider { position }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"Slider position change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3419},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7963339,"byte_end":7963344,"line_start":680,"line_end":680,"column_start":9,"column_end":14},"name":"Wheel","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Wheel","value":"Event::Wheel { degrees, clicks }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"Wheel delta event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3422},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7963678,"byte_end":7963684,"line_start":682,"line_end":682,"column_start":9,"column_end":15},"name":"Button","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Button","value":"Event::Button { serial, button, state }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"button event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3426},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7964041,"byte_end":7964046,"line_start":688,"line_end":688,"column_start":9,"column_end":14},"name":"Frame","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event::Frame","value":"Event::Frame { time }","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"frame event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3380},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7955175,"byte_end":7955180,"line_start":636,"line_end":636,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"tool type\\n\\nThe tool type is the high-level type of the tool and usually decides\\nthe interaction expected from this tool.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    Type {\n        tool_type: Type,\n    },\n\n    #[doc =\n      \"unique hardware serial number of the tool\\n\\nIf the physical tool can be identified by a unique 64-bit serial\\nnumber, this event notifies the client of this serial number.\\n\\nIf multiple tablets are available in the same seat and the tool is\\nuniquely identifiable by the serial number, that tool may move\\nbetween tablets.\\n\\nOtherwise, if the tool has no serial number and this event is\\nmissing, the tool is tied to the tablet it first comes into\\nproximity with. Even if the physical tool is used on multiple\\ntablets, separate wp_tablet_tool objects will be created, one per\\ntablet.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    HardwareSerial {\n        hardware_serial_hi: u32,\n        hardware_serial_lo: u32,\n    },\n\n    #[doc =\n      \"hardware id notification in Wacom's format\\n\\nThis event notifies the client of a hardware id available on this tool.\\n\\nThe hardware id is a device-specific 64-bit id that provides extra\\ninformation about the tool in use, beyond the wl_tool.type\\nenumeration. The format of the id is specific to tablets made by\\nWacom Inc. For example, the hardware id of a Wacom Grip\\nPen (a stylus) is 0x802.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    HardwareIdWacom {\n        hardware_id_hi: u32,\n        hardware_id_lo: u32,\n    },\n\n    #[doc =\n      \"tool capability notification\\n\\nThis event notifies the client of any capabilities of this tool,\\nbeyond the main set of x/y axes and tip up/down detection.\\n\\nOne event is sent for each extra capability available on this tool.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    Capability {\n        capability: Capability,\n    },\n\n    #[doc =\n      \"tool description events sequence complete\\n\\nThis event signals the end of the initial burst of descriptive\\nevents. A client may consider the static description of the tool to\\nbe complete and finalize initialization of the tool.\"]\n    Done,\n\n    #[doc =\n      \"tool removed\\n\\nThis event is sent when the tool is removed from the system and will\\nsend no further events. Should the physical tool come back into\\nproximity later, a new wp_tablet_tool object will be created.\\n\\nIt is compositor-dependent when a tool is removed. A compositor may\\nremove a tool on proximity out, tablet removal or any other reason.\\nA compositor may also keep a tool alive until shutdown.\\n\\nIf the tool is currently in proximity, a proximity_out event will be\\nsent before the removed event. See wp_tablet_tool.proximity_out for\\nthe handling of any buttons logically down.\\n\\nWhen this event is received, the client must wp_tablet_tool.destroy\\nthe object.\"]\n    Removed,\n\n    #[doc =\n      \"proximity in event\\n\\nNotification that this tool is focused on a certain surface.\\n\\nThis event can be received when the tool has moved from one surface to\\nanother, or when the tool has come back into proximity above the\\nsurface.\\n\\nIf any button is logically down when the tool comes into proximity,\\nthe respective button event is sent after the proximity_in event but\\nwithin the same frame as the proximity_in event.\"]\n    ProximityIn {\n        serial: u32,\n        tablet: Proxy<super::zwp_tablet_v1::ZwpTabletV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"proximity out event\\n\\nNotification that this tool has either left proximity, or is no\\nlonger focused on a certain surface.\\n\\nWhen the tablet tool leaves proximity of the tablet, button release\\nevents are sent for each button that was held down at the time of\\nleaving proximity. These events are sent before the proximity_out\\nevent but within the same wp_tablet.frame.\\n\\nIf the tool stays within proximity of the tablet, but the focus\\nchanges from one surface to another, a button release event may not\\nbe sent until the button is actually released or the tool leaves the\\nproximity of the tablet.\"]\n    ProximityOut,\n\n    #[doc =\n      \"tablet tool is making contact\\n\\nSent whenever the tablet tool comes in contact with the surface of the\\ntablet.\\n\\nIf the tool is already in contact with the tablet when entering the\\ninput region, the client owning said region will receive a\\nwp_tablet.proximity_in event, followed by a wp_tablet.down\\nevent and a wp_tablet.frame event.\\n\\nNote that this event describes logical contact, not physical\\ncontact. On some devices, a compositor may not consider a tool in\\nlogical contact until a minimum physical pressure threshold is\\nexceeded.\"]\n    Down {\n        serial: u32,\n    },\n\n    #[doc =\n      \"tablet tool is no longer making contact\\n\\nSent whenever the tablet tool stops making contact with the surface of\\nthe tablet, or when the tablet tool moves out of the input region\\nand the compositor grab (if any) is dismissed.\\n\\nIf the tablet tool moves out of the input region while in contact\\nwith the surface of the tablet and the compositor does not have an\\nongoing grab on the surface, the client owning said region will\\nreceive a wp_tablet.up event, followed by a wp_tablet.proximity_out\\nevent and a wp_tablet.frame event. If the compositor has an ongoing\\ngrab on this device, this event sequence is sent whenever the grab\\nis dismissed in the future.\\n\\nNote that this event describes logical contact, not physical\\ncontact. On some devices, a compositor may not consider a tool out\\nof logical contact until physical pressure falls below a specific\\nthreshold.\"]\n    Up,\n\n    #[doc = \"motion event\\n\\nSent whenever a tablet tool moves.\"]\n    Motion {\n        x: f64,\n        y: f64,\n    },\n\n    #[doc =\n      \"pressure change event\\n\\nSent whenever the pressure axis on a tool changes. The value of this\\nevent is normalized to a value between 0 and 65535.\\n\\nNote that pressure may be nonzero even when a tool is not in logical\\ncontact. See the down and up events for more details.\"]\n    Pressure {\n        pressure: u32,\n    },\n\n    #[doc =\n      \"distance change event\\n\\nSent whenever the distance axis on a tool changes. The value of this\\nevent is normalized to a value between 0 and 65535.\\n\\nNote that distance may be nonzero even when a tool is not in logical\\ncontact. See the down and up events for more details.\"]\n    Distance {\n        distance: u32,\n    },\n\n    #[doc =\n      \"tilt change event\\n\\nSent whenever one or both of the tilt axes on a tool change. Each tilt\\nvalue is in 0.01 of a degree, relative to the z-axis of the tablet.\\nThe angle is positive when the top of a tool tilts along the\\npositive x or y axis.\"]\n    Tilt {\n        tilt_x: i32,\n        tilt_y: i32,\n    },\n\n    #[doc =\n      \"z-rotation change event\\n\\nSent whenever the z-rotation axis on the tool changes. The\\nrotation value is in 0.01 of a degree clockwise from the tool's\\nlogical neutral position.\"]\n    Rotation {\n        degrees: i32,\n    },\n\n    #[doc =\n      \"Slider position change event\\n\\nSent whenever the slider position on the tool changes. The\\nvalue is normalized between -65535 and 65535, with 0 as the logical\\nneutral position of the slider.\\n\\nThe slider is available on e.g. the Wacom Airbrush tool.\"]\n    Slider {\n        position: i32,\n    },\n\n    #[doc =\n      \"Wheel delta event\\n\\nSent whenever the wheel on the tool emits an event. This event\\ncontains two values for the same axis change. The degrees value is\\nin 0.01 of a degree in the same orientation as the\\nwl_pointer.vertical_scroll axis. The clicks value is in discrete\\nlogical clicks of the mouse wheel. This value may be zero if the\\nmovement of the wheel was less than one logical click.\\n\\nClients should choose either value and avoid mixing degrees and\\nclicks. The compositor may accumulate values smaller than a logical\\nclick and emulate click events when a certain threshold is met.\\nThus, wl_tablet_tool.wheel events with non-zero clicks values may\\nhave different degrees values.\"]\n    Wheel {\n        degrees: i32,\n        clicks: i32,\n    },\n\n    #[doc =\n      \"button event\\n\\nSent whenever a button on the tool is pressed or released.\\n\\nIf a button is held down when the tool moves in or out of proximity,\\nbutton events are generated by the compositor. See\\nwp_tablet_tool.proximity_in and wp_tablet_tool.proximity_out for\\ndetails.\"]\n    Button {\n        serial: u32,\n        button: u32,\n        state: ButtonState,\n    },\n\n    #[doc =\n      \"frame event\\n\\nMarks the end of a series of axis and/or button updates from the\\ntablet. The Wayland protocol requires axis updates to be sent\\nsequentially, however all events within a frame should be considered\\none hardware event.\"]\n    Frame {\n        time: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3403},{"krate":0,"index":3405},{"krate":0,"index":3408},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3422},{"krate":0,"index":3426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3441},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7983593,"byte_end":7983608,"line_start":1208,"line_end":1208,"column_start":16,"column_end":31},"name":"ZwpTabletToolV1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::ZwpTabletToolV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3449},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7983961,"byte_end":7983974,"line_start":1218,"line_end":1218,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3451}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7985678,"byte_end":7985688,"line_start":1220,"line_end":1220,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::RequestsTrait::set_cursor","value":"pub fn set_cursor(&Self, u32, Option<&Proxy<super::wl_surface::WlSurface>>,\n                  i32, i32) -> ()","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":"set the tablet tool's surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7986093,"byte_end":7986100,"line_start":1228,"line_end":1228,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":"destroy the tool object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3456},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7986838,"byte_end":7986858,"line_start":1252,"line_end":1252,"column_start":15,"column_end":35},"name":"REQ_SET_CURSOR_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::REQ_SET_CURSOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3457},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7986954,"byte_end":7986971,"line_start":1254,"line_end":1254,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3458},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987065,"byte_end":7987079,"line_start":1256,"line_end":1256,"column_start":15,"column_end":29},"name":"EVT_TYPE_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_TYPE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3459},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987173,"byte_end":7987198,"line_start":1258,"line_end":1258,"column_start":15,"column_end":40},"name":"EVT_HARDWARE_SERIAL_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_HARDWARE_SERIAL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3460},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987292,"byte_end":7987319,"line_start":1260,"line_end":1260,"column_start":15,"column_end":42},"name":"EVT_HARDWARE_ID_WACOM_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_HARDWARE_ID_WACOM_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3461},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987413,"byte_end":7987433,"line_start":1262,"line_end":1262,"column_start":15,"column_end":35},"name":"EVT_CAPABILITY_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_CAPABILITY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3462},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987527,"byte_end":7987541,"line_start":1264,"line_end":1264,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3463},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987635,"byte_end":7987652,"line_start":1266,"line_end":1266,"column_start":15,"column_end":32},"name":"EVT_REMOVED_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_REMOVED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3464},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987746,"byte_end":7987768,"line_start":1268,"line_end":1268,"column_start":15,"column_end":37},"name":"EVT_PROXIMITY_IN_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_PROXIMITY_IN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3465},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987862,"byte_end":7987885,"line_start":1270,"line_end":1270,"column_start":15,"column_end":38},"name":"EVT_PROXIMITY_OUT_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_PROXIMITY_OUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3466},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7987979,"byte_end":7987993,"line_start":1272,"line_end":1272,"column_start":15,"column_end":29},"name":"EVT_DOWN_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_DOWN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3467},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988087,"byte_end":7988099,"line_start":1274,"line_end":1274,"column_start":15,"column_end":27},"name":"EVT_UP_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_UP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3468},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988193,"byte_end":7988209,"line_start":1276,"line_end":1276,"column_start":15,"column_end":31},"name":"EVT_MOTION_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_MOTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3469},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988303,"byte_end":7988321,"line_start":1278,"line_end":1278,"column_start":15,"column_end":33},"name":"EVT_PRESSURE_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_PRESSURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3470},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988415,"byte_end":7988433,"line_start":1280,"line_end":1280,"column_start":15,"column_end":33},"name":"EVT_DISTANCE_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_DISTANCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3471},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988527,"byte_end":7988541,"line_start":1282,"line_end":1282,"column_start":15,"column_end":29},"name":"EVT_TILT_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_TILT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3472},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988635,"byte_end":7988653,"line_start":1284,"line_end":1284,"column_start":15,"column_end":33},"name":"EVT_ROTATION_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_ROTATION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3473},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988747,"byte_end":7988763,"line_start":1286,"line_end":1286,"column_start":15,"column_end":31},"name":"EVT_SLIDER_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_SLIDER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3474},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988857,"byte_end":7988872,"line_start":1288,"line_end":1288,"column_start":15,"column_end":30},"name":"EVT_WHEEL_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_WHEEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3475},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7988966,"byte_end":7988982,"line_start":1290,"line_end":1290,"column_start":15,"column_end":31},"name":"EVT_BUTTON_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_BUTTON_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3476},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7989076,"byte_end":7989091,"line_start":1292,"line_end":1292,"column_start":15,"column_end":30},"name":"EVT_FRAME_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_tool_v1::EVT_FRAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3477},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7989604,"byte_end":7989617,"line_start":1295,"line_end":1295,"column_start":9,"column_end":22},"name":"zwp_tablet_v1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":13249},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3498},{"krate":0,"index":3512},{"krate":0,"index":3524},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556}],"decl_id":null,"docs":"graphics tablet device","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3496},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7990100,"byte_end":7990107,"line_start":1304,"line_end":1304,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":"destroy the tablet object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3495},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7989900,"byte_end":7989907,"line_start":1302,"line_end":1302,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the tablet object\\n\\nThis destroys the client's resource for this tablet object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3496}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3513},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7992062,"byte_end":7992066,"line_start":1365,"line_end":1365,"column_start":9,"column_end":13},"name":"Name","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Event::Name","value":"Event::Name { name }","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"tablet device name","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3515},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7992235,"byte_end":7992237,"line_start":1367,"line_end":1367,"column_start":9,"column_end":11},"name":"Id","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Event::Id","value":"Event::Id { vid, pid }","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"tablet device USB vendor/product id","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3518},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7992949,"byte_end":7992953,"line_start":1369,"line_end":1369,"column_start":9,"column_end":13},"name":"Path","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Event::Path","value":"Event::Path { path }","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"path to the device","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3520},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7993259,"byte_end":7993263,"line_start":1371,"line_end":1371,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Event::Done","value":"Event::Done","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"tablet description events sequence complete","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3522},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7993504,"byte_end":7993511,"line_start":1373,"line_end":1373,"column_start":9,"column_end":16},"name":"Removed","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Event::Removed","value":"Event::Removed","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"tablet removed event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3512},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7991921,"byte_end":7991926,"line_start":1363,"line_end":1363,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"tablet device name\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet.done event.\"]\n    Name {\n        name: String,\n    },\n\n    #[doc =\n      \"tablet device USB vendor/product id\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet.done event.\"]\n    Id {\n        vid: u32,\n        pid: u32,\n    },\n\n    #[doc =\n      \"path to the device\\n\\nA system-specific device path that indicates which device is behind\\nthis wp_tablet. This information may be used to gather additional\\ninformation about the device, e.g. through libwacom.\\n\\nA device may have more than one device path. If so, multiple\\nwp_tablet.path events are sent. A device may be emulated and not\\nhave a device path, and in that case this event will not be sent.\\n\\nThe format of the path is unspecified, it may be a device node, a\\nsysfs path, or some other identifier. It is up to the client to\\nidentify the string provided.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet.done event.\"]\n    Path {\n        path: String,\n    },\n\n    #[doc =\n      \"tablet description events sequence complete\\n\\nThis event is sent immediately to signal the end of the initial\\nburst of descriptive events. A client may consider the static\\ndescription of the tablet to be complete and finalize initialization\\nof the tablet.\"]\n    Done,\n\n    #[doc =\n      \"tablet removed event\\n\\nSent when the tablet has been removed from the system. When a tablet\\nis removed, some tools may be removed.\\n\\nWhen this event is received, the client must wp_tablet.destroy\\nthe object.\"]\n    Removed,\n}","parent":null,"children":[{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3520},{"krate":0,"index":3522}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7998969,"byte_end":7998980,"line_start":1527,"line_end":1527,"column_start":16,"column_end":27},"name":"ZwpTabletV1","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::ZwpTabletV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3547},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999319,"byte_end":7999332,"line_start":1537,"line_end":1537,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3548}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999558,"byte_end":7999565,"line_start":1539,"line_end":1539,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":"destroy the tablet object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3551},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999834,"byte_end":7999851,"line_start":1548,"line_end":1548,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3552},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999945,"byte_end":7999959,"line_start":1550,"line_end":1550,"column_start":15,"column_end":29},"name":"EVT_NAME_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::EVT_NAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3553},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":8000053,"byte_end":8000065,"line_start":1552,"line_end":1552,"column_start":15,"column_end":27},"name":"EVT_ID_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::EVT_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3554},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":8000159,"byte_end":8000173,"line_start":1554,"line_end":1554,"column_start":15,"column_end":29},"name":"EVT_PATH_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::EVT_PATH_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3555},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":8000267,"byte_end":8000281,"line_start":1556,"line_end":1556,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3556},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":8000375,"byte_end":8000392,"line_start":1558,"line_end":1558,"column_start":15,"column_end":32},"name":"EVT_REMOVED_SINCE","qualname":"::unstable::tablet::v1::generated::client::zwp_tablet_v1::EVT_REMOVED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3123},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v2","qualname":"::unstable::tablet::v2","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":3682},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8000926,"byte_end":8000956,"line_start":13,"line_end":13,"column_start":16,"column_end":46},"name":"zwp_tablet_manager_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_manager_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3684},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8001426,"byte_end":8001457,"line_start":25,"line_end":25,"column_start":16,"column_end":47},"name":"zwp_tablet_manager_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_manager_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3685},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8001745,"byte_end":8001772,"line_start":33,"line_end":33,"column_start":16,"column_end":43},"name":"zwp_tablet_seat_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_seat_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3693},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8002432,"byte_end":8002457,"line_start":44,"line_end":44,"column_start":16,"column_end":41},"name":"zwp_tablet_seat_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_seat_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3695},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8003174,"byte_end":8003202,"line_start":61,"line_end":61,"column_start":16,"column_end":44},"name":"zwp_tablet_seat_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_seat_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3698},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8003763,"byte_end":8003790,"line_start":75,"line_end":75,"column_start":16,"column_end":43},"name":"zwp_tablet_tool_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_tool_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3702},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8004500,"byte_end":8004525,"line_start":92,"line_end":92,"column_start":16,"column_end":41},"name":"zwp_tablet_tool_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_tool_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3704},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8008226,"byte_end":8008254,"line_start":189,"line_end":189,"column_start":16,"column_end":44},"name":"zwp_tablet_tool_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_tool_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3705},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8008558,"byte_end":8008580,"line_start":197,"line_end":197,"column_start":16,"column_end":38},"name":"zwp_tablet_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3707},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8008786,"byte_end":8008806,"line_start":202,"line_end":202,"column_start":16,"column_end":36},"name":"zwp_tablet_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3709},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8009781,"byte_end":8009804,"line_start":229,"line_end":229,"column_start":16,"column_end":39},"name":"zwp_tablet_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3710},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8010092,"byte_end":8010123,"line_start":237,"line_end":237,"column_start":16,"column_end":47},"name":"zwp_tablet_pad_ring_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_ring_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3712},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8010548,"byte_end":8010577,"line_start":249,"line_end":249,"column_start":16,"column_end":45},"name":"zwp_tablet_pad_ring_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_ring_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3714},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8011368,"byte_end":8011400,"line_start":271,"line_end":271,"column_start":16,"column_end":48},"name":"zwp_tablet_pad_ring_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_ring_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3715},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8011715,"byte_end":8011747,"line_start":279,"line_end":279,"column_start":16,"column_end":48},"name":"zwp_tablet_pad_strip_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_strip_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3717},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8012172,"byte_end":8012202,"line_start":291,"line_end":291,"column_start":16,"column_end":46},"name":"zwp_tablet_pad_strip_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_strip_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3719},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8012996,"byte_end":8013029,"line_start":313,"line_end":313,"column_start":16,"column_end":49},"name":"zwp_tablet_pad_strip_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_strip_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3720},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8013347,"byte_end":8013379,"line_start":321,"line_end":321,"column_start":16,"column_end":48},"name":"zwp_tablet_pad_group_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_group_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3726},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8013899,"byte_end":8013929,"line_start":330,"line_end":330,"column_start":16,"column_end":46},"name":"zwp_tablet_pad_group_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_group_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3728},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8015167,"byte_end":8015200,"line_start":362,"line_end":362,"column_start":16,"column_end":49},"name":"zwp_tablet_pad_group_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_group_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3729},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8015518,"byte_end":8015544,"line_start":370,"line_end":370,"column_start":16,"column_end":42},"name":"zwp_tablet_pad_v2_requests","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3737},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8016547,"byte_end":8016571,"line_start":393,"line_end":393,"column_start":16,"column_end":40},"name":"zwp_tablet_pad_v2_events","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":3739},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_interfaces.rs","byte_start":8018199,"byte_end":8018226,"line_start":435,"line_end":435,"column_start":16,"column_end":43},"name":"zwp_tablet_pad_v2_interface","qualname":"::unstable::tablet::v2::generated::c_interfaces::zwp_tablet_pad_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3740},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8018778,"byte_end":8018799,"line_start":2,"line_end":2,"column_start":9,"column_end":30},"name":"zwp_tablet_manager_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":13319},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3764},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3793},{"krate":0,"index":3795},{"krate":0,"index":3801},{"krate":0,"index":3805},{"krate":0,"index":3809},{"krate":0,"index":3810}],"decl_id":null,"docs":"controller object for graphic tablet devices","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3759},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8019259,"byte_end":8019272,"line_start":11,"line_end":11,"column_start":9,"column_end":22},"name":"GetTabletSeat","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::Request::GetTabletSeat","value":"Request::GetTabletSeat { tablet_seat, seat }","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"get the tablet seat","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8019687,"byte_end":8019694,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"release the memory for the tablet manager object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3758},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8019082,"byte_end":8019089,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"get the tablet seat\\n\\nGet the wp_tablet_seat object for the given seat. This object\\nprovides access to all graphics tablets in this seat.\"]\n    GetTabletSeat {\n        tablet_seat: Proxy<super::zwp_tablet_seat_v2::ZwpTabletSeatV2>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n\n    #[doc =\n      \"release the memory for the tablet manager object\\n\\nDestroy the wp_tablet_manager object. Objects created from this\\nobject are unaffected and should be destroyed separately.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3779},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8022674,"byte_end":8022679,"line_start":101,"line_end":101,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3793},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8023979,"byte_end":8023997,"line_start":144,"line_end":144,"column_start":16,"column_end":34},"name":"ZwpTabletManagerV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::ZwpTabletManagerV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3801},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8024359,"byte_end":8024372,"line_start":154,"line_end":154,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3802},{"krate":0,"index":3804}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8024545,"byte_end":8024560,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"get_tablet_seat","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::RequestsTrait::get_tablet_seat","value":"pub fn get_tablet_seat<F>(&Self, &Proxy<super::wl_seat::WlSeat>, F)\n-> Result<Proxy<super::zwp_tablet_seat_v2::ZwpTabletSeatV2>, ()> where\nF: FnOnce(NewProxy<super::zwp_tablet_seat_v2::ZwpTabletSeatV2>) ->\nProxy<super::zwp_tablet_seat_v2::ZwpTabletSeatV2>","parent":{"krate":0,"index":3801},"children":[],"decl_id":null,"docs":"get the tablet seat","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8025221,"byte_end":8025228,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3801},"children":[],"decl_id":null,"docs":"release the memory for the tablet manager object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8026113,"byte_end":8026138,"line_start":191,"line_end":191,"column_start":15,"column_end":40},"name":"REQ_GET_TABLET_SEAT_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::REQ_GET_TABLET_SEAT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3810},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8026234,"byte_end":8026251,"line_start":193,"line_end":193,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_manager_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3811},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8026554,"byte_end":8026572,"line_start":196,"line_end":196,"column_start":9,"column_end":27},"name":"zwp_tablet_seat_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":13347},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3846},{"krate":0,"index":3853},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881}],"decl_id":null,"docs":"controller object for graphic tablet devices of a seat","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3830},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8027135,"byte_end":8027142,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3829},"children":[],"decl_id":null,"docs":"release the memory for the tablet seat object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3829},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8026855,"byte_end":8026862,"line_start":203,"line_end":203,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"release the memory for the tablet seat object\\n\\nDestroy the wp_tablet_seat object. Objects created from this\\nobject are unaffected and should be destroyed separately.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3830}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3847},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8029258,"byte_end":8029269,"line_start":266,"line_end":266,"column_start":9,"column_end":20},"name":"TabletAdded","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::Event::TabletAdded","value":"Event::TabletAdded { id }","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"new device notification","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3849},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8029678,"byte_end":8029687,"line_start":270,"line_end":270,"column_start":9,"column_end":18},"name":"ToolAdded","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::Event::ToolAdded","value":"Event::ToolAdded { id }","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"a new tool has been used with a tablet","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3851},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8030336,"byte_end":8030344,"line_start":274,"line_end":274,"column_start":9,"column_end":17},"name":"PadAdded","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::Event::PadAdded","value":"Event::PadAdded { id }","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"new pad notification","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3846},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8028956,"byte_end":8028961,"line_start":264,"line_end":264,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"new device notification\\n\\nThis event is sent whenever a new tablet becomes available on this\\nseat. This event only provides the object id of the tablet, any\\nstatic information about the tablet (device name, vid/pid, etc.) is\\nsent through the wp_tablet interface.\"]\n    TabletAdded {\n        id: NewProxy<super::zwp_tablet_v2::ZwpTabletV2>,\n    },\n\n    #[doc =\n      \"a new tool has been used with a tablet\\n\\nThis event is sent whenever a tool that has not previously been used\\nwith a tablet comes into use. This event only provides the object id\\nof the tool; any static information about the tool (capabilities,\\ntype, etc.) is sent through the wp_tablet_tool interface.\"]\n    ToolAdded {\n        id: NewProxy<super::zwp_tablet_tool_v2::ZwpTabletToolV2>,\n    },\n\n    #[doc =\n      \"new pad notification\\n\\nThis event is sent whenever a new pad is known to the system. Typically,\\npads are physically attached to tablets and a pad_added event is\\nsent immediately after the wp_tablet_seat.tablet_added.\\nHowever, some standalone pad devices logically attach to tablets at\\nruntime, and the client must wait for wp_tablet_pad.enter to know\\nthe tablet a pad is attached to.\\n\\nThis event only provides the object id of the pad. All further\\nfeatures (buttons, strips, rings) are sent through the wp_tablet_pad\\ninterface.\"]\n    PadAdded {\n        id: NewProxy<super::zwp_tablet_pad_v2::ZwpTabletPadV2>,\n    },\n}","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3849},{"krate":0,"index":3851}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8035381,"byte_end":8035396,"line_start":412,"line_end":412,"column_start":16,"column_end":31},"name":"ZwpTabletSeatV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::ZwpTabletSeatV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3874},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8035749,"byte_end":8035762,"line_start":422,"line_end":422,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":3875}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036068,"byte_end":8036075,"line_start":424,"line_end":424,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":3874},"children":[],"decl_id":null,"docs":"release the memory for the tablet seat object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3878},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036348,"byte_end":8036365,"line_start":433,"line_end":433,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3879},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036459,"byte_end":8036481,"line_start":435,"line_end":435,"column_start":15,"column_end":37},"name":"EVT_TABLET_ADDED_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::EVT_TABLET_ADDED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3880},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036575,"byte_end":8036595,"line_start":437,"line_end":437,"column_start":15,"column_end":35},"name":"EVT_TOOL_ADDED_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::EVT_TOOL_ADDED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3881},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036689,"byte_end":8036708,"line_start":439,"line_end":439,"column_start":15,"column_end":34},"name":"EVT_PAD_ADDED_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_seat_v2::EVT_PAD_ADDED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3882},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8037866,"byte_end":8037884,"line_start":442,"line_end":442,"column_start":9,"column_end":27},"name":"zwp_tablet_tool_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":13375},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":4466},{"krate":0,"index":4498},{"krate":0,"index":4496},{"krate":0,"index":4494},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":3900},{"krate":0,"index":4499},{"krate":0,"index":4525},{"krate":0,"index":4523},{"krate":0,"index":4521},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":3903},{"krate":0,"index":4526},{"krate":0,"index":4540},{"krate":0,"index":4538},{"krate":0,"index":4536},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":3906},{"krate":0,"index":4541},{"krate":0,"index":4552},{"krate":0,"index":4550},{"krate":0,"index":4548},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":3909},{"krate":0,"index":3912},{"krate":0,"index":3920},{"krate":0,"index":3936},{"krate":0,"index":3984},{"krate":0,"index":3997},{"krate":0,"index":3999},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4032}],"decl_id":null,"docs":"a physical tablet tool","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4467},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038647,"byte_end":8038650,"line_start":454,"line_end":454,"column_start":9,"column_end":12},"name":"Pen","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Pen","value":"Type::Pen","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Pen\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4470},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038692,"byte_end":8038698,"line_start":456,"line_end":456,"column_start":9,"column_end":15},"name":"Eraser","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Eraser","value":"Type::Eraser","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Eraser\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4473},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038739,"byte_end":8038744,"line_start":458,"line_end":458,"column_start":9,"column_end":14},"name":"Brush","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Brush","value":"Type::Brush","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Brush\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4476},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038786,"byte_end":8038792,"line_start":460,"line_end":460,"column_start":9,"column_end":15},"name":"Pencil","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Pencil","value":"Type::Pencil","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Pencil\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4479},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038836,"byte_end":8038844,"line_start":462,"line_end":462,"column_start":9,"column_end":17},"name":"Airbrush","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Airbrush","value":"Type::Airbrush","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Airbrush\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4482},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038886,"byte_end":8038892,"line_start":464,"line_end":464,"column_start":9,"column_end":15},"name":"Finger","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Finger","value":"Type::Finger","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Finger\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4485},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038933,"byte_end":8038938,"line_start":466,"line_end":466,"column_start":9,"column_end":14},"name":"Mouse","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Mouse","value":"Type::Mouse","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Mouse\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4488},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038978,"byte_end":8038982,"line_start":468,"line_end":468,"column_start":9,"column_end":13},"name":"Lens","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type::Lens","value":"Type::Lens","parent":{"krate":0,"index":4466},"children":[],"decl_id":null,"docs":"Lens\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4466},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038609,"byte_end":8038613,"line_start":452,"line_end":452,"column_start":14,"column_end":18},"name":"Type","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Type","value":"pub enum Type {\n\n    #[doc = \"Pen\"]\n    Pen = ,\n\n    #[doc = \"Eraser\"]\n    Eraser = ,\n\n    #[doc = \"Brush\"]\n    Brush = ,\n\n    #[doc = \"Pencil\"]\n    Pencil = ,\n\n    #[doc = \"Airbrush\"]\n    Airbrush = ,\n\n    #[doc = \"Finger\"]\n    Finger = ,\n\n    #[doc = \"Mouse\"]\n    Mouse = ,\n\n    #[doc = \"Lens\"]\n    Lens = ,\n}","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488}],"decl_id":null,"docs":"a physical tool type","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8038538,"byte_end":8038550,"line_start":450,"line_end":450,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039027,"byte_end":8039035,"line_start":471,"line_end":471,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Type>::from_raw","value":"pub fn from_raw(u32) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039497,"byte_end":8039503,"line_start":484,"line_end":484,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Type>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4500},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039848,"byte_end":8039852,"line_start":493,"line_end":493,"column_start":9,"column_end":13},"name":"Tilt","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability::Tilt","value":"Capability::Tilt","parent":{"krate":0,"index":4499},"children":[],"decl_id":null,"docs":"Tilt axes\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4503},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039899,"byte_end":8039907,"line_start":495,"line_end":495,"column_start":9,"column_end":17},"name":"Pressure","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability::Pressure","value":"Capability::Pressure","parent":{"krate":0,"index":4499},"children":[],"decl_id":null,"docs":"Pressure axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4506},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039954,"byte_end":8039962,"line_start":497,"line_end":497,"column_start":9,"column_end":17},"name":"Distance","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability::Distance","value":"Capability::Distance","parent":{"krate":0,"index":4499},"children":[],"decl_id":null,"docs":"Distance axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4509},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040011,"byte_end":8040019,"line_start":499,"line_end":499,"column_start":9,"column_end":17},"name":"Rotation","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability::Rotation","value":"Capability::Rotation","parent":{"krate":0,"index":4499},"children":[],"decl_id":null,"docs":"Z-rotation axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4512},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040064,"byte_end":8040070,"line_start":501,"line_end":501,"column_start":9,"column_end":15},"name":"Slider","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability::Slider","value":"Capability::Slider","parent":{"krate":0,"index":4499},"children":[],"decl_id":null,"docs":"Slider axis\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4515},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040114,"byte_end":8040119,"line_start":503,"line_end":503,"column_start":9,"column_end":14},"name":"Wheel","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability::Wheel","value":"Capability::Wheel","parent":{"krate":0,"index":4499},"children":[],"decl_id":null,"docs":"Wheel axis\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4499},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039798,"byte_end":8039808,"line_start":491,"line_end":491,"column_start":14,"column_end":24},"name":"Capability","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Capability","value":"pub enum Capability {\n\n    #[doc = \"Tilt axes\"]\n    Tilt = ,\n\n    #[doc = \"Pressure axis\"]\n    Pressure = ,\n\n    #[doc = \"Distance axis\"]\n    Distance = ,\n\n    #[doc = \"Z-rotation axis\"]\n    Rotation = ,\n\n    #[doc = \"Slider axis\"]\n    Slider = ,\n\n    #[doc = \"Wheel axis\"]\n    Wheel = ,\n}","parent":null,"children":[{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4515}],"decl_id":null,"docs":"capability flags for a tool","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039727,"byte_end":8039739,"line_start":489,"line_end":489,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040168,"byte_end":8040176,"line_start":506,"line_end":506,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Capability>::from_raw","value":"pub fn from_raw(u32) -> Option<Capability>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040590,"byte_end":8040596,"line_start":517,"line_end":517,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Capability>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4527},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040905,"byte_end":8040913,"line_start":526,"line_end":526,"column_start":9,"column_end":17},"name":"Released","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::ButtonState::Released","value":"ButtonState::Released","parent":{"krate":0,"index":4526},"children":[],"decl_id":null,"docs":"button is not pressed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4530},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040964,"byte_end":8040971,"line_start":528,"line_end":528,"column_start":9,"column_end":16},"name":"Pressed","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::ButtonState::Pressed","value":"ButtonState::Pressed","parent":{"krate":0,"index":4526},"children":[],"decl_id":null,"docs":"button is pressed\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4526},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040842,"byte_end":8040853,"line_start":524,"line_end":524,"column_start":14,"column_end":25},"name":"ButtonState","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::ButtonState","value":"pub enum ButtonState {\n\n    #[doc = \"button is not pressed\"]\n    Released = ,\n\n    #[doc = \"button is pressed\"]\n    Pressed = ,\n}","parent":null,"children":[{"krate":0,"index":4527},{"krate":0,"index":4530}],"decl_id":null,"docs":"physical button state","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040771,"byte_end":8040783,"line_start":522,"line_end":522,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041021,"byte_end":8041029,"line_start":531,"line_end":531,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ButtonState>::from_raw","value":"pub fn from_raw(u32) -> Option<ButtonState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041258,"byte_end":8041264,"line_start":538,"line_end":538,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ButtonState>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4542},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041466,"byte_end":8041470,"line_start":546,"line_end":546,"column_start":9,"column_end":13},"name":"Role","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Error::Role","value":"Error::Role","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":"given wl_surface has another role\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4541},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041397,"byte_end":8041402,"line_start":544,"line_end":544,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Error","value":"pub enum Error {\n\n    #[doc = \"given wl_surface has another role\"]\n    Role = ,\n}","parent":null,"children":[{"krate":0,"index":4542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041326,"byte_end":8041338,"line_start":542,"line_end":542,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041514,"byte_end":8041522,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041686,"byte_end":8041692,"line_start":555,"line_end":555,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3913},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8043386,"byte_end":8043395,"line_start":561,"line_end":561,"column_start":9,"column_end":18},"name":"SetCursor","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Request::SetCursor","value":"Request::SetCursor { serial, surface, hotspot_x, hotspot_y }","parent":{"krate":0,"index":3912},"children":[],"decl_id":null,"docs":"set the tablet tool's surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3918},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8043742,"byte_end":8043749,"line_start":568,"line_end":568,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":3912},"children":[],"decl_id":null,"docs":"destroy the tool object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041763,"byte_end":8041770,"line_start":559,"line_end":559,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set the tablet tool's surface\\n\\nSets the surface of the cursor used for this tool on the given\\ntablet. This request only takes effect if the tool is in proximity\\nof one of the requesting client's surfaces or the surface parameter\\nis the current pointer surface. If there was a previous surface set\\nwith this request it is replaced. If surface is NULL, the cursor\\nimage is hidden.\\n\\nThe parameters hotspot_x and hotspot_y define the position of the\\npointer surface relative to the pointer location. Its top-left corner\\nis always at (x, y) - (hotspot_x, hotspot_y), where (x, y) are the\\ncoordinates of the pointer location, in surface-local coordinates.\\n\\nOn surface.attach requests to the pointer surface, hotspot_x and\\nhotspot_y are decremented by the x and y parameters passed to the\\nrequest. Attach must be confirmed by wl_surface.commit as usual.\\n\\nThe hotspot can also be updated by passing the currently set pointer\\nsurface to this request with new values for hotspot_x and hotspot_y.\\n\\nThe current and pending input regions of the wl_surface are cleared,\\nand wl_surface.set_input_region is ignored until the wl_surface is no\\nlonger used as the cursor. When the use as a cursor ends, the current\\nand pending input regions become undefined, and the wl_surface is\\nunmapped.\\n\\nThis request gives the surface the role of a wp_tablet_tool cursor. A\\nsurface may only ever be used as the cursor surface for one\\nwp_tablet_tool. If the surface already has another role or has\\npreviously been used as cursor surface for a different tool, a\\nprotocol error is raised.\"]\n    SetCursor {\n        serial: u32,\n        surface: Option<Proxy<super::wl_surface::WlSurface>>,\n        hotspot_x: i32,\n        hotspot_y: i32,\n    },\n\n    #[doc =\n      \"destroy the tool object\\n\\nThis destroys the client's resource for this tool object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3918}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3937},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8047479,"byte_end":8047483,"line_start":673,"line_end":673,"column_start":9,"column_end":13},"name":"Type","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Type","value":"Event::Type { tool_type }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tool type","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3939},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8048214,"byte_end":8048228,"line_start":675,"line_end":675,"column_start":9,"column_end":23},"name":"HardwareSerial","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::HardwareSerial","value":"Event::HardwareSerial { hardware_serial_hi, hardware_serial_lo }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"unique hardware serial number of the tool","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3942},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8048832,"byte_end":8048847,"line_start":680,"line_end":680,"column_start":9,"column_end":24},"name":"HardwareIdWacom","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::HardwareIdWacom","value":"Event::HardwareIdWacom { hardware_id_hi, hardware_id_lo }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"hardware id notification in Wacom's format","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3945},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8049274,"byte_end":8049284,"line_start":685,"line_end":685,"column_start":9,"column_end":19},"name":"Capability","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Capability","value":"Event::Capability { capability }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tool capability notification","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3947},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8049571,"byte_end":8049575,"line_start":687,"line_end":687,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Done","value":"Event::Done","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tool description events sequence complete","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3949},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8050284,"byte_end":8050291,"line_start":689,"line_end":689,"column_start":9,"column_end":16},"name":"Removed","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Removed","value":"Event::Removed","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tool removed","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3951},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8050744,"byte_end":8050755,"line_start":691,"line_end":691,"column_start":9,"column_end":20},"name":"ProximityIn","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::ProximityIn","value":"Event::ProximityIn { serial, tablet, surface }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"proximity in event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3955},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8051547,"byte_end":8051559,"line_start":697,"line_end":697,"column_start":9,"column_end":21},"name":"ProximityOut","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::ProximityOut","value":"Event::ProximityOut","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"proximity out event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3957},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8052134,"byte_end":8052138,"line_start":699,"line_end":699,"column_start":9,"column_end":13},"name":"Down","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Down","value":"Event::Down { serial }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tablet tool is making contact","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8053060,"byte_end":8053062,"line_start":701,"line_end":701,"column_start":9,"column_end":11},"name":"Up","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Up","value":"Event::Up","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tablet tool is no longer making contact","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3961},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8053142,"byte_end":8053148,"line_start":703,"line_end":703,"column_start":9,"column_end":15},"name":"Motion","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Motion","value":"Event::Motion { x, y }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"motion event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3964},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8053470,"byte_end":8053478,"line_start":705,"line_end":705,"column_start":9,"column_end":17},"name":"Pressure","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Pressure","value":"Event::Pressure { pressure }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"pressure change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3966},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8053799,"byte_end":8053807,"line_start":707,"line_end":707,"column_start":9,"column_end":17},"name":"Distance","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Distance","value":"Event::Distance { distance }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"distance change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3968},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8054091,"byte_end":8054095,"line_start":709,"line_end":709,"column_start":9,"column_end":13},"name":"Tilt","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Tilt","value":"Event::Tilt { tilt_x, tilt_y }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"tilt change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3971},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8054322,"byte_end":8054330,"line_start":711,"line_end":711,"column_start":9,"column_end":17},"name":"Rotation","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Rotation","value":"Event::Rotation { degrees }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"z-rotation change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3973},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8054629,"byte_end":8054635,"line_start":713,"line_end":713,"column_start":9,"column_end":15},"name":"Slider","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Slider","value":"Event::Slider { position }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"Slider position change event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3975},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8055354,"byte_end":8055359,"line_start":715,"line_end":715,"column_start":9,"column_end":14},"name":"Wheel","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Wheel","value":"Event::Wheel { degrees, clicks }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"Wheel delta event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3978},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8055693,"byte_end":8055699,"line_start":717,"line_end":717,"column_start":9,"column_end":15},"name":"Button","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Button","value":"Event::Button { serial, button, state }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"button event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3982},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8056056,"byte_end":8056061,"line_start":723,"line_end":723,"column_start":9,"column_end":14},"name":"Frame","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event::Frame","value":"Event::Frame { time }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"frame event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3936},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8047228,"byte_end":8047233,"line_start":671,"line_end":671,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"tool type\\n\\nThe tool type is the high-level type of the tool and usually decides\\nthe interaction expected from this tool.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    Type {\n        tool_type: Type,\n    },\n\n    #[doc =\n      \"unique hardware serial number of the tool\\n\\nIf the physical tool can be identified by a unique 64-bit serial\\nnumber, this event notifies the client of this serial number.\\n\\nIf multiple tablets are available in the same seat and the tool is\\nuniquely identifiable by the serial number, that tool may move\\nbetween tablets.\\n\\nOtherwise, if the tool has no serial number and this event is\\nmissing, the tool is tied to the tablet it first comes into\\nproximity with. Even if the physical tool is used on multiple\\ntablets, separate wp_tablet_tool objects will be created, one per\\ntablet.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    HardwareSerial {\n        hardware_serial_hi: u32,\n        hardware_serial_lo: u32,\n    },\n\n    #[doc =\n      \"hardware id notification in Wacom's format\\n\\nThis event notifies the client of a hardware id available on this tool.\\n\\nThe hardware id is a device-specific 64-bit id that provides extra\\ninformation about the tool in use, beyond the wl_tool.type\\nenumeration. The format of the id is specific to tablets made by\\nWacom Inc. For example, the hardware id of a Wacom Grip\\nPen (a stylus) is 0x802.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    HardwareIdWacom {\n        hardware_id_hi: u32,\n        hardware_id_lo: u32,\n    },\n\n    #[doc =\n      \"tool capability notification\\n\\nThis event notifies the client of any capabilities of this tool,\\nbeyond the main set of x/y axes and tip up/down detection.\\n\\nOne event is sent for each extra capability available on this tool.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_tool.done event.\"]\n    Capability {\n        capability: Capability,\n    },\n\n    #[doc =\n      \"tool description events sequence complete\\n\\nThis event signals the end of the initial burst of descriptive\\nevents. A client may consider the static description of the tool to\\nbe complete and finalize initialization of the tool.\"]\n    Done,\n\n    #[doc =\n      \"tool removed\\n\\nThis event is sent when the tool is removed from the system and will\\nsend no further events. Should the physical tool come back into\\nproximity later, a new wp_tablet_tool object will be created.\\n\\nIt is compositor-dependent when a tool is removed. A compositor may\\nremove a tool on proximity out, tablet removal or any other reason.\\nA compositor may also keep a tool alive until shutdown.\\n\\nIf the tool is currently in proximity, a proximity_out event will be\\nsent before the removed event. See wp_tablet_tool.proximity_out for\\nthe handling of any buttons logically down.\\n\\nWhen this event is received, the client must wp_tablet_tool.destroy\\nthe object.\"]\n    Removed,\n\n    #[doc =\n      \"proximity in event\\n\\nNotification that this tool is focused on a certain surface.\\n\\nThis event can be received when the tool has moved from one surface to\\nanother, or when the tool has come back into proximity above the\\nsurface.\\n\\nIf any button is logically down when the tool comes into proximity,\\nthe respective button event is sent after the proximity_in event but\\nwithin the same frame as the proximity_in event.\"]\n    ProximityIn {\n        serial: u32,\n        tablet: Proxy<super::zwp_tablet_v2::ZwpTabletV2>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"proximity out event\\n\\nNotification that this tool has either left proximity, or is no\\nlonger focused on a certain surface.\\n\\nWhen the tablet tool leaves proximity of the tablet, button release\\nevents are sent for each button that was held down at the time of\\nleaving proximity. These events are sent before the proximity_out\\nevent but within the same wp_tablet.frame.\\n\\nIf the tool stays within proximity of the tablet, but the focus\\nchanges from one surface to another, a button release event may not\\nbe sent until the button is actually released or the tool leaves the\\nproximity of the tablet.\"]\n    ProximityOut,\n\n    #[doc =\n      \"tablet tool is making contact\\n\\nSent whenever the tablet tool comes in contact with the surface of the\\ntablet.\\n\\nIf the tool is already in contact with the tablet when entering the\\ninput region, the client owning said region will receive a\\nwp_tablet.proximity_in event, followed by a wp_tablet.down\\nevent and a wp_tablet.frame event.\\n\\nNote that this event describes logical contact, not physical\\ncontact. On some devices, a compositor may not consider a tool in\\nlogical contact until a minimum physical pressure threshold is\\nexceeded.\"]\n    Down {\n        serial: u32,\n    },\n\n    #[doc =\n      \"tablet tool is no longer making contact\\n\\nSent whenever the tablet tool stops making contact with the surface of\\nthe tablet, or when the tablet tool moves out of the input region\\nand the compositor grab (if any) is dismissed.\\n\\nIf the tablet tool moves out of the input region while in contact\\nwith the surface of the tablet and the compositor does not have an\\nongoing grab on the surface, the client owning said region will\\nreceive a wp_tablet.up event, followed by a wp_tablet.proximity_out\\nevent and a wp_tablet.frame event. If the compositor has an ongoing\\ngrab on this device, this event sequence is sent whenever the grab\\nis dismissed in the future.\\n\\nNote that this event describes logical contact, not physical\\ncontact. On some devices, a compositor may not consider a tool out\\nof logical contact until physical pressure falls below a specific\\nthreshold.\"]\n    Up,\n\n    #[doc = \"motion event\\n\\nSent whenever a tablet tool moves.\"]\n    Motion {\n        x: f64,\n        y: f64,\n    },\n\n    #[doc =\n      \"pressure change event\\n\\nSent whenever the pressure axis on a tool changes. The value of this\\nevent is normalized to a value between 0 and 65535.\\n\\nNote that pressure may be nonzero even when a tool is not in logical\\ncontact. See the down and up events for more details.\"]\n    Pressure {\n        pressure: u32,\n    },\n\n    #[doc =\n      \"distance change event\\n\\nSent whenever the distance axis on a tool changes. The value of this\\nevent is normalized to a value between 0 and 65535.\\n\\nNote that distance may be nonzero even when a tool is not in logical\\ncontact. See the down and up events for more details.\"]\n    Distance {\n        distance: u32,\n    },\n\n    #[doc =\n      \"tilt change event\\n\\nSent whenever one or both of the tilt axes on a tool change. Each tilt\\nvalue is in degrees, relative to the z-axis of the tablet.\\nThe angle is positive when the top of a tool tilts along the\\npositive x or y axis.\"]\n    Tilt {\n        tilt_x: f64,\n        tilt_y: f64,\n    },\n\n    #[doc =\n      \"z-rotation change event\\n\\nSent whenever the z-rotation axis on the tool changes. The\\nrotation value is in degrees clockwise from the tool's\\nlogical neutral position.\"]\n    Rotation {\n        degrees: f64,\n    },\n\n    #[doc =\n      \"Slider position change event\\n\\nSent whenever the slider position on the tool changes. The\\nvalue is normalized between -65535 and 65535, with 0 as the logical\\nneutral position of the slider.\\n\\nThe slider is available on e.g. the Wacom Airbrush tool.\"]\n    Slider {\n        position: i32,\n    },\n\n    #[doc =\n      \"Wheel delta event\\n\\nSent whenever the wheel on the tool emits an event. This event\\ncontains two values for the same axis change. The degrees value is\\nin the same orientation as the wl_pointer.vertical_scroll axis. The\\nclicks value is in discrete logical clicks of the mouse wheel. This\\nvalue may be zero if the movement of the wheel was less\\nthan one logical click.\\n\\nClients should choose either value and avoid mixing degrees and\\nclicks. The compositor may accumulate values smaller than a logical\\nclick and emulate click events when a certain threshold is met.\\nThus, wl_tablet_tool.wheel events with non-zero clicks values may\\nhave different degrees values.\"]\n    Wheel {\n        degrees: f64,\n        clicks: i32,\n    },\n\n    #[doc =\n      \"button event\\n\\nSent whenever a button on the tool is pressed or released.\\n\\nIf a button is held down when the tool moves in or out of proximity,\\nbutton events are generated by the compositor. See\\nwp_tablet_tool.proximity_in and wp_tablet_tool.proximity_out for\\ndetails.\"]\n    Button {\n        serial: u32,\n        button: u32,\n        state: ButtonState,\n    },\n\n    #[doc =\n      \"frame event\\n\\nMarks the end of a series of axis and/or button updates from the\\ntablet. The Wayland protocol requires axis updates to be sent\\nsequentially, however all events within a frame should be considered\\none hardware event.\"]\n    Frame {\n        time: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3937},{"krate":0,"index":3939},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3947},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":3955},{"krate":0,"index":3957},{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3964},{"krate":0,"index":3966},{"krate":0,"index":3968},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3982}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3997},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8075752,"byte_end":8075767,"line_start":1243,"line_end":1243,"column_start":16,"column_end":31},"name":"ZwpTabletToolV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::ZwpTabletToolV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4005},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8076120,"byte_end":8076133,"line_start":1253,"line_end":1253,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8077752,"byte_end":8077762,"line_start":1255,"line_end":1255,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::RequestsTrait::set_cursor","value":"pub fn set_cursor(&Self, u32, Option<&Proxy<super::wl_surface::WlSurface>>,\n                  i32, i32) -> ()","parent":{"krate":0,"index":4005},"children":[],"decl_id":null,"docs":"set the tablet tool's surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8078167,"byte_end":8078174,"line_start":1263,"line_end":1263,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":4005},"children":[],"decl_id":null,"docs":"destroy the tool object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4012},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8078912,"byte_end":8078932,"line_start":1287,"line_end":1287,"column_start":15,"column_end":35},"name":"REQ_SET_CURSOR_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::REQ_SET_CURSOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4013},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079028,"byte_end":8079045,"line_start":1289,"line_end":1289,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4014},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079139,"byte_end":8079153,"line_start":1291,"line_end":1291,"column_start":15,"column_end":29},"name":"EVT_TYPE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_TYPE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4015},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079247,"byte_end":8079272,"line_start":1293,"line_end":1293,"column_start":15,"column_end":40},"name":"EVT_HARDWARE_SERIAL_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_HARDWARE_SERIAL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4016},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079366,"byte_end":8079393,"line_start":1295,"line_end":1295,"column_start":15,"column_end":42},"name":"EVT_HARDWARE_ID_WACOM_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_HARDWARE_ID_WACOM_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4017},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079487,"byte_end":8079507,"line_start":1297,"line_end":1297,"column_start":15,"column_end":35},"name":"EVT_CAPABILITY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_CAPABILITY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4018},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079601,"byte_end":8079615,"line_start":1299,"line_end":1299,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4019},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079709,"byte_end":8079726,"line_start":1301,"line_end":1301,"column_start":15,"column_end":32},"name":"EVT_REMOVED_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_REMOVED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4020},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079820,"byte_end":8079842,"line_start":1303,"line_end":1303,"column_start":15,"column_end":37},"name":"EVT_PROXIMITY_IN_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_PROXIMITY_IN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4021},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8079936,"byte_end":8079959,"line_start":1305,"line_end":1305,"column_start":15,"column_end":38},"name":"EVT_PROXIMITY_OUT_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_PROXIMITY_OUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4022},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080053,"byte_end":8080067,"line_start":1307,"line_end":1307,"column_start":15,"column_end":29},"name":"EVT_DOWN_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_DOWN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4023},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080161,"byte_end":8080173,"line_start":1309,"line_end":1309,"column_start":15,"column_end":27},"name":"EVT_UP_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_UP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4024},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080267,"byte_end":8080283,"line_start":1311,"line_end":1311,"column_start":15,"column_end":31},"name":"EVT_MOTION_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_MOTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4025},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080377,"byte_end":8080395,"line_start":1313,"line_end":1313,"column_start":15,"column_end":33},"name":"EVT_PRESSURE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_PRESSURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4026},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080489,"byte_end":8080507,"line_start":1315,"line_end":1315,"column_start":15,"column_end":33},"name":"EVT_DISTANCE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_DISTANCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4027},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080601,"byte_end":8080615,"line_start":1317,"line_end":1317,"column_start":15,"column_end":29},"name":"EVT_TILT_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_TILT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4028},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080709,"byte_end":8080727,"line_start":1319,"line_end":1319,"column_start":15,"column_end":33},"name":"EVT_ROTATION_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_ROTATION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4029},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080821,"byte_end":8080837,"line_start":1321,"line_end":1321,"column_start":15,"column_end":31},"name":"EVT_SLIDER_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_SLIDER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4030},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8080931,"byte_end":8080946,"line_start":1323,"line_end":1323,"column_start":15,"column_end":30},"name":"EVT_WHEEL_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_WHEEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4031},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8081040,"byte_end":8081056,"line_start":1325,"line_end":1325,"column_start":15,"column_end":31},"name":"EVT_BUTTON_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_BUTTON_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4032},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8081150,"byte_end":8081165,"line_start":1327,"line_end":1327,"column_start":15,"column_end":30},"name":"EVT_FRAME_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_tool_v2::EVT_FRAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4033},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8081678,"byte_end":8081691,"line_start":1330,"line_end":1330,"column_start":9,"column_end":22},"name":"zwp_tablet_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":13403},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4054},{"krate":0,"index":4068},{"krate":0,"index":4080},{"krate":0,"index":4095},{"krate":0,"index":4097},{"krate":0,"index":4103},{"krate":0,"index":4105},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112}],"decl_id":null,"docs":"graphics tablet device","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8082174,"byte_end":8082181,"line_start":1339,"line_end":1339,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":4051},"children":[],"decl_id":null,"docs":"destroy the tablet object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4051},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8081974,"byte_end":8081981,"line_start":1337,"line_end":1337,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the tablet object\\n\\nThis destroys the client's resource for this tablet object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":4052}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4069},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8084136,"byte_end":8084140,"line_start":1400,"line_end":1400,"column_start":9,"column_end":13},"name":"Name","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Event::Name","value":"Event::Name { name }","parent":{"krate":0,"index":4068},"children":[],"decl_id":null,"docs":"tablet device name","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4071},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8084309,"byte_end":8084311,"line_start":1402,"line_end":1402,"column_start":9,"column_end":11},"name":"Id","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Event::Id","value":"Event::Id { vid, pid }","parent":{"krate":0,"index":4068},"children":[],"decl_id":null,"docs":"tablet device USB vendor/product id","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4074},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8085023,"byte_end":8085027,"line_start":1404,"line_end":1404,"column_start":9,"column_end":13},"name":"Path","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Event::Path","value":"Event::Path { path }","parent":{"krate":0,"index":4068},"children":[],"decl_id":null,"docs":"path to the device","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8085333,"byte_end":8085337,"line_start":1406,"line_end":1406,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Event::Done","value":"Event::Done","parent":{"krate":0,"index":4068},"children":[],"decl_id":null,"docs":"tablet description events sequence complete","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4078},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8085578,"byte_end":8085585,"line_start":1408,"line_end":1408,"column_start":9,"column_end":16},"name":"Removed","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Event::Removed","value":"Event::Removed","parent":{"krate":0,"index":4068},"children":[],"decl_id":null,"docs":"tablet removed event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4068},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8083995,"byte_end":8084000,"line_start":1398,"line_end":1398,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"tablet device name\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet.done event.\"]\n    Name {\n        name: String,\n    },\n\n    #[doc =\n      \"tablet device USB vendor/product id\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet.done event.\"]\n    Id {\n        vid: u32,\n        pid: u32,\n    },\n\n    #[doc =\n      \"path to the device\\n\\nA system-specific device path that indicates which device is behind\\nthis wp_tablet. This information may be used to gather additional\\ninformation about the device, e.g. through libwacom.\\n\\nA device may have more than one device path. If so, multiple\\nwp_tablet.path events are sent. A device may be emulated and not\\nhave a device path, and in that case this event will not be sent.\\n\\nThe format of the path is unspecified, it may be a device node, a\\nsysfs path, or some other identifier. It is up to the client to\\nidentify the string provided.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet.done event.\"]\n    Path {\n        path: String,\n    },\n\n    #[doc =\n      \"tablet description events sequence complete\\n\\nThis event is sent immediately to signal the end of the initial\\nburst of descriptive events. A client may consider the static\\ndescription of the tablet to be complete and finalize initialization\\nof the tablet.\"]\n    Done,\n\n    #[doc =\n      \"tablet removed event\\n\\nSent when the tablet has been removed from the system. When a tablet\\nis removed, some tools may be removed.\\n\\nWhen this event is received, the client must wp_tablet.destroy\\nthe object.\"]\n    Removed,\n}","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4071},{"krate":0,"index":4074},{"krate":0,"index":4076},{"krate":0,"index":4078}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4095},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091043,"byte_end":8091054,"line_start":1562,"line_end":1562,"column_start":16,"column_end":27},"name":"ZwpTabletV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::ZwpTabletV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4103},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091393,"byte_end":8091406,"line_start":1572,"line_end":1572,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091632,"byte_end":8091639,"line_start":1574,"line_end":1574,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":"destroy the tablet object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4107},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091908,"byte_end":8091925,"line_start":1583,"line_end":1583,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4108},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8092019,"byte_end":8092033,"line_start":1585,"line_end":1585,"column_start":15,"column_end":29},"name":"EVT_NAME_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::EVT_NAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4109},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8092127,"byte_end":8092139,"line_start":1587,"line_end":1587,"column_start":15,"column_end":27},"name":"EVT_ID_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::EVT_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4110},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8092233,"byte_end":8092247,"line_start":1589,"line_end":1589,"column_start":15,"column_end":29},"name":"EVT_PATH_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::EVT_PATH_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4111},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8092341,"byte_end":8092355,"line_start":1591,"line_end":1591,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4112},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8092449,"byte_end":8092466,"line_start":1593,"line_end":1593,"column_start":15,"column_end":32},"name":"EVT_REMOVED_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_v2::EVT_REMOVED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4113},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8092688,"byte_end":8092710,"line_start":1596,"line_end":1596,"column_start":9,"column_end":31},"name":"zwp_tablet_pad_ring_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":13431},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4554},{"krate":0,"index":4565},{"krate":0,"index":4563},{"krate":0,"index":4561},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4131},{"krate":0,"index":4134},{"krate":0,"index":4140},{"krate":0,"index":4155},{"krate":0,"index":4164},{"krate":0,"index":4177},{"krate":0,"index":4179},{"krate":0,"index":4185},{"krate":0,"index":4188},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196}],"decl_id":null,"docs":"pad ring","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4555},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093380,"byte_end":8093386,"line_start":1608,"line_end":1608,"column_start":9,"column_end":15},"name":"Finger","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Source::Finger","value":"Source::Finger","parent":{"krate":0,"index":4554},"children":[],"decl_id":null,"docs":"finger\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4554},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093337,"byte_end":8093343,"line_start":1606,"line_end":1606,"column_start":14,"column_end":20},"name":"Source","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Source","value":"pub enum Source {\n\n    #[doc = \"finger\"]\n    Finger = ,\n}","parent":null,"children":[{"krate":0,"index":4555}],"decl_id":null,"docs":"ring axis source","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093266,"byte_end":8093278,"line_start":1604,"line_end":1604,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093431,"byte_end":8093439,"line_start":1611,"line_end":1611,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Source>::from_raw","value":"pub fn from_raw(u32) -> Option<Source>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093607,"byte_end":8093613,"line_start":1617,"line_end":1617,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Source>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4135},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8094672,"byte_end":8094683,"line_start":1623,"line_end":1623,"column_start":9,"column_end":20},"name":"SetFeedback","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Request::SetFeedback","value":"Request::SetFeedback { description, serial }","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"set compositor feedback","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4138},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8094908,"byte_end":8094915,"line_start":1625,"line_end":1625,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"destroy the ring object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4134},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093684,"byte_end":8093691,"line_start":1621,"line_end":1621,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set compositor feedback\\n\\nRequest that the compositor use the provided feedback string\\nassociated with this ring. This request should be issued immediately\\nafter a wp_tablet_pad_group.mode_switch event from the corresponding\\ngroup is received, or whenever the ring is mapped to a different\\naction. See wp_tablet_pad_group.mode_switch for more details.\\n\\nClients are encouraged to provide context-aware descriptions for\\nthe actions associated with the ring; compositors may use this\\ninformation to offer visual feedback about the button layout\\n(eg. on-screen displays).\\n\\nThe provided string 'description' is a UTF-8 encoded string to be\\nassociated with this ring, and is considered user-visible; general\\ninternationalization rules apply.\\n\\nThe serial argument will be that of the last\\nwp_tablet_pad_group.mode_switch event received for the group of this\\nring. Requests providing other serials than the most recent one will be\\nignored.\"]\n    SetFeedback {\n        description: String,\n        serial: u32,\n    },\n\n    #[doc =\n      \"destroy the ring object\\n\\nThis destroys the client's resource for this ring object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4156},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8098536,"byte_end":8098542,"line_start":1718,"line_end":1718,"column_start":9,"column_end":15},"name":"Source","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Event::Source","value":"Event::Source { source }","parent":{"krate":0,"index":4155},"children":[],"decl_id":null,"docs":"ring event source","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4158},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8098763,"byte_end":8098768,"line_start":1720,"line_end":1720,"column_start":9,"column_end":14},"name":"Angle","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Event::Angle","value":"Event::Angle { degrees }","parent":{"krate":0,"index":4155},"children":[],"decl_id":null,"docs":"angle changed","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4160},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8099322,"byte_end":8099326,"line_start":1722,"line_end":1722,"column_start":9,"column_end":13},"name":"Stop","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Event::Stop","value":"Event::Stop","parent":{"krate":0,"index":4155},"children":[],"decl_id":null,"docs":"interaction stopped","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4162},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8100073,"byte_end":8100078,"line_start":1724,"line_end":1724,"column_start":9,"column_end":14},"name":"Frame","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Event::Frame","value":"Event::Frame { time }","parent":{"krate":0,"index":4155},"children":[],"decl_id":null,"docs":"end of a ring event sequence","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4155},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8097991,"byte_end":8097996,"line_start":1716,"line_end":1716,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"ring event source\\n\\nSource information for ring events.\\n\\nThis event does not occur on its own. It is sent before a\\nwp_tablet_pad_ring.frame event and carries the source information\\nfor all events within that frame.\\n\\nThe source specifies how this event was generated. If the source is\\nwp_tablet_pad_ring.source.finger, a wp_tablet_pad_ring.stop event\\nwill be sent when the user lifts the finger off the device.\\n\\nThis event is optional. If the source is unknown for an interaction,\\nno event is sent.\"]\n    Source {\n        source: Source,\n    },\n\n    #[doc =\n      \"angle changed\\n\\nSent whenever the angle on a ring changes.\\n\\nThe angle is provided in degrees clockwise from the logical\\nnorth of the ring in the pad's current rotation.\"]\n    Angle {\n        degrees: f64,\n    },\n\n    #[doc =\n      \"interaction stopped\\n\\nStop notification for ring events.\\n\\nFor some wp_tablet_pad_ring.source types, a wp_tablet_pad_ring.stop\\nevent is sent to notify a client that the interaction with the ring\\nhas terminated. This enables the client to implement kinetic scrolling.\\nSee the wp_tablet_pad_ring.source documentation for information on\\nwhen this event may be generated.\\n\\nAny wp_tablet_pad_ring.angle events with the same source after this\\nevent should be considered as the start of a new interaction.\"]\n    Stop,\n\n    #[doc =\n      \"end of a ring event sequence\\n\\nIndicates the end of a set of ring events that logically belong\\ntogether. A client is expected to accumulate the data in all events\\nwithin the frame before proceeding.\\n\\nAll wp_tablet_pad_ring events before a wp_tablet_pad_ring.frame event belong\\nlogically together. For example, on termination of a finger interaction\\non a ring the compositor will send a wp_tablet_pad_ring.source event,\\na wp_tablet_pad_ring.stop event and a wp_tablet_pad_ring.frame event.\\n\\nA wp_tablet_pad_ring.frame event is sent for every logical event\\ngroup, even if the group only contains a single wp_tablet_pad_ring\\nevent. Specifically, a client may get a sequence: angle, frame,\\nangle, frame, etc.\"]\n    Frame {\n        time: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":4160},{"krate":0,"index":4162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4177},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8104361,"byte_end":8104379,"line_start":1850,"line_end":1850,"column_start":16,"column_end":34},"name":"ZwpTabletPadRingV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::ZwpTabletPadRingV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4185},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8104743,"byte_end":8104756,"line_start":1860,"line_end":1860,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8105740,"byte_end":8105752,"line_start":1862,"line_end":1862,"column_start":12,"column_end":24},"name":"set_feedback","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::RequestsTrait::set_feedback","value":"pub fn set_feedback(&Self, String, u32) -> ()","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"set compositor feedback","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106020,"byte_end":8106027,"line_start":1864,"line_end":1864,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"destroy the ring object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4191},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106548,"byte_end":8106570,"line_start":1880,"line_end":1880,"column_start":15,"column_end":37},"name":"REQ_SET_FEEDBACK_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::REQ_SET_FEEDBACK_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4192},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106666,"byte_end":8106683,"line_start":1882,"line_end":1882,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4193},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106777,"byte_end":8106793,"line_start":1884,"line_end":1884,"column_start":15,"column_end":31},"name":"EVT_SOURCE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::EVT_SOURCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106887,"byte_end":8106902,"line_start":1886,"line_end":1886,"column_start":15,"column_end":30},"name":"EVT_ANGLE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::EVT_ANGLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4195},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106996,"byte_end":8107010,"line_start":1888,"line_end":1888,"column_start":15,"column_end":29},"name":"EVT_STOP_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::EVT_STOP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4196},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8107104,"byte_end":8107119,"line_start":1890,"line_end":1890,"column_start":15,"column_end":30},"name":"EVT_FRAME_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_ring_v2::EVT_FRAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4197},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8107328,"byte_end":8107351,"line_start":1893,"line_end":1893,"column_start":9,"column_end":32},"name":"zwp_tablet_pad_strip_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":13459},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4566},{"krate":0,"index":4577},{"krate":0,"index":4575},{"krate":0,"index":4573},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4215},{"krate":0,"index":4218},{"krate":0,"index":4224},{"krate":0,"index":4239},{"krate":0,"index":4248},{"krate":0,"index":4261},{"krate":0,"index":4263},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280}],"decl_id":null,"docs":"pad strip","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8108024,"byte_end":8108030,"line_start":1905,"line_end":1905,"column_start":9,"column_end":15},"name":"Finger","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Source::Finger","value":"Source::Finger","parent":{"krate":0,"index":4566},"children":[],"decl_id":null,"docs":"finger\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4566},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8107981,"byte_end":8107987,"line_start":1903,"line_end":1903,"column_start":14,"column_end":20},"name":"Source","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Source","value":"pub enum Source {\n\n    #[doc = \"finger\"]\n    Finger = ,\n}","parent":null,"children":[{"krate":0,"index":4567}],"decl_id":null,"docs":"strip axis source","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8107910,"byte_end":8107922,"line_start":1901,"line_end":1901,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4216},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8108075,"byte_end":8108083,"line_start":1908,"line_end":1908,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Source>::from_raw","value":"pub fn from_raw(u32) -> Option<Source>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4217},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8108251,"byte_end":8108257,"line_start":1914,"line_end":1914,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Source>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4219},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8109323,"byte_end":8109334,"line_start":1920,"line_end":1920,"column_start":9,"column_end":20},"name":"SetFeedback","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Request::SetFeedback","value":"Request::SetFeedback { description, serial }","parent":{"krate":0,"index":4218},"children":[],"decl_id":null,"docs":"set compositor feedback","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4222},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8109561,"byte_end":8109568,"line_start":1922,"line_end":1922,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":4218},"children":[],"decl_id":null,"docs":"destroy the strip object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4218},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8108328,"byte_end":8108335,"line_start":1918,"line_end":1918,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set compositor feedback\\n\\nRequests the compositor to use the provided feedback string\\nassociated with this strip. This request should be issued immediately\\nafter a wp_tablet_pad_group.mode_switch event from the corresponding\\ngroup is received, or whenever the strip is mapped to a different\\naction. See wp_tablet_pad_group.mode_switch for more details.\\n\\nClients are encouraged to provide context-aware descriptions for\\nthe actions associated with the strip, and compositors may use this\\ninformation to offer visual feedback about the button layout\\n(eg. on-screen displays).\\n\\nThe provided string 'description' is a UTF-8 encoded string to be\\nassociated with this ring, and is considered user-visible; general\\ninternationalization rules apply.\\n\\nThe serial argument will be that of the last\\nwp_tablet_pad_group.mode_switch event received for the group of this\\nstrip. Requests providing other serials than the most recent one will be\\nignored.\"]\n    SetFeedback {\n        description: String,\n        serial: u32,\n    },\n\n    #[doc =\n      \"destroy the strip object\\n\\nThis destroys the client's resource for this strip object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4240},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8113196,"byte_end":8113202,"line_start":2015,"line_end":2015,"column_start":9,"column_end":15},"name":"Source","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Event::Source","value":"Event::Source { source }","parent":{"krate":0,"index":4239},"children":[],"decl_id":null,"docs":"strip event source","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4242},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8113481,"byte_end":8113489,"line_start":2017,"line_end":2017,"column_start":9,"column_end":17},"name":"Position","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Event::Position","value":"Event::Position { position }","parent":{"krate":0,"index":4239},"children":[],"decl_id":null,"docs":"position changed","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4244},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8114053,"byte_end":8114057,"line_start":2019,"line_end":2019,"column_start":9,"column_end":13},"name":"Stop","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Event::Stop","value":"Event::Stop","parent":{"krate":0,"index":4239},"children":[],"decl_id":null,"docs":"interaction stopped","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4246},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8114832,"byte_end":8114837,"line_start":2021,"line_end":2021,"column_start":9,"column_end":14},"name":"Frame","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Event::Frame","value":"Event::Frame { time }","parent":{"krate":0,"index":4239},"children":[],"decl_id":null,"docs":"end of a strip event sequence","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4239},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8112644,"byte_end":8112649,"line_start":2013,"line_end":2013,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"strip event source\\n\\nSource information for strip events.\\n\\nThis event does not occur on its own. It is sent before a\\nwp_tablet_pad_strip.frame event and carries the source information\\nfor all events within that frame.\\n\\nThe source specifies how this event was generated. If the source is\\nwp_tablet_pad_strip.source.finger, a wp_tablet_pad_strip.stop event\\nwill be sent when the user lifts their finger off the device.\\n\\nThis event is optional. If the source is unknown for an interaction,\\nno event is sent.\"]\n    Source {\n        source: Source,\n    },\n\n    #[doc =\n      \"position changed\\n\\nSent whenever the position on a strip changes.\\n\\nThe position is normalized to a range of [0, 65535], the 0-value\\nrepresents the top-most and/or left-most position of the strip in\\nthe pad's current rotation.\"]\n    Position {\n        position: u32,\n    },\n\n    #[doc =\n      \"interaction stopped\\n\\nStop notification for strip events.\\n\\nFor some wp_tablet_pad_strip.source types, a wp_tablet_pad_strip.stop\\nevent is sent to notify a client that the interaction with the strip\\nhas terminated. This enables the client to implement kinetic\\nscrolling. See the wp_tablet_pad_strip.source documentation for\\ninformation on when this event may be generated.\\n\\nAny wp_tablet_pad_strip.position events with the same source after this\\nevent should be considered as the start of a new interaction.\"]\n    Stop,\n\n    #[doc =\n      \"end of a strip event sequence\\n\\nIndicates the end of a set of events that represent one logical\\nhardware strip event. A client is expected to accumulate the data\\nin all events within the frame before proceeding.\\n\\nAll wp_tablet_pad_strip events before a wp_tablet_pad_strip.frame event belong\\nlogically together. For example, on termination of a finger interaction\\non a strip the compositor will send a wp_tablet_pad_strip.source event,\\na wp_tablet_pad_strip.stop event and a wp_tablet_pad_strip.frame\\nevent.\\n\\nA wp_tablet_pad_strip.frame event is sent for every logical event\\ngroup, even if the group only contains a single wp_tablet_pad_strip\\nevent. Specifically, a client may get a sequence: position, frame,\\nposition, frame, etc.\"]\n    Frame {\n        time: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4261},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8119100,"byte_end":8119119,"line_start":2147,"line_end":2147,"column_start":16,"column_end":35},"name":"ZwpTabletPadStripV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::ZwpTabletPadStripV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4269},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8119486,"byte_end":8119499,"line_start":2157,"line_end":2157,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8120490,"byte_end":8120502,"line_start":2159,"line_end":2159,"column_start":12,"column_end":24},"name":"set_feedback","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::RequestsTrait::set_feedback","value":"pub fn set_feedback(&Self, String, u32) -> ()","parent":{"krate":0,"index":4269},"children":[],"decl_id":null,"docs":"set compositor feedback","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8120772,"byte_end":8120779,"line_start":2161,"line_end":2161,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":4269},"children":[],"decl_id":null,"docs":"destroy the strip object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4275},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8121301,"byte_end":8121323,"line_start":2177,"line_end":2177,"column_start":15,"column_end":37},"name":"REQ_SET_FEEDBACK_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::REQ_SET_FEEDBACK_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4276},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8121419,"byte_end":8121436,"line_start":2179,"line_end":2179,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4277},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8121530,"byte_end":8121546,"line_start":2181,"line_end":2181,"column_start":15,"column_end":31},"name":"EVT_SOURCE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::EVT_SOURCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4278},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8121640,"byte_end":8121658,"line_start":2183,"line_end":2183,"column_start":15,"column_end":33},"name":"EVT_POSITION_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::EVT_POSITION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4279},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8121752,"byte_end":8121766,"line_start":2185,"line_end":2185,"column_start":15,"column_end":29},"name":"EVT_STOP_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::EVT_STOP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4280},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8121860,"byte_end":8121875,"line_start":2187,"line_end":2187,"column_start":15,"column_end":30},"name":"EVT_FRAME_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_strip_v2::EVT_FRAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4281},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8123181,"byte_end":8123204,"line_start":2190,"line_end":2190,"column_start":9,"column_end":32},"name":"zwp_tablet_pad_group_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":13487},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":4316},{"krate":0,"index":4331},{"krate":0,"index":4344},{"krate":0,"index":4346},{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362}],"decl_id":null,"docs":"a set of buttons, rings and strips","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4300},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8123749,"byte_end":8123756,"line_start":2199,"line_end":2199,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":4299},"children":[],"decl_id":null,"docs":"destroy the pad object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4299},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8123487,"byte_end":8123494,"line_start":2197,"line_end":2197,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the pad object\\n\\nDestroy the wp_tablet_pad_group object. Objects created from this object\\nare unaffected and should be destroyed separately.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":4300}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4317},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8126216,"byte_end":8126223,"line_start":2260,"line_end":2260,"column_start":9,"column_end":16},"name":"Buttons","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event::Buttons","value":"Event::Buttons { buttons }","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"buttons announced","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4319},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8126522,"byte_end":8126526,"line_start":2262,"line_end":2262,"column_start":9,"column_end":13},"name":"Ring","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event::Ring","value":"Event::Ring { ring }","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"ring announced","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4321},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8126892,"byte_end":8126897,"line_start":2266,"line_end":2266,"column_start":9,"column_end":14},"name":"Strip","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event::Strip","value":"Event::Strip { strip }","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"strip announced","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4323},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8127639,"byte_end":8127644,"line_start":2270,"line_end":2270,"column_start":9,"column_end":14},"name":"Modes","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event::Modes","value":"Event::Modes { modes }","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"mode-switch ability announced","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4325},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8127960,"byte_end":8127964,"line_start":2272,"line_end":2272,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event::Done","value":"Event::Done","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"tablet group description events sequence complete","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4327},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8129321,"byte_end":8129331,"line_start":2274,"line_end":2274,"column_start":9,"column_end":19},"name":"ModeSwitch","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event::ModeSwitch","value":"Event::ModeSwitch { time, serial, mode }","parent":{"krate":0,"index":4316},"children":[],"decl_id":null,"docs":"mode switch event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4316},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8125570,"byte_end":8125575,"line_start":2258,"line_end":2258,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"buttons announced\\n\\nSent on wp_tablet_pad_group initialization to announce the available\\nbuttons in the group. Button indices start at 0, a button may only be\\nin one group at a time.\\n\\nThis event is first sent in the initial burst of events before the\\nwp_tablet_pad_group.done event.\\n\\nSome buttons are reserved by the compositor. These buttons may not be\\nassigned to any wp_tablet_pad_group. Compositors may broadcast this\\nevent in the case of changes to the mapping of these reserved buttons.\\nIf the compositor happens to reserve all buttons in a group, this event\\nwill be sent with an empty array.\"]\n    Buttons {\n        buttons: Vec<u8>,\n    },\n\n    #[doc =\n      \"ring announced\\n\\nSent on wp_tablet_pad_group initialization to announce available rings.\\nOne event is sent for each ring available on this pad group.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_pad_group.done event.\"]\n    Ring {\n        ring: NewProxy<super::zwp_tablet_pad_ring_v2::ZwpTabletPadRingV2>,\n    },\n\n    #[doc =\n      \"strip announced\\n\\nSent on wp_tablet_pad initialization to announce available strips.\\nOne event is sent for each strip available on this pad group.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_pad_group.done event.\"]\n    Strip {\n        strip: NewProxy<super::zwp_tablet_pad_strip_v2::ZwpTabletPadStripV2>,\n    },\n\n    #[doc =\n      \"mode-switch ability announced\\n\\nSent on wp_tablet_pad_group initialization to announce that the pad\\ngroup may switch between modes. A client may use a mode to store a\\nspecific configuration for buttons, rings and strips and use the\\nwl_tablet_pad_group.mode_switch event to toggle between these\\nconfigurations. Mode indices start at 0.\\n\\nSwitching modes is compositor-dependent. See the\\nwp_tablet_pad_group.mode_switch event for more details.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_pad_group.done event. This event is only sent when more than\\nmore than one mode is available.\"]\n    Modes {\n        modes: u32,\n    },\n\n    #[doc =\n      \"tablet group description events sequence complete\\n\\nThis event is sent immediately to signal the end of the initial\\nburst of descriptive events. A client may consider the static\\ndescription of the tablet to be complete and finalize initialization\\nof the tablet group.\"]\n    Done,\n\n    #[doc =\n      \"mode switch event\\n\\nNotification that the mode was switched.\\n\\nA mode applies to all buttons, rings and strips in a group\\nsimultaneously, but a client is not required to assign different actions\\nfor each mode. For example, a client may have mode-specific button\\nmappings but map the ring to vertical scrolling in all modes. Mode\\nindices start at 0.\\n\\nSwitching modes is compositor-dependent. The compositor may provide\\nvisual cues to the client about the mode, e.g. by toggling LEDs on\\nthe tablet device. Mode-switching may be software-controlled or\\ncontrolled by one or more physical buttons. For example, on a Wacom\\nIntuos Pro, the button inside the ring may be assigned to switch\\nbetween modes.\\n\\nThe compositor will also send this event after wp_tablet_pad.enter on\\neach group in order to notify of the current mode. Groups that only\\nfeature one mode will use mode=0 when emitting this event.\\n\\nIf a button action in the new mode differs from the action in the\\nprevious mode, the client should immediately issue a\\nwp_tablet_pad.set_feedback request for each changed button.\\n\\nIf a ring or strip action in the new mode differs from the action\\nin the previous mode, the client should immediately issue a\\nwp_tablet_ring.set_feedback or wp_tablet_strip.set_feedback request\\nfor each changed ring or strip.\"]\n    ModeSwitch {\n        time: u32,\n        serial: u32,\n        mode: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4325},{"krate":0,"index":4327}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4344},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8136825,"byte_end":8136844,"line_start":2474,"line_end":2474,"column_start":16,"column_end":35},"name":"ZwpTabletPadGroupV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::ZwpTabletPadGroupV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4352},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8137211,"byte_end":8137224,"line_start":2484,"line_end":2484,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4353}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8137512,"byte_end":8137519,"line_start":2486,"line_end":2486,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":4352},"children":[],"decl_id":null,"docs":"destroy the pad object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4356},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8137796,"byte_end":8137813,"line_start":2495,"line_end":2495,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4357},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8137907,"byte_end":8137924,"line_start":2497,"line_end":2497,"column_start":15,"column_end":32},"name":"EVT_BUTTONS_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::EVT_BUTTONS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4358},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8138018,"byte_end":8138032,"line_start":2499,"line_end":2499,"column_start":15,"column_end":29},"name":"EVT_RING_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::EVT_RING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4359},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8138126,"byte_end":8138141,"line_start":2501,"line_end":2501,"column_start":15,"column_end":30},"name":"EVT_STRIP_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::EVT_STRIP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4360},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8138235,"byte_end":8138250,"line_start":2503,"line_end":2503,"column_start":15,"column_end":30},"name":"EVT_MODES_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::EVT_MODES_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4361},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8138344,"byte_end":8138358,"line_start":2505,"line_end":2505,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4362},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8138452,"byte_end":8138473,"line_start":2507,"line_end":2507,"column_start":15,"column_end":36},"name":"EVT_MODE_SWITCH_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_group_v2::EVT_MODE_SWITCH_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4363},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8139664,"byte_end":8139681,"line_start":2510,"line_end":2510,"column_start":9,"column_end":26},"name":"zwp_tablet_pad_v2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":13515},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4578},{"krate":0,"index":4592},{"krate":0,"index":4590},{"krate":0,"index":4588},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4391},{"krate":0,"index":4406},{"krate":0,"index":4428},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465}],"decl_id":null,"docs":"a set of buttons, rings and strips","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4579},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140205,"byte_end":8140213,"line_start":2522,"line_end":2522,"column_start":9,"column_end":17},"name":"Released","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::ButtonState::Released","value":"ButtonState::Released","parent":{"krate":0,"index":4578},"children":[],"decl_id":null,"docs":"the button is not pressed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4582},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140268,"byte_end":8140275,"line_start":2524,"line_end":2524,"column_start":9,"column_end":16},"name":"Pressed","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::ButtonState::Pressed","value":"ButtonState::Pressed","parent":{"krate":0,"index":4578},"children":[],"decl_id":null,"docs":"the button is pressed\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4578},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140138,"byte_end":8140149,"line_start":2520,"line_end":2520,"column_start":14,"column_end":25},"name":"ButtonState","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::ButtonState","value":"pub enum ButtonState {\n\n    #[doc = \"the button is not pressed\"]\n    Released = ,\n\n    #[doc = \"the button is pressed\"]\n    Pressed = ,\n}","parent":null,"children":[{"krate":0,"index":4579},{"krate":0,"index":4582}],"decl_id":null,"docs":"physical button state","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140067,"byte_end":8140079,"line_start":2518,"line_end":2518,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140325,"byte_end":8140333,"line_start":2527,"line_end":2527,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ButtonState>::from_raw","value":"pub fn from_raw(u32) -> Option<ButtonState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140562,"byte_end":8140568,"line_start":2534,"line_end":2534,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ButtonState>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4385},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8141868,"byte_end":8141879,"line_start":2540,"line_end":2540,"column_start":9,"column_end":20},"name":"SetFeedback","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Request::SetFeedback","value":"Request::SetFeedback { button, description, serial }","parent":{"krate":0,"index":4384},"children":[],"decl_id":null,"docs":"set compositor feedback","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4389},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8142222,"byte_end":8142229,"line_start":2546,"line_end":2546,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":4384},"children":[],"decl_id":null,"docs":"destroy the pad object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4384},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140639,"byte_end":8140646,"line_start":2538,"line_end":2538,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set compositor feedback\\n\\nRequests the compositor to use the provided feedback string\\nassociated with this button. This request should be issued immediately\\nafter a wp_tablet_pad_group.mode_switch event from the corresponding\\ngroup is received, or whenever a button is mapped to a different\\naction. See wp_tablet_pad_group.mode_switch for more details.\\n\\nClients are encouraged to provide context-aware descriptions for\\nthe actions associated with each button, and compositors may use\\nthis information to offer visual feedback on the button layout\\n(e.g. on-screen displays).\\n\\nButton indices start at 0. Setting the feedback string on a button\\nthat is reserved by the compositor (i.e. not belonging to any\\nwp_tablet_pad_group) does not generate an error but the compositor\\nis free to ignore the request.\\n\\nThe provided string 'description' is a UTF-8 encoded string to be\\nassociated with this ring, and is considered user-visible; general\\ninternationalization rules apply.\\n\\nThe serial argument will be that of the last\\nwp_tablet_pad_group.mode_switch event received for the group of this\\nbutton. Requests providing other serials than the most recent one will\\nbe ignored.\"]\n    SetFeedback {\n        button: u32,\n        description: String,\n        serial: u32,\n    },\n\n    #[doc =\n      \"destroy the pad object\\n\\nDestroy the wp_tablet_pad object. Objects created from this object\\nare unaffected and should be destroyed separately.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":4385},{"krate":0,"index":4389}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4407},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8145861,"byte_end":8145866,"line_start":2647,"line_end":2647,"column_start":9,"column_end":14},"name":"Group","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Group","value":"Event::Group { pad_group }","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"group announced","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4409},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8146464,"byte_end":8146468,"line_start":2651,"line_end":2651,"column_start":9,"column_end":13},"name":"Path","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Path","value":"Event::Path { path }","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"path to the device","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4411},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8146763,"byte_end":8146770,"line_start":2653,"line_end":2653,"column_start":9,"column_end":16},"name":"Buttons","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Buttons","value":"Event::Buttons { buttons }","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"buttons announced","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4413},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8147043,"byte_end":8147047,"line_start":2655,"line_end":2655,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Done","value":"Event::Done","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"pad description event sequence complete","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4415},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8147155,"byte_end":8147161,"line_start":2657,"line_end":2657,"column_start":9,"column_end":15},"name":"Button","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Button","value":"Event::Button { time, button, state }","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"physical button state","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4419},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8147361,"byte_end":8147366,"line_start":2663,"line_end":2663,"column_start":9,"column_end":14},"name":"Enter","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Enter","value":"Event::Enter { serial, tablet, surface }","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"enter event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4423},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8147642,"byte_end":8147647,"line_start":2669,"line_end":2669,"column_start":9,"column_end":14},"name":"Leave","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Leave","value":"Event::Leave { serial, surface }","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"enter event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4426},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8148068,"byte_end":8148075,"line_start":2674,"line_end":2674,"column_start":9,"column_end":16},"name":"Removed","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event::Removed","value":"Event::Removed","parent":{"krate":0,"index":4406},"children":[],"decl_id":null,"docs":"pad removed event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4406},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8145562,"byte_end":8145567,"line_start":2645,"line_end":2645,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"group announced\\n\\nSent on wp_tablet_pad initialization to announce available groups.\\nOne event is sent for each pad group available.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_pad.done event. At least one group will be announced.\"]\n    Group {\n        pad_group: NewProxy<super::zwp_tablet_pad_group_v2::ZwpTabletPadGroupV2>,\n    },\n\n    #[doc =\n      \"path to the device\\n\\nA system-specific device path that indicates which device is behind\\nthis wp_tablet_pad. This information may be used to gather additional\\ninformation about the device, e.g. through libwacom.\\n\\nThe format of the path is unspecified, it may be a device node, a\\nsysfs path, or some other identifier. It is up to the client to\\nidentify the string provided.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_pad.done event.\"]\n    Path {\n        path: String,\n    },\n\n    #[doc =\n      \"buttons announced\\n\\nSent on wp_tablet_pad initialization to announce the available\\nbuttons.\\n\\nThis event is sent in the initial burst of events before the\\nwp_tablet_pad.done event. This event is only sent when at least one\\nbutton is available.\"]\n    Buttons {\n        buttons: u32,\n    },\n\n    #[doc =\n      \"pad description event sequence complete\\n\\nThis event signals the end of the initial burst of descriptive\\nevents. A client may consider the static description of the pad to\\nbe complete and finalize initialization of the pad.\"]\n    Done,\n\n    #[doc =\n      \"physical button state\\n\\nSent whenever the physical state of a button changes.\"]\n    Button {\n        time: u32,\n        button: u32,\n        state: ButtonState,\n    },\n\n    #[doc =\n      \"enter event\\n\\nNotification that this pad is focused on the specified surface.\"]\n    Enter {\n        serial: u32,\n        tablet: Proxy<super::zwp_tablet_v2::ZwpTabletV2>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"enter event\\n\\nNotification that this pad is no longer focused on the specified\\nsurface.\"]\n    Leave {\n        serial: u32,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"pad removed event\\n\\nSent when the pad has been removed from the system. When a tablet\\nis removed its pad(s) will be removed too.\\n\\nWhen this event is received, the client must destroy all rings, strips\\nand groups that were offered by this pad, and issue wp_tablet_pad.destroy\\nthe pad itself.\"]\n    Removed,\n}","parent":null,"children":[{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4419},{"krate":0,"index":4423},{"krate":0,"index":4426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4442},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8158412,"byte_end":8158426,"line_start":2950,"line_end":2950,"column_start":16,"column_end":30},"name":"ZwpTabletPadV2","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::ZwpTabletPadV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4450},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8158776,"byte_end":8158789,"line_start":2960,"line_end":2960,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8160014,"byte_end":8160026,"line_start":2962,"line_end":2962,"column_start":12,"column_end":24},"name":"set_feedback","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::RequestsTrait::set_feedback","value":"pub fn set_feedback(&Self, u32, String, u32) -> ()","parent":{"krate":0,"index":4450},"children":[],"decl_id":null,"docs":"set compositor feedback","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8160367,"byte_end":8160374,"line_start":2964,"line_end":2964,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":4450},"children":[],"decl_id":null,"docs":"destroy the pad object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4456},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8160936,"byte_end":8160958,"line_start":2981,"line_end":2981,"column_start":15,"column_end":37},"name":"REQ_SET_FEEDBACK_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::REQ_SET_FEEDBACK_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4457},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161054,"byte_end":8161071,"line_start":2983,"line_end":2983,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4458},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161165,"byte_end":8161180,"line_start":2985,"line_end":2985,"column_start":15,"column_end":30},"name":"EVT_GROUP_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_GROUP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4459},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161274,"byte_end":8161288,"line_start":2987,"line_end":2987,"column_start":15,"column_end":29},"name":"EVT_PATH_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_PATH_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4460},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161382,"byte_end":8161399,"line_start":2989,"line_end":2989,"column_start":15,"column_end":32},"name":"EVT_BUTTONS_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_BUTTONS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4461},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161493,"byte_end":8161507,"line_start":2991,"line_end":2991,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4462},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161601,"byte_end":8161617,"line_start":2993,"line_end":2993,"column_start":15,"column_end":31},"name":"EVT_BUTTON_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_BUTTON_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4463},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161711,"byte_end":8161726,"line_start":2995,"line_end":2995,"column_start":15,"column_end":30},"name":"EVT_ENTER_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_ENTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4464},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161820,"byte_end":8161835,"line_start":2997,"line_end":2997,"column_start":15,"column_end":30},"name":"EVT_LEAVE_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_LEAVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4465},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8161929,"byte_end":8161946,"line_start":2999,"line_end":2999,"column_start":15,"column_end":32},"name":"EVT_REMOVED_SINCE","qualname":"::unstable::tablet::v2::generated::client::zwp_tablet_pad_v2::EVT_REMOVED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":23},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16869,"byte_end":16879,"line_start":283,"line_end":283,"column_start":9,"column_end":19},"name":"text_input","qualname":"::unstable::text_input","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4594}],"decl_id":null,"docs":" Text input protocol\n","sig":null,"attributes":[{"value":"! Text input protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16886,"byte_end":16909,"line_start":284,"line_end":284,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4593},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::text_input::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":4634},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_interfaces.rs","byte_start":8162676,"byte_end":8162702,"line_start":17,"line_end":17,"column_start":16,"column_end":42},"name":"zwp_text_input_v1_requests","qualname":"::unstable::text_input::v1::generated::c_interfaces::zwp_text_input_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":4638},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_interfaces.rs","byte_start":8165122,"byte_end":8165146,"line_start":76,"line_end":76,"column_start":16,"column_end":40},"name":"zwp_text_input_v1_events","qualname":"::unstable::text_input::v1::generated::c_interfaces::zwp_text_input_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":4640},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_interfaces.rs","byte_start":8167766,"byte_end":8167793,"line_start":143,"line_end":143,"column_start":16,"column_end":43},"name":"zwp_text_input_v1_interface","qualname":"::unstable::text_input::v1::generated::c_interfaces::zwp_text_input_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":4643},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_interfaces.rs","byte_start":8168263,"byte_end":8168297,"line_start":153,"line_end":153,"column_start":16,"column_end":50},"name":"zwp_text_input_manager_v1_requests","qualname":"::unstable::text_input::v1::generated::c_interfaces::zwp_text_input_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":4645},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_interfaces.rs","byte_start":8168562,"byte_end":8168597,"line_start":158,"line_end":158,"column_start":16,"column_end":51},"name":"zwp_text_input_manager_v1_interface","qualname":"::unstable::text_input::v1::generated::c_interfaces::zwp_text_input_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4646},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8170529,"byte_end":8170546,"line_start":2,"line_end":2,"column_start":9,"column_end":26},"name":"zwp_text_input_v1","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":13585},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4908},{"krate":0,"index":4955},{"krate":0,"index":4953},{"krate":0,"index":4951},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4664},{"krate":0,"index":4956},{"krate":0,"index":5003},{"krate":0,"index":5001},{"krate":0,"index":4999},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4667},{"krate":0,"index":5004},{"krate":0,"index":5036},{"krate":0,"index":5034},{"krate":0,"index":5032},{"krate":0,"index":5029},{"krate":0,"index":5030},{"krate":0,"index":4670},{"krate":0,"index":5037},{"krate":0,"index":5054},{"krate":0,"index":5052},{"krate":0,"index":5050},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":4673},{"krate":0,"index":4676},{"krate":0,"index":4707},{"krate":0,"index":4731},{"krate":0,"index":4771},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4796},{"krate":0,"index":4808},{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843}],"decl_id":null,"docs":"text input","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4909},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171062,"byte_end":8171066,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"None","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::None","value":"ContentHint::None","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"no special behaviour\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171146,"byte_end":8171153,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"Default","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Default","value":"ContentHint::Default","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"auto completion, correction and capitalization\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4915},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171212,"byte_end":8171220,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"Password","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Password","value":"ContentHint::Password","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"hidden and sensitive text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4918},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171280,"byte_end":8171294,"line_start":20,"line_end":20,"column_start":9,"column_end":23},"name":"AutoCompletion","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::AutoCompletion","value":"ContentHint::AutoCompletion","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"suggest word completions\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4921},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171352,"byte_end":8171366,"line_start":22,"line_end":22,"column_start":9,"column_end":23},"name":"AutoCorrection","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::AutoCorrection","value":"ContentHint::AutoCorrection","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"suggest word corrections\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4924},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171454,"byte_end":8171472,"line_start":24,"line_end":24,"column_start":9,"column_end":27},"name":"AutoCapitalization","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::AutoCapitalization","value":"ContentHint::AutoCapitalization","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"switch to uppercase letters at the start of a sentence\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4927},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171530,"byte_end":8171539,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"Lowercase","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Lowercase","value":"ContentHint::Lowercase","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"prefer lowercase letters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4930},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171597,"byte_end":8171606,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"name":"Uppercase","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Uppercase","value":"ContentHint::Uppercase","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"prefer uppercase letters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4933},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171706,"byte_end":8171715,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"name":"Titlecase","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Titlecase","value":"ContentHint::Titlecase","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"prefer casing for titles and headings (can be language dependent)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4936},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171777,"byte_end":8171787,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"HiddenText","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::HiddenText","value":"ContentHint::HiddenText","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"characters should be hidden\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4939},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171853,"byte_end":8171866,"line_start":34,"line_end":34,"column_start":9,"column_end":22},"name":"SensitiveData","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::SensitiveData","value":"ContentHint::SensitiveData","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"typed text should not be stored\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4942},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171941,"byte_end":8171946,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"Latin","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Latin","value":"ContentHint::Latin","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"just latin characters should be entered\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4945},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8172009,"byte_end":8172018,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"Multiline","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint::Multiline","value":"ContentHint::Multiline","parent":{"krate":0,"index":4908},"children":[],"decl_id":null,"docs":"the text input is multiline\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4908},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8171000,"byte_end":8171011,"line_start":12,"line_end":12,"column_start":14,"column_end":25},"name":"ContentHint","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentHint","value":"pub enum ContentHint {\n\n    #[doc = \"no special behaviour\"]\n    None = ,\n\n    #[doc = \"auto completion, correction and capitalization\"]\n    Default = ,\n\n    #[doc = \"hidden and sensitive text\"]\n    Password = ,\n\n    #[doc = \"suggest word completions\"]\n    AutoCompletion = ,\n\n    #[doc = \"suggest word corrections\"]\n    AutoCorrection = ,\n\n    #[doc = \"switch to uppercase letters at the start of a sentence\"]\n    AutoCapitalization = ,\n\n    #[doc = \"prefer lowercase letters\"]\n    Lowercase = ,\n\n    #[doc = \"prefer uppercase letters\"]\n    Uppercase = ,\n\n    #[doc =\n      \"prefer casing for titles and headings (can be language dependent)\"]\n    Titlecase = ,\n\n    #[doc = \"characters should be hidden\"]\n    HiddenText = ,\n\n    #[doc = \"typed text should not be stored\"]\n    SensitiveData = ,\n\n    #[doc = \"just latin characters should be entered\"]\n    Latin = ,\n\n    #[doc = \"the text input is multiline\"]\n    Multiline = ,\n}","parent":null,"children":[{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":4918},{"krate":0,"index":4921},{"krate":0,"index":4924},{"krate":0,"index":4927},{"krate":0,"index":4930},{"krate":0,"index":4933},{"krate":0,"index":4936},{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4945}],"decl_id":null,"docs":"content hint","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8170929,"byte_end":8170941,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8172070,"byte_end":8172078,"line_start":41,"line_end":41,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ContentHint>::from_raw","value":"pub fn from_raw(u32) -> Option<ContentHint>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8172894,"byte_end":8172900,"line_start":59,"line_end":59,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ContentHint>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4957},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173349,"byte_end":8173355,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"name":"Normal","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Normal","value":"ContentPurpose::Normal","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"default input, allowing all characters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4960},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173421,"byte_end":8173426,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"Alpha","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Alpha","value":"ContentPurpose::Alpha","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"allow only alphabetic characters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4963},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173477,"byte_end":8173483,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"name":"Digits","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Digits","value":"ContentPurpose::Digits","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"allow only digits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4966},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173570,"byte_end":8173576,"line_start":74,"line_end":74,"column_start":9,"column_end":15},"name":"Number","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Number","value":"ContentPurpose::Number","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a number (including decimal separator and sign)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4969},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173630,"byte_end":8173635,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"name":"Phone","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Phone","value":"ContentPurpose::Phone","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a phone number\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4972},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173681,"byte_end":8173684,"line_start":78,"line_end":78,"column_start":9,"column_end":12},"name":"Url","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Url","value":"ContentPurpose::Url","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input an URL\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4975},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173740,"byte_end":8173745,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"name":"Email","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Email","value":"ContentPurpose::Email","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input an email address\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4978},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173803,"byte_end":8173807,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"name":"Name","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Name","value":"ContentPurpose::Name","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a name of a person\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4981},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173904,"byte_end":8173912,"line_start":84,"line_end":84,"column_start":9,"column_end":17},"name":"Password","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Password","value":"ContentPurpose::Password","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a password (combine with password or sensitive_data hint)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4984},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173958,"byte_end":8173962,"line_start":86,"line_end":86,"column_start":9,"column_end":13},"name":"Date","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Date","value":"ContentPurpose::Date","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a date\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4987},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174008,"byte_end":8174012,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"Time","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Time","value":"ContentPurpose::Time","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a time\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4990},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174068,"byte_end":8174076,"line_start":90,"line_end":90,"column_start":9,"column_end":17},"name":"Datetime","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Datetime","value":"ContentPurpose::Datetime","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input a date and time\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4993},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174131,"byte_end":8174139,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"name":"Terminal","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose::Terminal","value":"ContentPurpose::Terminal","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"input for a terminal\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4956},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173266,"byte_end":8173280,"line_start":66,"line_end":66,"column_start":14,"column_end":28},"name":"ContentPurpose","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ContentPurpose","value":"pub enum ContentPurpose {\n\n    #[doc = \"default input, allowing all characters\"]\n    Normal = ,\n\n    #[doc = \"allow only alphabetic characters\"]\n    Alpha = ,\n\n    #[doc = \"allow only digits\"]\n    Digits = ,\n\n    #[doc = \"input a number (including decimal separator and sign)\"]\n    Number = ,\n\n    #[doc = \"input a phone number\"]\n    Phone = ,\n\n    #[doc = \"input an URL\"]\n    Url = ,\n\n    #[doc = \"input an email address\"]\n    Email = ,\n\n    #[doc = \"input a name of a person\"]\n    Name = ,\n\n    #[doc = \"input a password (combine with password or sensitive_data hint)\"]\n    Password = ,\n\n    #[doc = \"input a date\"]\n    Date = ,\n\n    #[doc = \"input a time\"]\n    Time = ,\n\n    #[doc = \"input a date and time\"]\n    Datetime = ,\n\n    #[doc = \"input for a terminal\"]\n    Terminal = ,\n}","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4969},{"krate":0,"index":4972},{"krate":0,"index":4975},{"krate":0,"index":4978},{"krate":0,"index":4981},{"krate":0,"index":4984},{"krate":0,"index":4987},{"krate":0,"index":4990},{"krate":0,"index":4993}],"decl_id":null,"docs":"content purpose","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8173195,"byte_end":8173207,"line_start":64,"line_end":64,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174193,"byte_end":8174201,"line_start":95,"line_end":95,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ContentPurpose>::from_raw","value":"pub fn from_raw(u32) -> Option<ContentPurpose>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174994,"byte_end":8175000,"line_start":113,"line_end":113,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ContentPurpose>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5005},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175208,"byte_end":8175215,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"Default","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Default","value":"PreeditStyle::Default","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"default style for composing text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5008},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175298,"byte_end":8175302,"line_start":123,"line_end":123,"column_start":9,"column_end":13},"name":"None","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::None","value":"PreeditStyle::None","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"style should be the same as in non-composing text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5011},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175316,"byte_end":8175322,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"name":"Active","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Active","value":"PreeditStyle::Active","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5014},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175336,"byte_end":8175344,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"Inactive","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Inactive","value":"PreeditStyle::Inactive","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5017},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175358,"byte_end":8175367,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"Highlight","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Highlight","value":"PreeditStyle::Highlight","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5020},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175381,"byte_end":8175390,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"Underline","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Underline","value":"PreeditStyle::Underline","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5023},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175404,"byte_end":8175413,"line_start":128,"line_end":128,"column_start":9,"column_end":18},"name":"Selection","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Selection","value":"PreeditStyle::Selection","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5026},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175427,"byte_end":8175436,"line_start":129,"line_end":129,"column_start":9,"column_end":18},"name":"Incorrect","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle::Incorrect","value":"PreeditStyle::Incorrect","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5004},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175133,"byte_end":8175145,"line_start":119,"line_end":119,"column_start":14,"column_end":26},"name":"PreeditStyle","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::PreeditStyle","value":"pub enum PreeditStyle {\n\n    #[doc = \"default style for composing text\"]\n    Default = ,\n\n    #[doc = \"style should be the same as in non-composing text\"]\n    None = ,\n    Active = ,\n    Inactive = ,\n    Highlight = ,\n    Underline = ,\n    Selection = ,\n    Incorrect = ,\n}","parent":null,"children":[{"krate":0,"index":5005},{"krate":0,"index":5008},{"krate":0,"index":5011},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5023},{"krate":0,"index":5026}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175062,"byte_end":8175074,"line_start":117,"line_end":117,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175487,"byte_end":8175495,"line_start":132,"line_end":132,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<PreeditStyle>::from_raw","value":"pub fn from_raw(u32) -> Option<PreeditStyle>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176031,"byte_end":8176037,"line_start":145,"line_end":145,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<PreeditStyle>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5038},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176265,"byte_end":8176269,"line_start":153,"line_end":153,"column_start":9,"column_end":13},"name":"Auto","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::TextDirection::Auto","value":"TextDirection::Auto","parent":{"krate":0,"index":5037},"children":[],"decl_id":null,"docs":"automatic text direction based on text and language\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5041},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176316,"byte_end":8176319,"line_start":155,"line_end":155,"column_start":9,"column_end":12},"name":"Ltr","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::TextDirection::Ltr","value":"TextDirection::Ltr","parent":{"krate":0,"index":5037},"children":[],"decl_id":null,"docs":"left-to-right\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5044},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176366,"byte_end":8176369,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"Rtl","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::TextDirection::Rtl","value":"TextDirection::Rtl","parent":{"krate":0,"index":5037},"children":[],"decl_id":null,"docs":"right-to-left\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5037},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176170,"byte_end":8176183,"line_start":151,"line_end":151,"column_start":14,"column_end":27},"name":"TextDirection","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::TextDirection","value":"pub enum TextDirection {\n\n    #[doc = \"automatic text direction based on text and language\"]\n    Auto = ,\n\n    #[doc = \"left-to-right\"]\n    Ltr = ,\n\n    #[doc = \"right-to-left\"]\n    Rtl = ,\n}","parent":null,"children":[{"krate":0,"index":5038},{"krate":0,"index":5041},{"krate":0,"index":5044}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176099,"byte_end":8176111,"line_start":149,"line_end":149,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176421,"byte_end":8176429,"line_start":160,"line_end":160,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<TextDirection>::from_raw","value":"pub fn from_raw(u32) -> Option<TextDirection>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176703,"byte_end":8176709,"line_start":168,"line_end":168,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<TextDirection>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4677},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8177167,"byte_end":8177175,"line_start":174,"line_end":174,"column_start":9,"column_end":17},"name":"Activate","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::Activate","value":"Request::Activate { seat, surface }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"request activation","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4680},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8177504,"byte_end":8177514,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"name":"Deactivate","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::Deactivate","value":"Request::Deactivate { seat }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"request deactivation","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4682},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8177654,"byte_end":8177668,"line_start":181,"line_end":181,"column_start":9,"column_end":23},"name":"ShowInputPanel","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::ShowInputPanel","value":"Request::ShowInputPanel","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"show input panels","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4684},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8177768,"byte_end":8177782,"line_start":183,"line_end":183,"column_start":9,"column_end":23},"name":"HideInputPanel","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::HideInputPanel","value":"Request::HideInputPanel","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"hide input panels","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4686},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8177977,"byte_end":8177982,"line_start":185,"line_end":185,"column_start":9,"column_end":14},"name":"Reset","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::Reset","value":"Request::Reset","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"reset","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4688},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8178328,"byte_end":8178346,"line_start":187,"line_end":187,"column_start":9,"column_end":27},"name":"SetSurroundingText","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::SetSurroundingText","value":"Request::SetSurroundingText { text, cursor, anchor }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"sets the surrounding text","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4692},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8178815,"byte_end":8178829,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"name":"SetContentType","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::SetContentType","value":"Request::SetContentType { hint, purpose }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"set content purpose and hint","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4695},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8178887,"byte_end":8178905,"line_start":195,"line_end":195,"column_start":9,"column_end":27},"name":"SetCursorRectangle","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::SetCursorRectangle","value":"Request::SetCursorRectangle { x, y, width, height }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4700},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8179416,"byte_end":8179436,"line_start":202,"line_end":202,"column_start":9,"column_end":29},"name":"SetPreferredLanguage","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::SetPreferredLanguage","value":"Request::SetPreferredLanguage { language }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"sets preferred language","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4702},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8179487,"byte_end":8179498,"line_start":204,"line_end":204,"column_start":9,"column_end":20},"name":"CommitState","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::CommitState","value":"Request::CommitState { serial }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4704},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8179544,"byte_end":8179556,"line_start":206,"line_end":206,"column_start":9,"column_end":21},"name":"InvokeAction","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request::InvokeAction","value":"Request::InvokeAction { button, index }","parent":{"krate":0,"index":4676},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4676},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176780,"byte_end":8176787,"line_start":172,"line_end":172,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"request activation\\n\\nRequests the text_input object to be activated (typically when the\\ntext entry gets focus).\\n\\nThe seat argument is a wl_seat which maintains the focus for this\\nactivation. The surface argument is a wl_surface assigned to the\\ntext_input object and tracked for focus lost. The enter event\\nis emitted on successful activation.\"]\n    Activate {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"request deactivation\\n\\nRequests the text_input object to be deactivated (typically when the\\ntext entry lost focus). The seat argument is a wl_seat which was used\\nfor activation.\"]\n    Deactivate {\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n\n    #[doc =\n      \"show input panels\\n\\nRequests input panels (virtual keyboard) to show.\"]\n    ShowInputPanel,\n\n    #[doc =\n      \"hide input panels\\n\\nRequests input panels (virtual keyboard) to hide.\"]\n    HideInputPanel,\n\n    #[doc =\n      \"reset\\n\\nShould be called by an editor widget when the input state should be\\nreset, for example after the text was changed outside of the normal\\ninput method flow.\"]\n    Reset,\n\n    #[doc =\n      \"sets the surrounding text\\n\\nSets the plain surrounding text around the input position. Text is\\nUTF-8 encoded. Cursor is the byte offset within the\\nsurrounding text. Anchor is the byte offset of the\\nselection anchor within the surrounding text. If there is no selected\\ntext anchor, then it is the same as cursor.\"]\n    SetSurroundingText {\n        text: String,\n        cursor: u32,\n        anchor: u32,\n    },\n\n    #[doc =\n      \"set content purpose and hint\\n\\nSets the content purpose and content hint. While the purpose is the\\nbasic purpose of an input field, the hint flags allow to modify some\\nof the behavior.\\n\\nWhen no content type is explicitly set, a normal content purpose with\\ndefault hints (auto completion, auto correction, auto capitalization)\\nshould be assumed.\"]\n    SetContentType {\n        hint: u32,\n        purpose: u32,\n    },\n\n    #[doc = \"\"]\n    SetCursorRectangle {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"sets preferred language\\n\\nSets a specific language. This allows for example a virtual keyboard to\\nshow a language specific layout. The \\\"language\\\" argument is an RFC-3066\\nformat language tag.\\n\\nIt could be used for example in a word processor to indicate the\\nlanguage of the currently edited document or in an instant message\\napplication which tracks languages of contacts.\"]\n    SetPreferredLanguage {\n        language: String,\n    },\n\n    #[doc = \"\"]\n    CommitState {\n        serial: u32,\n    },\n\n    #[doc = \"\"]\n    InvokeAction {\n        button: u32,\n        index: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4692},{"krate":0,"index":4695},{"krate":0,"index":4700},{"krate":0,"index":4702},{"krate":0,"index":4704}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4732},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8190303,"byte_end":8190308,"line_start":477,"line_end":477,"column_start":9,"column_end":14},"name":"Enter","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::Enter","value":"Event::Enter { surface }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"enter event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4734},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8190574,"byte_end":8190579,"line_start":481,"line_end":481,"column_start":9,"column_end":14},"name":"Leave","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::Leave","value":"Event::Leave","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"leave event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4736},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8190786,"byte_end":8190798,"line_start":483,"line_end":483,"column_start":9,"column_end":21},"name":"ModifiersMap","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::ModifiersMap","value":"Event::ModifiersMap { map }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"modifiers map","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4738},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8190933,"byte_end":8190948,"line_start":485,"line_end":485,"column_start":9,"column_end":24},"name":"InputPanelState","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::InputPanelState","value":"Event::InputPanelState { state }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"state of the input panel","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4740},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8191372,"byte_end":8191385,"line_start":487,"line_end":487,"column_start":9,"column_end":22},"name":"PreeditString","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::PreeditString","value":"Event::PreeditString { serial, text, commit }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"pre-edit","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4744},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8191853,"byte_end":8191867,"line_start":493,"line_end":493,"column_start":9,"column_end":23},"name":"PreeditStyling","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::PreeditStyling","value":"Event::PreeditStyling { index, length, style }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"pre-edit styling","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4748},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8192192,"byte_end":8192205,"line_start":495,"line_end":495,"column_start":9,"column_end":22},"name":"PreeditCursor","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::PreeditCursor","value":"Event::PreeditCursor { index }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"pre-edit cursor","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4750},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8192658,"byte_end":8192670,"line_start":497,"line_end":497,"column_start":9,"column_end":21},"name":"CommitString","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::CommitString","value":"Event::CommitString { serial, text }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"commit","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4753},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8192898,"byte_end":8192912,"line_start":499,"line_end":499,"column_start":9,"column_end":23},"name":"CursorPosition","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::CursorPosition","value":"Event::CursorPosition { index, anchor }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"set cursor to new position","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4756},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8193254,"byte_end":8193275,"line_start":501,"line_end":501,"column_start":9,"column_end":30},"name":"DeleteSurroundingText","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::DeleteSurroundingText","value":"Event::DeleteSurroundingText { index, length }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"delete surrounding text","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4759},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8193738,"byte_end":8193744,"line_start":503,"line_end":503,"column_start":9,"column_end":15},"name":"Keysym","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::Keysym","value":"Event::Keysym { serial, time, sym, state, modifiers }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"keysym","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4765},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8194019,"byte_end":8194027,"line_start":511,"line_end":511,"column_start":9,"column_end":17},"name":"Language","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::Language","value":"Event::Language { serial, language }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"language","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4768},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8194327,"byte_end":8194340,"line_start":513,"line_end":513,"column_start":9,"column_end":22},"name":"TextDirection","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event::TextDirection","value":"Event::TextDirection { serial, direction }","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"text direction","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4731},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8190153,"byte_end":8190158,"line_start":475,"line_end":475,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"enter event\\n\\nNotify the text_input object when it received focus. Typically in\\nresponse to an activate request.\"]\n    Enter {\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"leave event\\n\\nNotify the text_input object when it lost focus. Either in response\\nto a deactivate request or when the assigned surface lost focus or was\\ndestroyed.\"]\n    Leave,\n\n    #[doc =\n      \"modifiers map\\n\\nTransfer an array of 0-terminated modifier names. The position in\\nthe array is the index of the modifier as used in the modifiers\\nbitmask in the keysym event.\"]\n    ModifiersMap {\n        map: Vec<u8>,\n    },\n\n    #[doc =\n      \"state of the input panel\\n\\nNotify when the visibility state of the input panel changed.\"]\n    InputPanelState {\n        state: u32,\n    },\n\n    #[doc =\n      \"pre-edit\\n\\nNotify when a new composing text (pre-edit) should be set around the\\ncurrent cursor position. Any previously set composing text should\\nbe removed.\\n\\nThe commit text can be used to replace the preedit text on reset\\n(for example on unfocus).\\n\\nThe text input should also handle all preedit_style and preedit_cursor\\nevents occurring directly before preedit_string.\"]\n    PreeditString {\n        serial: u32,\n        text: String,\n        commit: String,\n    },\n\n    #[doc =\n      \"pre-edit styling\\n\\nSets styling information on composing text. The style is applied for\\nlength bytes from index relative to the beginning of the composing\\ntext (as byte offset). Multiple styles can\\nbe applied to a composing text by sending multiple preedit_styling\\nevents.\\n\\nThis event is handled as part of a following preedit_string event.\"]\n    PreeditStyling {\n        index: u32,\n        length: u32,\n        style: u32,\n    },\n\n    #[doc =\n      \"pre-edit cursor\\n\\nSets the cursor position inside the composing text (as byte\\noffset) relative to the start of the composing text. When index is a\\nnegative number no cursor is shown.\\n\\nThis event is handled as part of a following preedit_string event.\"]\n    PreeditCursor {\n        index: i32,\n    },\n\n    #[doc =\n      \"commit\\n\\nNotify when text should be inserted into the editor widget. The text to\\ncommit could be either just a single character after a key press or the\\nresult of some composing (pre-edit). It could also be an empty text\\nwhen some text should be removed (see delete_surrounding_text) or when\\nthe input cursor should be moved (see cursor_position).\\n\\nAny previously set composing text should be removed.\"]\n    CommitString {\n        serial: u32,\n        text: String,\n    },\n\n    #[doc =\n      \"set cursor to new position\\n\\nNotify when the cursor or anchor position should be modified.\\n\\nThis event should be handled as part of a following commit_string\\nevent.\"]\n    CursorPosition {\n        index: i32,\n        anchor: i32,\n    },\n\n    #[doc =\n      \"delete surrounding text\\n\\nNotify when the text around the current cursor position should be\\ndeleted.\\n\\nIndex is relative to the current cursor (in bytes).\\nLength is the length of deleted text (in bytes).\\n\\nThis event should be handled as part of a following commit_string\\nevent.\"]\n    DeleteSurroundingText {\n        index: i32,\n        length: u32,\n    },\n\n    #[doc =\n      \"keysym\\n\\nNotify when a key event was sent. Key events should not be used\\nfor normal text input operations, which should be done with\\ncommit_string, delete_surrounding_text, etc. The key event follows\\nthe wl_keyboard key event convention. Sym is an XKB keysym, state a\\nwl_keyboard key_state. Modifiers are a mask for effective modifiers\\n(where the modifier indices are set by the modifiers_map event)\"]\n    Keysym {\n        serial: u32,\n        time: u32,\n        sym: u32,\n        state: u32,\n        modifiers: u32,\n    },\n\n    #[doc =\n      \"language\\n\\nSets the language of the input text. The \\\"language\\\" argument is an\\nRFC-3066 format language tag.\"]\n    Language {\n        serial: u32,\n        language: String,\n    },\n\n    #[doc =\n      \"text direction\\n\\nSets the text direction of input text.\\n\\nIt is mainly needed for showing an input cursor on the correct side of\\nthe editor when there is no input done yet and making sure neutral\\ndirection text is laid out properly.\"]\n    TextDirection {\n        serial: u32,\n        direction: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":4734},{"krate":0,"index":4736},{"krate":0,"index":4738},{"krate":0,"index":4740},{"krate":0,"index":4744},{"krate":0,"index":4748},{"krate":0,"index":4750},{"krate":0,"index":4753},{"krate":0,"index":4756},{"krate":0,"index":4759},{"krate":0,"index":4765},{"krate":0,"index":4768}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4788},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8213291,"byte_end":8213305,"line_start":997,"line_end":997,"column_start":16,"column_end":30},"name":"ZwpTextInputV1","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::ZwpTextInputV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4796},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8213655,"byte_end":8213668,"line_start":1007,"line_end":1007,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4797},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8214051,"byte_end":8214059,"line_start":1009,"line_end":1009,"column_start":12,"column_end":20},"name":"activate","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::activate","value":"pub fn activate(&Self, &Proxy<super::wl_seat::WlSeat>,\n                &Proxy<super::wl_surface::WlSurface>) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"request activation","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8214417,"byte_end":8214427,"line_start":1015,"line_end":1015,"column_start":12,"column_end":22},"name":"deactivate","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::deactivate","value":"pub fn deactivate(&Self, &Proxy<super::wl_seat::WlSeat>) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"request deactivation","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4799},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8214581,"byte_end":8214597,"line_start":1017,"line_end":1017,"column_start":12,"column_end":28},"name":"show_input_panel","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::show_input_panel","value":"pub fn show_input_panel(&Self) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"show input panels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8214713,"byte_end":8214729,"line_start":1019,"line_end":1019,"column_start":12,"column_end":28},"name":"hide_input_panel","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::hide_input_panel","value":"pub fn hide_input_panel(&Self) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"hide input panels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4801},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8214940,"byte_end":8214945,"line_start":1021,"line_end":1021,"column_start":12,"column_end":17},"name":"reset","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::reset","value":"pub fn reset(&Self) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"reset","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8215307,"byte_end":8215327,"line_start":1023,"line_end":1023,"column_start":12,"column_end":32},"name":"set_surrounding_text","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::set_surrounding_text","value":"pub fn set_surrounding_text(&Self, String, u32, u32) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"sets the surrounding text","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8215764,"byte_end":8215780,"line_start":1025,"line_end":1025,"column_start":12,"column_end":28},"name":"set_content_type","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::set_content_type","value":"pub fn set_content_type(&Self, u32, u32) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"set content purpose and hint","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8215851,"byte_end":8215871,"line_start":1027,"line_end":1027,"column_start":12,"column_end":32},"name":"set_cursor_rectangle","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::set_cursor_rectangle","value":"pub fn set_cursor_rectangle(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8216338,"byte_end":8216360,"line_start":1029,"line_end":1029,"column_start":12,"column_end":34},"name":"set_preferred_language","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::set_preferred_language","value":"pub fn set_preferred_language(&Self, String) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"sets preferred language","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8216424,"byte_end":8216436,"line_start":1031,"line_end":1031,"column_start":12,"column_end":24},"name":"commit_state","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::commit_state","value":"pub fn commit_state(&Self, u32) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4807},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8216495,"byte_end":8216508,"line_start":1033,"line_end":1033,"column_start":12,"column_end":25},"name":"invoke_action","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::RequestsTrait::invoke_action","value":"pub fn invoke_action(&Self, u32, u32) -> ()","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4820},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8218950,"byte_end":8218968,"line_start":1104,"line_end":1104,"column_start":15,"column_end":33},"name":"REQ_ACTIVATE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_ACTIVATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4821},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219064,"byte_end":8219084,"line_start":1106,"line_end":1106,"column_start":15,"column_end":35},"name":"REQ_DEACTIVATE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_DEACTIVATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4822},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219180,"byte_end":8219206,"line_start":1108,"line_end":1108,"column_start":15,"column_end":41},"name":"REQ_SHOW_INPUT_PANEL_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_SHOW_INPUT_PANEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4823},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219302,"byte_end":8219328,"line_start":1110,"line_end":1110,"column_start":15,"column_end":41},"name":"REQ_HIDE_INPUT_PANEL_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_HIDE_INPUT_PANEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4824},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219424,"byte_end":8219439,"line_start":1112,"line_end":1112,"column_start":15,"column_end":30},"name":"REQ_RESET_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_RESET_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4825},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219535,"byte_end":8219565,"line_start":1114,"line_end":1114,"column_start":15,"column_end":45},"name":"REQ_SET_SURROUNDING_TEXT_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_SET_SURROUNDING_TEXT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4826},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219661,"byte_end":8219687,"line_start":1116,"line_end":1116,"column_start":15,"column_end":41},"name":"REQ_SET_CONTENT_TYPE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_SET_CONTENT_TYPE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4827},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219783,"byte_end":8219813,"line_start":1118,"line_end":1118,"column_start":15,"column_end":45},"name":"REQ_SET_CURSOR_RECTANGLE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_SET_CURSOR_RECTANGLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4828},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8219909,"byte_end":8219941,"line_start":1120,"line_end":1120,"column_start":15,"column_end":47},"name":"REQ_SET_PREFERRED_LANGUAGE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_SET_PREFERRED_LANGUAGE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4829},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220037,"byte_end":8220059,"line_start":1122,"line_end":1122,"column_start":15,"column_end":37},"name":"REQ_COMMIT_STATE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_COMMIT_STATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4830},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220155,"byte_end":8220178,"line_start":1124,"line_end":1124,"column_start":15,"column_end":38},"name":"REQ_INVOKE_ACTION_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::REQ_INVOKE_ACTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4831},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220272,"byte_end":8220287,"line_start":1126,"line_end":1126,"column_start":15,"column_end":30},"name":"EVT_ENTER_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_ENTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4832},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220381,"byte_end":8220396,"line_start":1128,"line_end":1128,"column_start":15,"column_end":30},"name":"EVT_LEAVE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_LEAVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4833},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220490,"byte_end":8220513,"line_start":1130,"line_end":1130,"column_start":15,"column_end":38},"name":"EVT_MODIFIERS_MAP_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_MODIFIERS_MAP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4834},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220607,"byte_end":8220634,"line_start":1132,"line_end":1132,"column_start":15,"column_end":42},"name":"EVT_INPUT_PANEL_STATE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_INPUT_PANEL_STATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4835},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220728,"byte_end":8220752,"line_start":1134,"line_end":1134,"column_start":15,"column_end":39},"name":"EVT_PREEDIT_STRING_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_PREEDIT_STRING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4836},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220846,"byte_end":8220871,"line_start":1136,"line_end":1136,"column_start":15,"column_end":40},"name":"EVT_PREEDIT_STYLING_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_PREEDIT_STYLING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4837},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8220965,"byte_end":8220989,"line_start":1138,"line_end":1138,"column_start":15,"column_end":39},"name":"EVT_PREEDIT_CURSOR_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_PREEDIT_CURSOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4838},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221083,"byte_end":8221106,"line_start":1140,"line_end":1140,"column_start":15,"column_end":38},"name":"EVT_COMMIT_STRING_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_COMMIT_STRING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4839},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221200,"byte_end":8221225,"line_start":1142,"line_end":1142,"column_start":15,"column_end":40},"name":"EVT_CURSOR_POSITION_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_CURSOR_POSITION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4840},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221319,"byte_end":8221352,"line_start":1144,"line_end":1144,"column_start":15,"column_end":48},"name":"EVT_DELETE_SURROUNDING_TEXT_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_DELETE_SURROUNDING_TEXT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4841},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221446,"byte_end":8221462,"line_start":1146,"line_end":1146,"column_start":15,"column_end":31},"name":"EVT_KEYSYM_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_KEYSYM_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4842},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221556,"byte_end":8221574,"line_start":1148,"line_end":1148,"column_start":15,"column_end":33},"name":"EVT_LANGUAGE_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_LANGUAGE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4843},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221668,"byte_end":8221692,"line_start":1150,"line_end":1150,"column_start":15,"column_end":39},"name":"EVT_TEXT_DIRECTION_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_v1::EVT_TEXT_DIRECTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4844},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8221818,"byte_end":8221843,"line_start":1153,"line_end":1153,"column_start":9,"column_end":34},"name":"zwp_text_input_manager_v1","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":13613},{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4865},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4907}],"decl_id":null,"docs":"text input manager","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4863},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8222217,"byte_end":8222232,"line_start":1162,"line_end":1162,"column_start":9,"column_end":24},"name":"CreateTextInput","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::Request::CreateTextInput","value":"Request::CreateTextInput { id }","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"create text input","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4862},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8222126,"byte_end":8222133,"line_start":1160,"line_end":1160,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::Request","value":"pub enum Request {\n\n    #[doc = \"create text input\\n\\nCreates a new text_input object.\"]\n    CreateTextInput {\n        id: Proxy<super::zwp_text_input_v1::ZwpTextInputV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":4863}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4879},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8224432,"byte_end":8224437,"line_start":1227,"line_end":1227,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4893},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8225737,"byte_end":8225758,"line_start":1270,"line_end":1270,"column_start":16,"column_end":37},"name":"ZwpTextInputManagerV1","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::ZwpTextInputManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4901},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8226131,"byte_end":8226144,"line_start":1280,"line_end":1280,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":4902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8226231,"byte_end":8226248,"line_start":1282,"line_end":1282,"column_start":12,"column_end":29},"name":"create_text_input","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::RequestsTrait::create_text_input","value":"pub fn create_text_input<F>(&Self, F)\n-> Result<Proxy<super::zwp_text_input_v1::ZwpTextInputV1>, ()> where\nF: FnOnce(NewProxy<super::zwp_text_input_v1::ZwpTextInputV1>) ->\nProxy<super::zwp_text_input_v1::ZwpTextInputV1>","parent":{"krate":0,"index":4901},"children":[],"decl_id":null,"docs":"create text input","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4907},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8227208,"byte_end":8227235,"line_start":1308,"line_end":1308,"column_start":15,"column_end":42},"name":"REQ_CREATE_TEXT_INPUT_SINCE","qualname":"::unstable::text_input::v1::generated::client::zwp_text_input_manager_v1::REQ_CREATE_TEXT_INPUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4594},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v3","qualname":"::unstable::text_input::v3","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5057}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":5090},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_interfaces.rs","byte_start":8227581,"byte_end":8227607,"line_start":10,"line_end":10,"column_start":16,"column_end":42},"name":"zwp_text_input_v3_requests","qualname":"::unstable::text_input::v3::generated::c_interfaces::zwp_text_input_v3_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5096},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_interfaces.rs","byte_start":8229494,"byte_end":8229518,"line_start":56,"line_end":56,"column_start":16,"column_end":40},"name":"zwp_text_input_v3_events","qualname":"::unstable::text_input::v3::generated::c_interfaces::zwp_text_input_v3_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5098},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_interfaces.rs","byte_start":8230777,"byte_end":8230804,"line_start":88,"line_end":88,"column_start":16,"column_end":43},"name":"zwp_text_input_v3_interface","qualname":"::unstable::text_input::v3::generated::c_interfaces::zwp_text_input_v3_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5101},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_interfaces.rs","byte_start":8231330,"byte_end":8231364,"line_start":100,"line_end":100,"column_start":16,"column_end":50},"name":"zwp_text_input_manager_v3_requests","qualname":"::unstable::text_input::v3::generated::c_interfaces::zwp_text_input_manager_v3_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5103},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_interfaces.rs","byte_start":8231836,"byte_end":8231871,"line_start":112,"line_end":112,"column_start":16,"column_end":51},"name":"zwp_text_input_manager_v3_interface","qualname":"::unstable::text_input::v3::generated::c_interfaces::zwp_text_input_manager_v3_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5104},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8233591,"byte_end":8233608,"line_start":2,"line_end":2,"column_start":9,"column_end":26},"name":"zwp_text_input_v3","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":13683},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5317},{"krate":0,"index":5331},{"krate":0,"index":5329},{"krate":0,"index":5327},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5122},{"krate":0,"index":5332},{"krate":0,"index":5354},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5345},{"krate":0,"index":5339},{"krate":0,"index":5337},{"krate":0,"index":5334},{"krate":0,"index":5355},{"krate":0,"index":5370},{"krate":0,"index":5372},{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5395},{"krate":0,"index":5398},{"krate":0,"index":5400},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5413},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421},{"krate":0,"index":5125},{"krate":0,"index":5468},{"krate":0,"index":5518},{"krate":0,"index":5516},{"krate":0,"index":5514},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5128},{"krate":0,"index":5131},{"krate":0,"index":5154},{"krate":0,"index":5175},{"krate":0,"index":5191},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5214},{"krate":0,"index":5223},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5245}],"decl_id":null,"docs":"text input","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5318},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234124,"byte_end":8234135,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"name":"InputMethod","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ChangeCause::InputMethod","value":"ChangeCause::InputMethod","parent":{"krate":0,"index":5317},"children":[],"decl_id":null,"docs":"input method caused the change\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5321},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234223,"byte_end":8234228,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Other","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ChangeCause::Other","value":"ChangeCause::Other","parent":{"krate":0,"index":5317},"children":[],"decl_id":null,"docs":"something else than the input method caused the change\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5317},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234052,"byte_end":8234063,"line_start":12,"line_end":12,"column_start":14,"column_end":25},"name":"ChangeCause","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ChangeCause","value":"pub enum ChangeCause {\n\n    #[doc = \"input method caused the change\"]\n    InputMethod = ,\n\n    #[doc = \"something else than the input method caused the change\"]\n    Other = ,\n}","parent":null,"children":[{"krate":0,"index":5318},{"krate":0,"index":5321}],"decl_id":null,"docs":"text change reason","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8233981,"byte_end":8233993,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5123},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234278,"byte_end":8234286,"line_start":19,"line_end":19,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ChangeCause>::from_raw","value":"pub fn from_raw(u32) -> Option<ChangeCause>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5124},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234516,"byte_end":8234522,"line_start":26,"line_end":26,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ChangeCause>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5332},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234715,"byte_end":8234726,"line_start":30,"line_end":30,"column_start":136,"column_end":147},"name":"ContentHint","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint","value":"ContentHint {  }","parent":null,"children":[{"krate":0,"index":5333}],"decl_id":null,"docs":"content hint","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5379},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234775,"byte_end":8234779,"line_start":30,"line_end":30,"column_start":196,"column_end":200},"name":"None","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::None","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"no special behavior\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5380},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234831,"byte_end":8234841,"line_start":30,"line_end":30,"column_start":252,"column_end":262},"name":"Completion","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Completion","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"suggest word completions\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5381},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234893,"byte_end":8234903,"line_start":30,"line_end":30,"column_start":314,"column_end":324},"name":"Spellcheck","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Spellcheck","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"suggest word corrections\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5382},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234985,"byte_end":8235003,"line_start":30,"line_end":30,"column_start":406,"column_end":424},"name":"AutoCapitalization","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::AutoCapitalization","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"switch to uppercase letters at the start of a sentence\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5383},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235055,"byte_end":8235064,"line_start":30,"line_end":30,"column_start":476,"column_end":485},"name":"Lowercase","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Lowercase","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"prefer lowercase letters\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5384},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235116,"byte_end":8235125,"line_start":30,"line_end":30,"column_start":537,"column_end":546},"name":"Uppercase","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Uppercase","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"prefer uppercase letters\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5385},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235219,"byte_end":8235228,"line_start":30,"line_end":30,"column_start":640,"column_end":649},"name":"Titlecase","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Titlecase","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"prefer casing for titles and headings (can be language dependent)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5386},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235284,"byte_end":8235294,"line_start":30,"line_end":30,"column_start":705,"column_end":715},"name":"HiddenText","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::HiddenText","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"characters should be hidden\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5387},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235354,"byte_end":8235367,"line_start":30,"line_end":30,"column_start":775,"column_end":788},"name":"SensitiveData","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::SensitiveData","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"typed text should not be stored\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5388},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235436,"byte_end":8235441,"line_start":30,"line_end":30,"column_start":857,"column_end":862},"name":"Latin","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Latin","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"just Latin characters should be entered\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5389},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235498,"byte_end":8235507,"line_start":30,"line_end":30,"column_start":919,"column_end":928},"name":"Multiline","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint::Multiline","value":"ContentHint","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"the text input is multiline\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235558,"byte_end":8235566,"line_start":32,"line_end":32,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ContentHint>::from_raw","value":"pub fn from_raw(u32) -> Option<ContentHint>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235678,"byte_end":8235684,"line_start":35,"line_end":35,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ContentHint>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5469},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236132,"byte_end":8236138,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"Normal","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Normal","value":"ContentPurpose::Normal","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"default input, allowing all characters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5472},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236204,"byte_end":8236209,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Alpha","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Alpha","value":"ContentPurpose::Alpha","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"allow only alphabetic characters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5475},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236260,"byte_end":8236266,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"name":"Digits","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Digits","value":"ContentPurpose::Digits","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"allow only digits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5478},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236353,"byte_end":8236359,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"name":"Number","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Number","value":"ContentPurpose::Number","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a number (including decimal separator and sign)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5481},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236413,"byte_end":8236418,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"name":"Phone","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Phone","value":"ContentPurpose::Phone","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a phone number\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5484},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236464,"byte_end":8236467,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"Url","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Url","value":"ContentPurpose::Url","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input an URL\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5487},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236523,"byte_end":8236528,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"Email","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Email","value":"ContentPurpose::Email","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input an email address\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5490},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236586,"byte_end":8236590,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"Name","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Name","value":"ContentPurpose::Name","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a name of a person\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5493},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236675,"byte_end":8236683,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"name":"Password","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Password","value":"ContentPurpose::Password","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a password (combine with sensitive_data hint)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5496},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236779,"byte_end":8236782,"line_start":62,"line_end":62,"column_start":9,"column_end":12},"name":"Pin","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Pin","value":"ContentPurpose::Pin","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input is a numeric password (combine with sensitive_data hint)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5499},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236828,"byte_end":8236832,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"Date","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Date","value":"ContentPurpose::Date","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a date\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5502},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236879,"byte_end":8236883,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"Time","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Time","value":"ContentPurpose::Time","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a time\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5505},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236939,"byte_end":8236947,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"name":"Datetime","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Datetime","value":"ContentPurpose::Datetime","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input a date and time\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5508},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8237002,"byte_end":8237010,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"name":"Terminal","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose::Terminal","value":"ContentPurpose::Terminal","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"input for a terminal\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5468},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8236049,"byte_end":8236063,"line_start":42,"line_end":42,"column_start":14,"column_end":28},"name":"ContentPurpose","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentPurpose","value":"pub enum ContentPurpose {\n\n    #[doc = \"default input, allowing all characters\"]\n    Normal = ,\n\n    #[doc = \"allow only alphabetic characters\"]\n    Alpha = ,\n\n    #[doc = \"allow only digits\"]\n    Digits = ,\n\n    #[doc = \"input a number (including decimal separator and sign)\"]\n    Number = ,\n\n    #[doc = \"input a phone number\"]\n    Phone = ,\n\n    #[doc = \"input an URL\"]\n    Url = ,\n\n    #[doc = \"input an email address\"]\n    Email = ,\n\n    #[doc = \"input a name of a person\"]\n    Name = ,\n\n    #[doc = \"input a password (combine with sensitive_data hint)\"]\n    Password = ,\n\n    #[doc = \"input is a numeric password (combine with sensitive_data hint)\"]\n    Pin = ,\n\n    #[doc = \"input a date\"]\n    Date = ,\n\n    #[doc = \"input a time\"]\n    Time = ,\n\n    #[doc = \"input a date and time\"]\n    Datetime = ,\n\n    #[doc = \"input for a terminal\"]\n    Terminal = ,\n}","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":5475},{"krate":0,"index":5478},{"krate":0,"index":5481},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5490},{"krate":0,"index":5493},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5505},{"krate":0,"index":5508}],"decl_id":null,"docs":"content purpose","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235978,"byte_end":8235990,"line_start":40,"line_end":40,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8237064,"byte_end":8237072,"line_start":73,"line_end":73,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ContentPurpose>::from_raw","value":"pub fn from_raw(u32) -> Option<ContentPurpose>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8237914,"byte_end":8237920,"line_start":92,"line_end":92,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ContentPurpose>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5132},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8238236,"byte_end":8238243,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"Destroy the wp_text_input","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5134},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8239323,"byte_end":8239329,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"name":"Enable","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::Enable","value":"Request::Enable","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"Request text input to be enabled","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5136},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8239638,"byte_end":8239645,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"name":"Disable","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::Disable","value":"Request::Disable","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"Disable text input on a surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5138},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8241089,"byte_end":8241107,"line_start":104,"line_end":104,"column_start":9,"column_end":27},"name":"SetSurroundingText","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::SetSurroundingText","value":"Request::SetSurroundingText { text, cursor, anchor }","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"sets the surrounding text","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5142},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8241885,"byte_end":8241903,"line_start":110,"line_end":110,"column_start":9,"column_end":27},"name":"SetTextChangeCause","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::SetTextChangeCause","value":"Request::SetTextChangeCause { cause }","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"indicates the cause of surrounding text change","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5144},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8242483,"byte_end":8242497,"line_start":112,"line_end":112,"column_start":9,"column_end":23},"name":"SetContentType","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::SetContentType","value":"Request::SetContentType { hint, purpose }","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"set content purpose and hint","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5147},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8243406,"byte_end":8243424,"line_start":117,"line_end":117,"column_start":9,"column_end":27},"name":"SetCursorRectangle","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::SetCursorRectangle","value":"Request::SetCursorRectangle { x, y, width, height }","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"set cursor position","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5152},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8244595,"byte_end":8244601,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"name":"Commit","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request::Commit","value":"Request::Commit","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"commit state","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5131},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8237991,"byte_end":8237998,"line_start":96,"line_end":96,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Request","value":"pub enum Request {\n\n    #[doc =\n      \"Destroy the wp_text_input\\n\\nDestroy the wp_text_input object. Also disables all surfaces enabled\\nthrough this wp_text_input object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"Request text input to be enabled\\n\\nRequests text input on the surface previously obtained from the enter\\nevent.\\n\\nThis request must be issued every time the active text input changes\\nto a new one, including within the current surface. Use\\nzwp_text_input_v3.disable when there is no longer any input focus on\\nthe current surface.\\n\\nThis request resets all state associated with previous enable, disable,\\nset_surrounding_text, set_text_change_cause, set_content_type, and\\nset_cursor_rectangle requests, as well as the state associated with\\npreedit_string, commit_string, and delete_surrounding_text events.\\n\\nThe set_surrounding_text, set_content_type and set_cursor_rectangle\\nrequests must follow if the text input supports the necessary\\nfunctionality.\\n\\nState set with this request is double-buffered. It will get applied on\\nthe next zwp_text_input_v3.commit request, and stay valid until the\\nnext committed enable or disable request.\\n\\nThe changes must be applied by the compositor after issuing a\\nzwp_text_input_v3.commit request.\"]\n    Enable,\n\n    #[doc =\n      \"Disable text input on a surface\\n\\nExplicitly disable text input on the current surface (typically when\\nthere is no focus on any text entry inside the surface).\\n\\nState set with this request is double-buffered. It will get applied on\\nthe next zwp_text_input_v3.commit request.\"]\n    Disable,\n\n    #[doc =\n      \"sets the surrounding text\\n\\nSets the surrounding plain text around the input, excluding the preedit\\ntext.\\n\\nThe client should notify the compositor of any changes in any of the\\nvalues carried with this request, including changes caused by handling\\nincoming text-input events as well as changes caused by other\\nmechanisms like keyboard typing.\\n\\nIf the client is unaware of the text around the cursor, it should not\\nissue this request, to signify lack of support to the compositor.\\n\\nText is UTF-8 encoded, and should include the cursor position, the\\ncomplete selection and additional characters before and after them.\\nThere is a maximum length of wayland messages, so text can not be\\nlonger than 4000 bytes.\\n\\nCursor is the byte offset of the cursor within text buffer.\\n\\nAnchor is the byte offset of the selection anchor within text buffer.\\nIf there is no selected text, anchor is the same as cursor.\\n\\nIf any preedit text is present, it is replaced with a cursor for the\\npurpose of this event.\\n\\nValues set with this request are double-buffered. They will get applied\\non the next zwp_text_input_v3.commit request, and stay valid until the\\nnext committed enable or disable request.\\n\\nThe initial state for affected fields is empty, meaning that the text\\ninput does not support sending surrounding text. If the empty values\\nget applied, subsequent attempts to change them may have no effect.\"]\n    SetSurroundingText {\n        text: String,\n        cursor: i32,\n        anchor: i32,\n    },\n\n    #[doc =\n      \"indicates the cause of surrounding text change\\n\\nTells the compositor why the text surrounding the cursor changed.\\n\\nWhenever the client detects an external change in text, cursor, or\\nanchor posision, it must issue this request to the compositor. This\\nrequest is intended to give the input method a chance to update the\\npreedit text in an appropriate way, e.g. by removing it when the user\\nstarts typing with a keyboard.\\n\\ncause describes the source of the change.\\n\\nThe value set with this request is double-buffered. It must be applied\\nand reset to initial at the next zwp_text_input_v3.commit request.\\n\\nThe initial value of cause is input_method.\"]\n    SetTextChangeCause {\n        cause: ChangeCause,\n    },\n\n    #[doc =\n      \"set content purpose and hint\\n\\nSets the content purpose and content hint. While the purpose is the\\nbasic purpose of an input field, the hint flags allow to modify some of\\nthe behavior.\\n\\nValues set with this request are double-buffered. They will get applied\\non the next zwp_text_input_v3.commit request.\\nSubsequent attempts to update them may have no effect. The values\\nremain valid until the next committed enable or disable request.\\n\\nThe initial value for hint is none, and the initial value for purpose\\nis normal.\"]\n    SetContentType {\n        hint: ContentHint,\n        purpose: ContentPurpose,\n    },\n\n    #[doc =\n      \"set cursor position\\n\\nMarks an area around the cursor as a x, y, width, height rectangle in\\nsurface local coordinates.\\n\\nAllows the compositor to put a window with word suggestions near the\\ncursor, without obstructing the text being input.\\n\\nIf the client is unaware of the position of edited text, it should not\\nissue this request, to signify lack of support to the compositor.\\n\\nValues set with this request are double-buffered. They will get applied\\non the next zwp_text_input_v3.commit request, and stay valid until the\\nnext committed enable or disable request.\\n\\nThe initial values describing a cursor rectangle are empty. That means\\nthe text input does not support describing the cursor area. If the\\nempty values get applied, subsequent attempts to change them may have\\nno effect.\"]\n    SetCursorRectangle {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"commit state\\n\\nAtomically applies state changes recently sent to the compositor.\\n\\nThe commit request establishes and updates the state of the client, and\\nmust be issued after any changes to apply them.\\n\\nText input state (enabled status, content purpose, content hint,\\nsurrounding text and change cause, cursor rectangle) is conceptually\\ndouble-buffered within the context of a text input, i.e. between a\\ncommitted enable request and the following committed enable or disable\\nrequest.\\n\\nProtocol requests modify the pending state, as opposed to the current\\nstate in use by the input method. A commit request atomically applies\\nall pending state, replacing the current state. After commit, the new\\npending state is as documented for each related request.\\n\\nRequests are applied in the order of arrival.\\n\\nNeither current nor pending state are modified unless noted otherwise.\\n\\nThe compositor must count the number of commit requests coming from\\neach zwp_text_input_v3 object and use the count as the serial in done\\nevents.\"]\n    Commit,\n}","parent":null,"children":[{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5138},{"krate":0,"index":5142},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5176},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8252881,"byte_end":8252886,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"Enter","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event::Enter","value":"Event::Enter { surface }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"enter event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5178},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8253353,"byte_end":8253358,"line_start":349,"line_end":349,"column_start":9,"column_end":14},"name":"Leave","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event::Leave","value":"Event::Leave { surface }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"leave event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5180},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8254262,"byte_end":8254275,"line_start":353,"line_end":353,"column_start":9,"column_end":22},"name":"PreeditString","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event::PreeditString","value":"Event::PreeditString { text, cursor_begin, cursor_end }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"pre-edit","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5184},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8254793,"byte_end":8254805,"line_start":359,"line_end":359,"column_start":9,"column_end":21},"name":"CommitString","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event::CommitString","value":"Event::CommitString { text }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"text commit","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5186},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8255457,"byte_end":8255478,"line_start":361,"line_end":361,"column_start":9,"column_end":30},"name":"DeleteSurroundingText","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event::DeleteSurroundingText","value":"Event::DeleteSurroundingText { before_length, after_length }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"delete surrounding text","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5189},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8256678,"byte_end":8256682,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event::Done","value":"Event::Done { serial }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"apply changes","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5175},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8252600,"byte_end":8252605,"line_start":343,"line_end":343,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::Event","value":"pub enum Event {\n\n    #[doc =\n      \"enter event\\n\\nNotification that this seat's text-input focus is on a certain surface.\\n\\nWhen the seat has the keyboard capability the text-input focus follows\\nthe keyboard focus. This event sets the current surface for the\\ntext-input object.\"]\n    Enter {\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"leave event\\n\\nNotification that this seat's text-input focus is no longer on a\\ncertain surface. The client should reset any preedit string previously\\nset.\\n\\nThe leave notification clears the current surface. It is sent before\\nthe enter notification for the new focus.\\n\\nWhen the seat has the keyboard capability the text-input focus follows\\nthe keyboard focus.\"]\n    Leave {\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"pre-edit\\n\\nNotify when a new composing text (pre-edit) should be set at the\\ncurrent cursor position. Any previously set composing text must be\\nremoved. Any previously existing selected text must be removed.\\n\\nThe argument text contains the pre-edit string buffer.\\n\\nThe parameters cursor_begin and cursor_end are counted in bytes\\nrelative to the beginning of the submitted text buffer. Cursor should\\nbe hidden when both are equal to -1.\\n\\nThey could be represented by the client as a line if both values are\\nthe same, or as a text highlight otherwise.\\n\\nValues set with this event are double-buffered. They must be applied\\nand reset to initial on the next zwp_text_input_v3.done event.\\n\\nThe initial value of text is an empty string, and cursor_begin,\\ncursor_end and cursor_hidden are all 0.\"]\n    PreeditString {\n        text: Option<String>,\n        cursor_begin: i32,\n        cursor_end: i32,\n    },\n\n    #[doc =\n      \"text commit\\n\\nNotify when text should be inserted into the editor widget. The text to\\ncommit could be either just a single character after a key press or the\\nresult of some composing (pre-edit).\\n\\nValues set with this event are double-buffered. They must be applied\\nand reset to initial on the next zwp_text_input_v3.done event.\\n\\nThe initial value of text is an empty string.\"]\n    CommitString {\n        text: Option<String>,\n    },\n\n    #[doc =\n      \"delete surrounding text\\n\\nNotify when the text around the current cursor position should be\\ndeleted.\\n\\nBefore_length and after_length are the number of bytes before and after\\nthe current cursor index (excluding the selection) to delete.\\n\\nIf a preedit text is present, in effect before_length is counted from\\nthe beginning of it, and after_length from its end (see done event\\nsequence).\\n\\nValues set with this event are double-buffered. They must be applied\\nand reset to initial on the next zwp_text_input_v3.done event.\\n\\nThe initial values of both before_length and after_length are 0.\"]\n    DeleteSurroundingText {\n        before_length: u32,\n        after_length: u32,\n    },\n\n    #[doc =\n      \"apply changes\\n\\nInstruct the application to apply changes to state requested by the\\npreedit_string, commit_string and delete_surrounding_text events. The\\nstate relating to these events is double-buffered, and each one\\nmodifies the pending state. This event replaces the current state with\\nthe pending state.\\n\\nThe application must proceed by evaluating the changes in the following\\norder:\\n\\n1. Replace existing preedit string with the cursor.\\n2. Delete requested surrounding text.\\n3. Insert commit string with the cursor at its end.\\n4. Calculate surrounding text to send.\\n5. Insert new preedit text in cursor position.\\n6. Place cursor inside preedit text.\\n\\nThe serial number reflects the last state of the zwp_text_input_v3\\nobject known to the compositor. The value of the serial argument must\\nbe equal to the number of commit requests already issued on that object.\\nWhen the client receives a done event with a serial different than the\\nnumber of past commit requests, it must proceed as normal, except it\\nshould not change the current state of the zwp_text_input_v3 object.\"]\n    Done {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":5176},{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5206},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8266309,"byte_end":8266323,"line_start":618,"line_end":618,"column_start":16,"column_end":30},"name":"ZwpTextInputV3","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::ZwpTextInputV3","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5214},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8266673,"byte_end":8266686,"line_start":628,"line_end":628,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5215},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8266957,"byte_end":8266964,"line_start":630,"line_end":630,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"Destroy the wp_text_input","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5216},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8268060,"byte_end":8268066,"line_start":632,"line_end":632,"column_start":12,"column_end":18},"name":"enable","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::enable","value":"pub fn enable(&Self) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"Request text input to be enabled","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8268391,"byte_end":8268398,"line_start":634,"line_end":634,"column_start":12,"column_end":19},"name":"disable","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::disable","value":"pub fn disable(&Self) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"Disable text input on a surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5218},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8269858,"byte_end":8269878,"line_start":636,"line_end":636,"column_start":12,"column_end":32},"name":"set_surrounding_text","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::set_surrounding_text","value":"pub fn set_surrounding_text(&Self, String, i32, i32) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"sets the surrounding text","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8270624,"byte_end":8270645,"line_start":638,"line_end":638,"column_start":12,"column_end":33},"name":"set_text_change_cause","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::set_text_change_cause","value":"pub fn set_text_change_cause(&Self, ChangeCause) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"indicates the cause of surrounding text change","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8271238,"byte_end":8271254,"line_start":640,"line_end":640,"column_start":12,"column_end":28},"name":"set_content_type","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::set_content_type","value":"pub fn set_content_type(&Self, ContentHint, ContentPurpose) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"set content purpose and hint","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8272143,"byte_end":8272163,"line_start":642,"line_end":642,"column_start":12,"column_end":32},"name":"set_cursor_rectangle","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::set_cursor_rectangle","value":"pub fn set_cursor_rectangle(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"set cursor position","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8273290,"byte_end":8273296,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"commit","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::RequestsTrait::commit","value":"pub fn commit(&Self) -> ()","parent":{"krate":0,"index":5214},"children":[],"decl_id":null,"docs":"commit state","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5232},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8274907,"byte_end":8274924,"line_start":693,"line_end":693,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5233},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275020,"byte_end":8275036,"line_start":695,"line_end":695,"column_start":15,"column_end":31},"name":"REQ_ENABLE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_ENABLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5234},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275132,"byte_end":8275149,"line_start":697,"line_end":697,"column_start":15,"column_end":32},"name":"REQ_DISABLE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_DISABLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5235},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275245,"byte_end":8275275,"line_start":699,"line_end":699,"column_start":15,"column_end":45},"name":"REQ_SET_SURROUNDING_TEXT_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_SET_SURROUNDING_TEXT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5236},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275371,"byte_end":8275402,"line_start":701,"line_end":701,"column_start":15,"column_end":46},"name":"REQ_SET_TEXT_CHANGE_CAUSE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_SET_TEXT_CHANGE_CAUSE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5237},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275498,"byte_end":8275524,"line_start":703,"line_end":703,"column_start":15,"column_end":41},"name":"REQ_SET_CONTENT_TYPE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_SET_CONTENT_TYPE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5238},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275620,"byte_end":8275650,"line_start":705,"line_end":705,"column_start":15,"column_end":45},"name":"REQ_SET_CURSOR_RECTANGLE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_SET_CURSOR_RECTANGLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5239},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275746,"byte_end":8275762,"line_start":707,"line_end":707,"column_start":15,"column_end":31},"name":"REQ_COMMIT_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::REQ_COMMIT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5240},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275856,"byte_end":8275871,"line_start":709,"line_end":709,"column_start":15,"column_end":30},"name":"EVT_ENTER_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::EVT_ENTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5241},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8275965,"byte_end":8275980,"line_start":711,"line_end":711,"column_start":15,"column_end":30},"name":"EVT_LEAVE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::EVT_LEAVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5242},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8276074,"byte_end":8276098,"line_start":713,"line_end":713,"column_start":15,"column_end":39},"name":"EVT_PREEDIT_STRING_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::EVT_PREEDIT_STRING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5243},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8276192,"byte_end":8276215,"line_start":715,"line_end":715,"column_start":15,"column_end":38},"name":"EVT_COMMIT_STRING_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::EVT_COMMIT_STRING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5244},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8276309,"byte_end":8276342,"line_start":717,"line_end":717,"column_start":15,"column_end":48},"name":"EVT_DELETE_SURROUNDING_TEXT_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::EVT_DELETE_SURROUNDING_TEXT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5245},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8276436,"byte_end":8276450,"line_start":719,"line_end":719,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_v3::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5246},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8276576,"byte_end":8276601,"line_start":722,"line_end":722,"column_start":9,"column_end":34},"name":"zwp_text_input_manager_v3","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":13711},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5270},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5299},{"krate":0,"index":5301},{"krate":0,"index":5307},{"krate":0,"index":5311},{"krate":0,"index":5315},{"krate":0,"index":5316}],"decl_id":null,"docs":"text input manager","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5265},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8277074,"byte_end":8277081,"line_start":731,"line_end":731,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5264},"children":[],"decl_id":null,"docs":"Destroy the wp_text_input_manager","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5267},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8277194,"byte_end":8277206,"line_start":733,"line_end":733,"column_start":9,"column_end":21},"name":"GetTextInput","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::Request::GetTextInput","value":"Request::GetTextInput { id, seat }","parent":{"krate":0,"index":5264},"children":[],"decl_id":null,"docs":"create a new text input object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5264},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8276884,"byte_end":8276891,"line_start":729,"line_end":729,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::Request","value":"pub enum Request {\n\n    #[doc =\n      \"Destroy the wp_text_input_manager\\n\\nDestroy the wp_text_input_manager object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a new text input object\\n\\nCreates a new text-input object for a given seat.\"]\n    GetTextInput {\n        id: Proxy<super::zwp_text_input_v3::ZwpTextInputV3>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n}","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5267}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5285},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8280199,"byte_end":8280204,"line_start":818,"line_end":818,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5299},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8281504,"byte_end":8281525,"line_start":861,"line_end":861,"column_start":16,"column_end":37},"name":"ZwpTextInputManagerV3","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::ZwpTextInputManagerV3","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5307},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8281898,"byte_end":8281911,"line_start":871,"line_end":871,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8282127,"byte_end":8282134,"line_start":873,"line_end":873,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":5307},"children":[],"decl_id":null,"docs":"Destroy the wp_text_input_manager","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8282263,"byte_end":8282277,"line_start":875,"line_end":875,"column_start":12,"column_end":26},"name":"get_text_input","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::RequestsTrait::get_text_input","value":"pub fn get_text_input<F>(&Self, &Proxy<super::wl_seat::WlSeat>, F)\n-> Result<Proxy<super::zwp_text_input_v3::ZwpTextInputV3>, ()> where\nF: FnOnce(NewProxy<super::zwp_text_input_v3::ZwpTextInputV3>) ->\nProxy<super::zwp_text_input_v3::ZwpTextInputV3>","parent":{"krate":0,"index":5307},"children":[],"decl_id":null,"docs":"create a new text input object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5315},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8283479,"byte_end":8283496,"line_start":908,"line_end":908,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5316},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8283592,"byte_end":8283616,"line_start":910,"line_end":910,"column_start":15,"column_end":39},"name":"REQ_GET_TEXT_INPUT_SINCE","qualname":"::unstable::text_input::v3::generated::client::zwp_text_input_manager_v3::REQ_GET_TEXT_INPUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":24},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17123,"byte_end":17137,"line_start":297,"line_end":297,"column_start":9,"column_end":23},"name":"xdg_decoration","qualname":"::unstable::xdg_decoration","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":5519}],"decl_id":null,"docs":" This interface allows a compositor to announce support for server-side\n decorations.\n A window decoration is a set of window controls as deemed appropriate by\n the party managing them, such as user interface components used to move,\n resize and change a window's state.\n A client can use this protocol to request being decorated by a supporting\n compositor.\n If compositor and client do not negotiate the use of a server-side\n decoration using this protocol, clients continue to self-decorate as they\n see fit.\n","sig":null,"attributes":[{"value":"! This interface allows a compositor to announce support for server-side","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17144,"byte_end":17218,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"! decorations.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17223,"byte_end":17239,"line_start":299,"line_end":299,"column_start":5,"column_end":21}},{"value":"! A window decoration is a set of window controls as deemed appropriate by","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17245,"byte_end":17321,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"! the party managing them, such as user interface components used to move,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17326,"byte_end":17402,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"! resize and change a window's state.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17407,"byte_end":17446,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"! A client can use this protocol to request being decorated by a supporting","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17452,"byte_end":17529,"line_start":305,"line_end":305,"column_start":5,"column_end":82}},{"value":"! compositor.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17534,"byte_end":17549,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"! If compositor and client do not negotiate the use of a server-side","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17555,"byte_end":17625,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"! decoration using this protocol, clients continue to self-decorate as they","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17630,"byte_end":17707,"line_start":309,"line_end":309,"column_start":5,"column_end":82}},{"value":"! see fit.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17712,"byte_end":17724,"line_start":310,"line_end":310,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":5519},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::xdg_decoration::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":5555},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_interfaces.rs","byte_start":8284102,"byte_end":8284137,"line_start":10,"line_end":10,"column_start":16,"column_end":51},"name":"zxdg_decoration_manager_v1_requests","qualname":"::unstable::xdg_decoration::v1::generated::c_interfaces::zxdg_decoration_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5557},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_interfaces.rs","byte_start":8284648,"byte_end":8284684,"line_start":24,"line_end":24,"column_start":16,"column_end":52},"name":"zxdg_decoration_manager_v1_interface","qualname":"::unstable::xdg_decoration::v1::generated::c_interfaces::zxdg_decoration_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5558},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_interfaces.rs","byte_start":8284982,"byte_end":8285018,"line_start":32,"line_end":32,"column_start":16,"column_end":52},"name":"zxdg_toplevel_decoration_v1_requests","qualname":"::unstable::xdg_decoration::v1::generated::c_interfaces::zxdg_toplevel_decoration_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5560},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_interfaces.rs","byte_start":8285630,"byte_end":8285664,"line_start":49,"line_end":49,"column_start":16,"column_end":50},"name":"zxdg_toplevel_decoration_v1_events","qualname":"::unstable::xdg_decoration::v1::generated::c_interfaces::zxdg_toplevel_decoration_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5562},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_interfaces.rs","byte_start":8285873,"byte_end":8285910,"line_start":54,"line_end":54,"column_start":16,"column_end":53},"name":"zxdg_toplevel_decoration_v1_interface","qualname":"::unstable::xdg_decoration::v1::generated::c_interfaces::zxdg_toplevel_decoration_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5563},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8287321,"byte_end":8287347,"line_start":2,"line_end":2,"column_start":9,"column_end":35},"name":"zxdg_decoration_manager_v1","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":13777},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5587},{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5624},{"krate":0,"index":5628},{"krate":0,"index":5632},{"krate":0,"index":5633}],"decl_id":null,"docs":"window decoration manager","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5582},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8287870,"byte_end":8287877,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5581},"children":[],"decl_id":null,"docs":"destroy the decoration manager object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5584},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8288293,"byte_end":8288314,"line_start":13,"line_end":13,"column_start":9,"column_end":30},"name":"GetToplevelDecoration","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::Request::GetToplevelDecoration","value":"Request::GetToplevelDecoration { id, toplevel }","parent":{"krate":0,"index":5581},"children":[],"decl_id":null,"docs":"create a new toplevel decoration object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5581},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8287630,"byte_end":8287637,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the decoration manager object\\n\\nDestroy the decoration manager. This doesn't destroy objects created\\nwith the manager.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a new toplevel decoration object\\n\\nCreate a new decoration object associated with the given toplevel.\\n\\nCreating an xdg_toplevel_decoration from an xdg_toplevel which has a\\nbuffer attached or committed is a client error, and any attempts by a\\nclient to attach or manipulate a buffer prior to the first\\nxdg_toplevel_decoration.configure event must also be treated as\\nerrors.\"]\n    GetToplevelDecoration {\n        id: Proxy<super::zxdg_toplevel_decoration_v1::ZxdgToplevelDecorationV1>,\n        toplevel: Proxy<super::xdg_toplevel::XdgToplevel>,\n    },\n}","parent":null,"children":[{"krate":0,"index":5582},{"krate":0,"index":5584}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5602},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8291413,"byte_end":8291418,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5616},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8292718,"byte_end":8292741,"line_start":141,"line_end":141,"column_start":16,"column_end":39},"name":"ZxdgDecorationManagerV1","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::ZxdgDecorationManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5624},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8293118,"byte_end":8293131,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":5625},{"krate":0,"index":5626}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8293397,"byte_end":8293404,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":5624},"children":[],"decl_id":null,"docs":"destroy the decoration manager object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5626},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8293836,"byte_end":8293859,"line_start":155,"line_end":155,"column_start":12,"column_end":35},"name":"get_toplevel_decoration","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::RequestsTrait::get_toplevel_decoration","value":"pub fn get_toplevel_decoration<F>(&Self,\n                                  &Proxy<super::xdg_toplevel::XdgToplevel>, F)\n->\n    Result<Proxy<super::zxdg_toplevel_decoration_v1::ZxdgToplevelDecorationV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zxdg_toplevel_decoration_v1::ZxdgToplevelDecorationV1>)\n-> Proxy<super::zxdg_toplevel_decoration_v1::ZxdgToplevelDecorationV1>","parent":{"krate":0,"index":5624},"children":[],"decl_id":null,"docs":"create a new toplevel decoration object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5632},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8295269,"byte_end":8295286,"line_start":190,"line_end":190,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5633},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8295382,"byte_end":8295415,"line_start":192,"line_end":192,"column_start":15,"column_end":48},"name":"REQ_GET_TOPLEVEL_DECORATION_SINCE","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_decoration_manager_v1::REQ_GET_TOPLEVEL_DECORATION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5634},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8295737,"byte_end":8295764,"line_start":195,"line_end":195,"column_start":9,"column_end":36},"name":"zxdg_toplevel_decoration_v1","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":13805},{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5644},{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5717},{"krate":0,"index":5734},{"krate":0,"index":5732},{"krate":0,"index":5730},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5652},{"krate":0,"index":5735},{"krate":0,"index":5749},{"krate":0,"index":5747},{"krate":0,"index":5745},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5665},{"krate":0,"index":5681},{"krate":0,"index":5684},{"krate":0,"index":5697},{"krate":0,"index":5699},{"krate":0,"index":5705},{"krate":0,"index":5709},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5716}],"decl_id":null,"docs":"decoration object for a toplevel surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5718},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296196,"byte_end":8296214,"line_start":206,"line_end":206,"column_start":9,"column_end":27},"name":"UnconfiguredBuffer","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Error::UnconfiguredBuffer","value":"Error::UnconfiguredBuffer","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":"xdg_toplevel has a buffer attached before configure\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5721},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296292,"byte_end":8296310,"line_start":208,"line_end":208,"column_start":9,"column_end":27},"name":"AlreadyConstructed","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Error::AlreadyConstructed","value":"Error::AlreadyConstructed","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":"xdg_toplevel already has a decoration object\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5724},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296395,"byte_end":8296403,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"name":"Orphaned","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Error::Orphaned","value":"Error::Orphaned","parent":{"krate":0,"index":5717},"children":[],"decl_id":null,"docs":"xdg_toplevel destroyed before the decoration object\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5717},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296109,"byte_end":8296114,"line_start":204,"line_end":204,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Error","value":"pub enum Error {\n\n    #[doc = \"xdg_toplevel has a buffer attached before configure\"]\n    UnconfiguredBuffer = ,\n\n    #[doc = \"xdg_toplevel already has a decoration object\"]\n    AlreadyConstructed = ,\n\n    #[doc = \"xdg_toplevel destroyed before the decoration object\"]\n    Orphaned = ,\n}","parent":null,"children":[{"krate":0,"index":5718},{"krate":0,"index":5721},{"krate":0,"index":5724}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296038,"byte_end":8296050,"line_start":202,"line_end":202,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5653},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296447,"byte_end":8296455,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5654},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296731,"byte_end":8296737,"line_start":221,"line_end":221,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5736},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297026,"byte_end":8297036,"line_start":230,"line_end":230,"column_start":9,"column_end":19},"name":"ClientSide","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Mode::ClientSide","value":"Mode::ClientSide","parent":{"krate":0,"index":5735},"children":[],"decl_id":null,"docs":"no server-side window decoration\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5739},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297099,"byte_end":8297109,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"name":"ServerSide","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Mode::ServerSide","value":"Mode::ServerSide","parent":{"krate":0,"index":5735},"children":[],"decl_id":null,"docs":"server-side window decoration\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5735},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296959,"byte_end":8296963,"line_start":228,"line_end":228,"column_start":14,"column_end":18},"name":"Mode","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Mode","value":"pub enum Mode {\n\n    #[doc = \"no server-side window decoration\"]\n    ClientSide = ,\n\n    #[doc = \"server-side window decoration\"]\n    ServerSide = ,\n}","parent":null,"children":[{"krate":0,"index":5736},{"krate":0,"index":5739}],"decl_id":null,"docs":"window decoration modes","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296888,"byte_end":8296900,"line_start":226,"line_end":226,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5656},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297152,"byte_end":8297160,"line_start":235,"line_end":235,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Mode>::from_raw","value":"pub fn from_raw(u32) -> Option<Mode>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5657},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297373,"byte_end":8297379,"line_start":242,"line_end":242,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Mode>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5659},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297673,"byte_end":8297680,"line_start":248,"line_end":248,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5658},"children":[],"decl_id":null,"docs":"destroy the decoration object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5661},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8298688,"byte_end":8298695,"line_start":250,"line_end":250,"column_start":9,"column_end":16},"name":"SetMode","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Request::SetMode","value":"Request::SetMode { mode }","parent":{"krate":0,"index":5658},"children":[],"decl_id":null,"docs":"set the decoration mode","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5663},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8298954,"byte_end":8298963,"line_start":252,"line_end":252,"column_start":9,"column_end":18},"name":"UnsetMode","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Request::UnsetMode","value":"Request::UnsetMode","parent":{"krate":0,"index":5658},"children":[],"decl_id":null,"docs":"unset the decoration mode","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5658},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297450,"byte_end":8297457,"line_start":246,"line_end":246,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the decoration object\\n\\nSwitch back to a mode without any server-side decorations at the next\\ncommit.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the decoration mode\\n\\nSet the toplevel surface decoration mode. This informs the compositor\\nthat the client prefers the provided decoration mode.\\n\\nAfter requesting a decoration mode, the compositor will respond by\\nemitting a xdg_surface.configure event. The client should then update\\nits content, drawing it without decorations if the received mode is\\nserver-side decorations. The client must also acknowledge the configure\\nwhen committing the new content (see xdg_surface.ack_configure).\\n\\nThe compositor can decide not to use the client's mode and enforce a\\ndifferent mode instead.\\n\\nClients whose decoration mode depend on the xdg_toplevel state may send\\na set_mode request in response to a xdg_surface.configure event and wait\\nfor the next xdg_surface.configure event to prevent unwanted state.\\nSuch clients are responsible for preventing configure loops and must\\nmake sure not to send multiple successive set_mode requests with the\\nsame decoration mode.\"]\n    SetMode {\n        mode: Mode,\n    },\n\n    #[doc =\n      \"unset the decoration mode\\n\\nUnset the toplevel surface decoration mode. This informs the compositor\\nthat the client doesn't prefer a particular decoration mode.\\n\\nThis request has the same semantics as set_mode.\"]\n    UnsetMode,\n}","parent":null,"children":[{"krate":0,"index":5659},{"krate":0,"index":5661},{"krate":0,"index":5663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5682},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8302487,"byte_end":8302496,"line_start":347,"line_end":347,"column_start":9,"column_end":18},"name":"Configure","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Event::Configure","value":"Event::Configure { mode }","parent":{"krate":0,"index":5681},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5681},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8302071,"byte_end":8302076,"line_start":345,"line_end":345,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThe configure event asks the client to change its decoration mode. The\\nconfigured state should not be applied immediately. Clients must send an\\nack_configure in response to this event. See xdg_surface.configure and\\nxdg_surface.ack_configure for details.\\n\\nA configure event can be sent at any time. The specified mode must be\\nobeyed by the client.\"]\n    Configure {\n        mode: Mode,\n    },\n}","parent":null,"children":[{"krate":0,"index":5682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5697},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8304774,"byte_end":8304798,"line_start":417,"line_end":417,"column_start":16,"column_end":40},"name":"ZxdgToplevelDecorationV1","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::ZxdgToplevelDecorationV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5705},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8305178,"byte_end":8305191,"line_start":427,"line_end":427,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5706},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8305440,"byte_end":8305447,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":5705},"children":[],"decl_id":null,"docs":"destroy the decoration object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5707},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8306471,"byte_end":8306479,"line_start":431,"line_end":431,"column_start":12,"column_end":20},"name":"set_mode","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::RequestsTrait::set_mode","value":"pub fn set_mode(&Self, Mode) -> ()","parent":{"krate":0,"index":5705},"children":[],"decl_id":null,"docs":"set the decoration mode","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5708},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8306751,"byte_end":8306761,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"unset_mode","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::RequestsTrait::unset_mode","value":"pub fn unset_mode(&Self) -> ()","parent":{"krate":0,"index":5705},"children":[],"decl_id":null,"docs":"unset the decoration mode","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5713},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8307300,"byte_end":8307317,"line_start":450,"line_end":450,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5714},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8307413,"byte_end":8307431,"line_start":452,"line_end":452,"column_start":15,"column_end":33},"name":"REQ_SET_MODE_SINCE","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::REQ_SET_MODE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5715},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8307527,"byte_end":8307547,"line_start":454,"line_end":454,"column_start":15,"column_end":35},"name":"REQ_UNSET_MODE_SINCE","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::REQ_UNSET_MODE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5716},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8307641,"byte_end":8307660,"line_start":456,"line_end":456,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::unstable::xdg_decoration::v1::generated::client::zxdg_toplevel_decoration_v1::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17911,"byte_end":17922,"line_start":322,"line_end":322,"column_start":9,"column_end":20},"name":"xdg_foreign","qualname":"::unstable::xdg_foreign","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":5750},{"krate":0,"index":5751}],"decl_id":null,"docs":" Protocol for exporting xdg surface handles","sig":null,"attributes":[{"value":"! Protocol for exporting xdg surface handles","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17929,"byte_end":17975,"line_start":323,"line_end":323,"column_start":5,"column_end":51}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17980,"byte_end":17983,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"! This protocol specifies a way for making it possible to reference a surface","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17988,"byte_end":18067,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"! of a different client. With such a reference, a client can, by using the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18072,"byte_end":18148,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"! interfaces provided by this protocol, manipulate the relationship between","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18153,"byte_end":18230,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"! its own surfaces and the surface of some other client. For example, stack","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18235,"byte_end":18312,"line_start":328,"line_end":328,"column_start":5,"column_end":82}},{"value":"! some of its own surface above the other clients surface.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18317,"byte_end":18377,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18382,"byte_end":18385,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"! In order for a client A to get a reference of a surface of client B, client","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18390,"byte_end":18469,"line_start":331,"line_end":331,"column_start":5,"column_end":84}},{"value":"! B must first export its surface using xdg_exporter.export. Upon doing this,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18474,"byte_end":18553,"line_start":332,"line_end":332,"column_start":5,"column_end":84}},{"value":"! client B will receive a handle (a unique string) that it may share with","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18558,"byte_end":18633,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"! client A in some way (for example D-Bus). After client A has received the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18638,"byte_end":18715,"line_start":334,"line_end":334,"column_start":5,"column_end":82}},{"value":"! handle from client B, it may use xdg_importer.import to create a reference","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18720,"byte_end":18798,"line_start":335,"line_end":335,"column_start":5,"column_end":83}},{"value":"! to the surface client B just exported. See the corresponding requests for","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18803,"byte_end":18880,"line_start":336,"line_end":336,"column_start":5,"column_end":82}},{"value":"! details.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18885,"byte_end":18897,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18902,"byte_end":18905,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"! A possible use case for this is out-of-process dialogs. For example when a","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18910,"byte_end":18988,"line_start":339,"line_end":339,"column_start":5,"column_end":83}},{"value":"! sandboxed client without file system access needs the user to select a file","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":18993,"byte_end":19072,"line_start":340,"line_end":340,"column_start":5,"column_end":84}},{"value":"! on the file system, given sandbox environment support, it can export its","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19077,"byte_end":19153,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"! surface, passing the exported surface handle to an unsandboxed process that","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19158,"byte_end":19237,"line_start":342,"line_end":342,"column_start":5,"column_end":84}},{"value":"! can show a file browser dialog and stack it above the sandboxed client's","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19242,"byte_end":19318,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"! surface.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19323,"byte_end":19335,"line_start":344,"line_end":344,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":5750},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::xdg_foreign::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":5787},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8308102,"byte_end":8308127,"line_start":9,"line_end":9,"column_start":16,"column_end":41},"name":"zxdg_exporter_v1_requests","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_exporter_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5789},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8308574,"byte_end":8308600,"line_start":21,"line_end":21,"column_start":16,"column_end":42},"name":"zxdg_exporter_v1_interface","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_exporter_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5792},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8309064,"byte_end":8309089,"line_start":33,"line_end":33,"column_start":16,"column_end":41},"name":"zxdg_importer_v1_requests","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_importer_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5794},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8309536,"byte_end":8309562,"line_start":45,"line_end":45,"column_start":16,"column_end":42},"name":"zxdg_importer_v1_interface","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_importer_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5795},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8309840,"byte_end":8309865,"line_start":53,"line_end":53,"column_start":16,"column_end":41},"name":"zxdg_exported_v1_requests","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_exported_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5797},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8310071,"byte_end":8310094,"line_start":58,"line_end":58,"column_start":16,"column_end":39},"name":"zxdg_exported_v1_events","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_exported_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5799},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8310300,"byte_end":8310326,"line_start":63,"line_end":63,"column_start":16,"column_end":42},"name":"zxdg_exported_v1_interface","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_exported_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5802},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8310771,"byte_end":8310796,"line_start":73,"line_end":73,"column_start":16,"column_end":41},"name":"zxdg_imported_v1_requests","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_imported_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5804},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8311256,"byte_end":8311279,"line_start":85,"line_end":85,"column_start":16,"column_end":39},"name":"zxdg_imported_v1_events","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_imported_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":5806},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_interfaces.rs","byte_start":8311487,"byte_end":8311513,"line_start":90,"line_end":90,"column_start":16,"column_end":42},"name":"zxdg_imported_v1_interface","qualname":"::unstable::xdg_foreign::v1::generated::c_interfaces::zxdg_imported_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5807},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8311946,"byte_end":8311962,"line_start":2,"line_end":2,"column_start":9,"column_end":25},"name":"zxdg_exporter_v1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":13871},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5831},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5860},{"krate":0,"index":5862},{"krate":0,"index":5868},{"krate":0,"index":5872},{"krate":0,"index":5876},{"krate":0,"index":5877}],"decl_id":null,"docs":"interface for exporting surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5826},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8312467,"byte_end":8312474,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":"destroy the xdg_exporter object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5828},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8312951,"byte_end":8312957,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"Export","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::Request::Export","value":"Request::Export { id, surface }","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":"export a surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5825},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8312245,"byte_end":8312252,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_exporter object\\n\\nNotify the compositor that the xdg_exporter object will no longer be\\nused.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"export a surface\\n\\nThe export request exports the passed surface so that it can later be\\nimported via xdg_importer. When called, a new xdg_exported object will\\nbe created and xdg_exported.handle will be sent immediately. See the\\ncorresponding interface and event for details.\\n\\nA surface may be exported multiple times, and each exported handle may\\nbe used to create a xdg_imported multiple times. Only xdg_surface\\nsurfaces may be exported.\"]\n    Export {\n        id: Proxy<super::zxdg_exported_v1::ZxdgExportedV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":5826},{"krate":0,"index":5828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5846},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8315943,"byte_end":8315948,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5860},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8317248,"byte_end":8317262,"line_start":141,"line_end":141,"column_start":16,"column_end":30},"name":"ZxdgExporterV1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::ZxdgExporterV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5868},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8317610,"byte_end":8317623,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":5869},{"krate":0,"index":5870}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5869},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8317871,"byte_end":8317878,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":5868},"children":[],"decl_id":null,"docs":"destroy the xdg_exporter object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5870},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8318371,"byte_end":8318377,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"export","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::RequestsTrait::export","value":"pub fn export<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::zxdg_exported_v1::ZxdgExportedV1>, ()> where\nF: FnOnce(NewProxy<super::zxdg_exported_v1::ZxdgExportedV1>) ->\nProxy<super::zxdg_exported_v1::ZxdgExportedV1>","parent":{"krate":0,"index":5868},"children":[],"decl_id":null,"docs":"export a surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5876},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8319576,"byte_end":8319593,"line_start":188,"line_end":188,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5877},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8319689,"byte_end":8319705,"line_start":190,"line_end":190,"column_start":15,"column_end":31},"name":"REQ_EXPORT_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exporter_v1::REQ_EXPORT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5878},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8319936,"byte_end":8319952,"line_start":193,"line_end":193,"column_start":9,"column_end":25},"name":"zxdg_importer_v1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":13899},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5902},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5931},{"krate":0,"index":5933},{"krate":0,"index":5939},{"krate":0,"index":5943},{"krate":0,"index":5947},{"krate":0,"index":5948}],"decl_id":null,"docs":"interface for importing surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5897},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8320457,"byte_end":8320464,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5896},"children":[],"decl_id":null,"docs":"destroy the xdg_importer object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5899},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8320850,"byte_end":8320856,"line_start":204,"line_end":204,"column_start":9,"column_end":15},"name":"Import","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::Request::Import","value":"Request::Import { id, handle }","parent":{"krate":0,"index":5896},"children":[],"decl_id":null,"docs":"import a surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5896},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8320235,"byte_end":8320242,"line_start":200,"line_end":200,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_importer object\\n\\nNotify the compositor that the xdg_importer object will no longer be\\nused.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"import a surface\\n\\nThe import request imports a surface from any client given a handle\\nretrieved by exporting said surface using xdg_exporter.export. When\\ncalled, a new xdg_imported object will be created. This new object\\nrepresents the imported surface, and the importing client can\\nmanipulate its relationship using it. See xdg_imported for details.\"]\n    Import {\n        id: Proxy<super::zxdg_imported_v1::ZxdgImportedV1>,\n        handle: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":5897},{"krate":0,"index":5899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5917},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8324046,"byte_end":8324051,"line_start":295,"line_end":295,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5931},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8325351,"byte_end":8325365,"line_start":338,"line_end":338,"column_start":16,"column_end":30},"name":"ZxdgImporterV1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::ZxdgImporterV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5939},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8325713,"byte_end":8325726,"line_start":348,"line_end":348,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":5940},{"krate":0,"index":5941}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8325974,"byte_end":8325981,"line_start":350,"line_end":350,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"destroy the xdg_importer object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8326383,"byte_end":8326389,"line_start":352,"line_end":352,"column_start":12,"column_end":18},"name":"import","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::RequestsTrait::import","value":"pub fn import<F>(&Self, String, F)\n-> Result<Proxy<super::zxdg_imported_v1::ZxdgImportedV1>, ()> where\nF: FnOnce(NewProxy<super::zxdg_imported_v1::ZxdgImportedV1>) ->\nProxy<super::zxdg_imported_v1::ZxdgImportedV1>","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"import a surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5947},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8327516,"byte_end":8327533,"line_start":385,"line_end":385,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5948},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8327629,"byte_end":8327645,"line_start":387,"line_end":387,"column_start":15,"column_end":31},"name":"REQ_IMPORT_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_importer_v1::REQ_IMPORT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5949},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8327982,"byte_end":8327998,"line_start":390,"line_end":390,"column_start":9,"column_end":25},"name":"zxdg_exported_v1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":13927},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5970},{"krate":0,"index":5984},{"krate":0,"index":5987},{"krate":0,"index":6001},{"krate":0,"index":6003},{"krate":0,"index":6009},{"krate":0,"index":6011},{"krate":0,"index":6013},{"krate":0,"index":6014}],"decl_id":null,"docs":"an exported surface handle","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5968},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8328608,"byte_end":8328615,"line_start":399,"line_end":399,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":5967},"children":[],"decl_id":null,"docs":"unexport the exported surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5967},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8328281,"byte_end":8328288,"line_start":397,"line_end":397,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"unexport the exported surface\\n\\nRevoke the previously exported surface. This invalidates any\\nrelationship the importer may have set up using the xdg_imported created\\ngiven the handle sent via xdg_exported.handle.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":5968}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5985},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8330747,"byte_end":8330753,"line_start":460,"line_end":460,"column_start":9,"column_end":15},"name":"Handle","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::Event::Handle","value":"Event::Handle { handle }","parent":{"krate":0,"index":5984},"children":[],"decl_id":null,"docs":"the exported surface handle","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5984},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8330429,"byte_end":8330434,"line_start":458,"line_end":458,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"the exported surface handle\\n\\nThe handle event contains the unique handle of this exported surface\\nreference. It may be shared with any client, which then can use it to\\nimport the surface by calling xdg_importer.import. A handle may be\\nused to import the surface multiple times.\"]\n    Handle {\n        handle: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":5985}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6001},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8333303,"byte_end":8333317,"line_start":535,"line_end":535,"column_start":16,"column_end":30},"name":"ZxdgExportedV1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::ZxdgExportedV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6009},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8333665,"byte_end":8333678,"line_start":545,"line_end":545,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6010}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6010},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8334031,"byte_end":8334038,"line_start":547,"line_end":547,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6009},"children":[],"decl_id":null,"docs":"unexport the exported surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6013},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8334310,"byte_end":8334327,"line_start":556,"line_end":556,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6014},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8334421,"byte_end":8334437,"line_start":558,"line_end":558,"column_start":15,"column_end":31},"name":"EVT_HANDLE_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_exported_v1::EVT_HANDLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6015},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8334706,"byte_end":8334722,"line_start":561,"line_end":561,"column_start":9,"column_end":25},"name":"zxdg_imported_v1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":13955},{"krate":0,"index":6023},{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6038},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6069},{"krate":0,"index":6071},{"krate":0,"index":6077},{"krate":0,"index":6080},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"decl_id":null,"docs":"an imported surface handle","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6034},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8335305,"byte_end":8335312,"line_start":570,"line_end":570,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":"destroy the xdg_imported object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6036},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8335638,"byte_end":8335649,"line_start":572,"line_end":572,"column_start":9,"column_end":20},"name":"SetParentOf","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::Request::SetParentOf","value":"Request::SetParentOf { surface }","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":"set as the parent of some surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6033},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8335005,"byte_end":8335012,"line_start":568,"line_end":568,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_imported object\\n\\nNotify the compositor that it will no longer use the xdg_imported\\nobject. Any relationship that may have been set up will at this point\\nbe invalidated.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set as the parent of some surface\\n\\nSet the imported surface as the parent of some surface of the client.\\nThe passed surface must be a toplevel xdg_surface. Calling this function\\nsets up a surface to surface relation with the same stacking and positioning\\nsemantics as xdg_surface.set_parent.\"]\n    SetParentOf {\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6034},{"krate":0,"index":6036}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6054},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8338669,"byte_end":8338678,"line_start":654,"line_end":654,"column_start":9,"column_end":18},"name":"Destroyed","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::Event::Destroyed","value":"Event::Destroyed","parent":{"krate":0,"index":6053},"children":[],"decl_id":null,"docs":"the imported surface handle has been destroyed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6053},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8338314,"byte_end":8338319,"line_start":652,"line_end":652,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"the imported surface handle has been destroyed\\n\\nThe imported surface handle has been destroyed and any relationship set\\nup has been invalidated. This may happen for various reasons, for\\nexample if the exported surface or the exported surface handle has been\\ndestroyed, if the handle used for importing was invalid.\"]\n    Destroyed,\n}","parent":null,"children":[{"krate":0,"index":6054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6069},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8340272,"byte_end":8340286,"line_start":708,"line_end":708,"column_start":16,"column_end":30},"name":"ZxdgImportedV1","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::ZxdgImportedV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6077},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8340634,"byte_end":8340647,"line_start":718,"line_end":718,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6078},{"krate":0,"index":6079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6078},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8340973,"byte_end":8340980,"line_start":720,"line_end":720,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6077},"children":[],"decl_id":null,"docs":"destroy the xdg_imported object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6079},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8341322,"byte_end":8341335,"line_start":722,"line_end":722,"column_start":12,"column_end":25},"name":"set_parent_of","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::RequestsTrait::set_parent_of","value":"pub fn set_parent_of(&Self, &Proxy<super::wl_surface::WlSurface>) -> ()","parent":{"krate":0,"index":6077},"children":[],"decl_id":null,"docs":"set as the parent of some surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6083},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8341881,"byte_end":8341898,"line_start":737,"line_end":737,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6084},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8341994,"byte_end":8342017,"line_start":739,"line_end":739,"column_start":15,"column_end":38},"name":"REQ_SET_PARENT_OF_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::REQ_SET_PARENT_OF_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6085},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8342111,"byte_end":8342130,"line_start":741,"line_end":741,"column_start":15,"column_end":34},"name":"EVT_DESTROYED_SINCE","qualname":"::unstable::xdg_foreign::v1::generated::client::zxdg_imported_v1::EVT_DESTROYED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5751},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v2","qualname":"::unstable::xdg_foreign::v2","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":6121},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8342581,"byte_end":8342606,"line_start":9,"line_end":9,"column_start":16,"column_end":41},"name":"zxdg_exporter_v2_requests","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_exporter_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6123},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8343071,"byte_end":8343097,"line_start":21,"line_end":21,"column_start":16,"column_end":42},"name":"zxdg_exporter_v2_interface","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_exporter_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6126},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8343570,"byte_end":8343595,"line_start":33,"line_end":33,"column_start":16,"column_end":41},"name":"zxdg_importer_v2_requests","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_importer_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6128},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8344060,"byte_end":8344086,"line_start":45,"line_end":45,"column_start":16,"column_end":42},"name":"zxdg_importer_v2_interface","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_importer_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6129},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8344364,"byte_end":8344389,"line_start":53,"line_end":53,"column_start":16,"column_end":41},"name":"zxdg_exported_v2_requests","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_exported_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6131},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8344595,"byte_end":8344618,"line_start":58,"line_end":58,"column_start":16,"column_end":39},"name":"zxdg_exported_v2_events","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_exported_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6133},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8344824,"byte_end":8344850,"line_start":63,"line_end":63,"column_start":16,"column_end":42},"name":"zxdg_exported_v2_interface","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_exported_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6136},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8345295,"byte_end":8345320,"line_start":73,"line_end":73,"column_start":16,"column_end":41},"name":"zxdg_imported_v2_requests","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_imported_v2_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6138},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8345780,"byte_end":8345803,"line_start":85,"line_end":85,"column_start":16,"column_end":39},"name":"zxdg_imported_v2_events","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_imported_v2_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6140},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_interfaces.rs","byte_start":8346011,"byte_end":8346037,"line_start":90,"line_end":90,"column_start":16,"column_end":42},"name":"zxdg_imported_v2_interface","qualname":"::unstable::xdg_foreign::v2::generated::c_interfaces::zxdg_imported_v2_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6141},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8346470,"byte_end":8346486,"line_start":2,"line_end":2,"column_start":9,"column_end":25},"name":"zxdg_exporter_v2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6142},{"krate":0,"index":6143},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":14021},{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6165},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6194},{"krate":0,"index":6196},{"krate":0,"index":6202},{"krate":0,"index":6206},{"krate":0,"index":6210},{"krate":0,"index":6211}],"decl_id":null,"docs":"interface for exporting surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6160},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8346991,"byte_end":8346998,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":"destroy the xdg_exporter object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6162},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8347505,"byte_end":8347519,"line_start":13,"line_end":13,"column_start":9,"column_end":23},"name":"ExportToplevel","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::Request::ExportToplevel","value":"Request::ExportToplevel { id, surface }","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":"export a toplevel surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6159},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8346769,"byte_end":8346776,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_exporter object\\n\\nNotify the compositor that the xdg_exporter object will no longer be\\nused.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"export a toplevel surface\\n\\nThe export_toplevel request exports the passed surface so that it can later be\\nimported via xdg_importer. When called, a new xdg_exported object will\\nbe created and xdg_exported.handle will be sent immediately. See the\\ncorresponding interface and event for details.\\n\\nA surface may be exported multiple times, and each exported handle may\\nbe used to create a xdg_imported multiple times. Only xdg_toplevel\\nequivalent surfaces may be exported.\"]\n    ExportToplevel {\n        id: Proxy<super::zxdg_exported_v2::ZxdgExportedV2>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6160},{"krate":0,"index":6162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6180},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8350538,"byte_end":8350543,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8351843,"byte_end":8351857,"line_start":141,"line_end":141,"column_start":16,"column_end":30},"name":"ZxdgExporterV2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::ZxdgExporterV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6202},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8352205,"byte_end":8352218,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6203},{"krate":0,"index":6204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6203},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8352466,"byte_end":8352473,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6202},"children":[],"decl_id":null,"docs":"destroy the xdg_exporter object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6204},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8352996,"byte_end":8353011,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"export_toplevel","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::RequestsTrait::export_toplevel","value":"pub fn export_toplevel<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::zxdg_exported_v2::ZxdgExportedV2>, ()> where\nF: FnOnce(NewProxy<super::zxdg_exported_v2::ZxdgExportedV2>) ->\nProxy<super::zxdg_exported_v2::ZxdgExportedV2>","parent":{"krate":0,"index":6202},"children":[],"decl_id":null,"docs":"export a toplevel surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6210},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8354227,"byte_end":8354244,"line_start":188,"line_end":188,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6211},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8354340,"byte_end":8354365,"line_start":190,"line_end":190,"column_start":15,"column_end":40},"name":"REQ_EXPORT_TOPLEVEL_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exporter_v2::REQ_EXPORT_TOPLEVEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6212},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8354596,"byte_end":8354612,"line_start":193,"line_end":193,"column_start":9,"column_end":25},"name":"zxdg_importer_v2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6217},{"krate":0,"index":6218},{"krate":0,"index":6219},{"krate":0,"index":14049},{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6225},{"krate":0,"index":6226},{"krate":0,"index":6227},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6236},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6265},{"krate":0,"index":6267},{"krate":0,"index":6273},{"krate":0,"index":6277},{"krate":0,"index":6281},{"krate":0,"index":6282}],"decl_id":null,"docs":"interface for importing surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6231},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8355117,"byte_end":8355124,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6230},"children":[],"decl_id":null,"docs":"destroy the xdg_importer object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6233},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8355537,"byte_end":8355551,"line_start":204,"line_end":204,"column_start":9,"column_end":23},"name":"ImportToplevel","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::Request::ImportToplevel","value":"Request::ImportToplevel { id, handle }","parent":{"krate":0,"index":6230},"children":[],"decl_id":null,"docs":"import a toplevel surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6230},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8354895,"byte_end":8354902,"line_start":200,"line_end":200,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_importer object\\n\\nNotify the compositor that the xdg_importer object will no longer be\\nused.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"import a toplevel surface\\n\\nThe import_toplevel request imports a surface from any client given a handle\\nretrieved by exporting said surface using xdg_exporter.export_toplevel.\\nWhen called, a new xdg_imported object will be created. This new object\\nrepresents the imported surface, and the importing client can\\nmanipulate its relationship using it. See xdg_imported for details.\"]\n    ImportToplevel {\n        id: Proxy<super::zxdg_imported_v2::ZxdgImportedV2>,\n        handle: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":6231},{"krate":0,"index":6233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6251},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8358774,"byte_end":8358779,"line_start":295,"line_end":295,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6265},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8360079,"byte_end":8360093,"line_start":338,"line_end":338,"column_start":16,"column_end":30},"name":"ZxdgImporterV2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::ZxdgImporterV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6273},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8360441,"byte_end":8360454,"line_start":348,"line_end":348,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6274},{"krate":0,"index":6275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6274},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8360702,"byte_end":8360709,"line_start":350,"line_end":350,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"destroy the xdg_importer object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6275},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8361138,"byte_end":8361153,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"import_toplevel","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::RequestsTrait::import_toplevel","value":"pub fn import_toplevel<F>(&Self, String, F)\n-> Result<Proxy<super::zxdg_imported_v2::ZxdgImportedV2>, ()> where\nF: FnOnce(NewProxy<super::zxdg_imported_v2::ZxdgImportedV2>) ->\nProxy<super::zxdg_imported_v2::ZxdgImportedV2>","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"import a toplevel surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6281},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8362297,"byte_end":8362314,"line_start":385,"line_end":385,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6282},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8362410,"byte_end":8362435,"line_start":387,"line_end":387,"column_start":15,"column_end":40},"name":"REQ_IMPORT_TOPLEVEL_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_importer_v2::REQ_IMPORT_TOPLEVEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6283},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8362772,"byte_end":8362788,"line_start":390,"line_end":390,"column_start":9,"column_end":25},"name":"zxdg_exported_v2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":14077},{"krate":0,"index":6291},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6304},{"krate":0,"index":6318},{"krate":0,"index":6321},{"krate":0,"index":6335},{"krate":0,"index":6337},{"krate":0,"index":6343},{"krate":0,"index":6345},{"krate":0,"index":6347},{"krate":0,"index":6348}],"decl_id":null,"docs":"an exported surface handle","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6302},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8363398,"byte_end":8363405,"line_start":399,"line_end":399,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6301},"children":[],"decl_id":null,"docs":"unexport the exported surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6301},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8363071,"byte_end":8363078,"line_start":397,"line_end":397,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"unexport the exported surface\\n\\nRevoke the previously exported surface. This invalidates any\\nrelationship the importer may have set up using the xdg_imported created\\ngiven the handle sent via xdg_exported.handle.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":6302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6319},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8365546,"byte_end":8365552,"line_start":460,"line_end":460,"column_start":9,"column_end":15},"name":"Handle","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::Event::Handle","value":"Event::Handle { handle }","parent":{"krate":0,"index":6318},"children":[],"decl_id":null,"docs":"the exported surface handle","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6318},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8365219,"byte_end":8365224,"line_start":458,"line_end":458,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"the exported surface handle\\n\\nThe handle event contains the unique handle of this exported surface\\nreference. It may be shared with any client, which then can use it to\\nimport the surface by calling xdg_importer.import_toplevel. A handle\\nmay be used to import the surface multiple times.\"]\n    Handle {\n        handle: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":6319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6335},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368102,"byte_end":8368116,"line_start":535,"line_end":535,"column_start":16,"column_end":30},"name":"ZxdgExportedV2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::ZxdgExportedV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6343},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368464,"byte_end":8368477,"line_start":545,"line_end":545,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368830,"byte_end":8368837,"line_start":547,"line_end":547,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":"unexport the exported surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6347},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8369109,"byte_end":8369126,"line_start":556,"line_end":556,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6348},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8369220,"byte_end":8369236,"line_start":558,"line_end":558,"column_start":15,"column_end":31},"name":"EVT_HANDLE_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_exported_v2::EVT_HANDLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6349},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8369505,"byte_end":8369521,"line_start":561,"line_end":561,"column_start":9,"column_end":25},"name":"zxdg_imported_v2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":14105},{"krate":0,"index":6357},{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6362},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6372},{"krate":0,"index":6387},{"krate":0,"index":6390},{"krate":0,"index":6403},{"krate":0,"index":6405},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6419}],"decl_id":null,"docs":"an imported surface handle","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6368},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8370104,"byte_end":8370111,"line_start":570,"line_end":570,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"destroy the xdg_imported object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6370},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8370441,"byte_end":8370452,"line_start":572,"line_end":572,"column_start":9,"column_end":20},"name":"SetParentOf","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::Request::SetParentOf","value":"Request::SetParentOf { surface }","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"set as the parent of some surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6367},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8369804,"byte_end":8369811,"line_start":568,"line_end":568,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_imported object\\n\\nNotify the compositor that it will no longer use the xdg_imported\\nobject. Any relationship that may have been set up will at this point\\nbe invalidated.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set as the parent of some surface\\n\\nSet the imported surface as the parent of some surface of the client.\\nThe passed surface must be a xdg_toplevel equivalent. Calling this\\nfunction sets up a surface to surface relation with the same stacking\\nand positioning semantics as xdg_toplevel.set_parent.\"]\n    SetParentOf {\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6368},{"krate":0,"index":6370}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6388},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8373472,"byte_end":8373481,"line_start":654,"line_end":654,"column_start":9,"column_end":18},"name":"Destroyed","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::Event::Destroyed","value":"Event::Destroyed","parent":{"krate":0,"index":6387},"children":[],"decl_id":null,"docs":"the imported surface handle has been destroyed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6387},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8373117,"byte_end":8373122,"line_start":652,"line_end":652,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::Event","value":"pub enum Event {\n\n    #[doc =\n      \"the imported surface handle has been destroyed\\n\\nThe imported surface handle has been destroyed and any relationship set\\nup has been invalidated. This may happen for various reasons, for\\nexample if the exported surface or the exported surface handle has been\\ndestroyed, if the handle used for importing was invalid.\"]\n    Destroyed,\n}","parent":null,"children":[{"krate":0,"index":6388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6403},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8375075,"byte_end":8375089,"line_start":708,"line_end":708,"column_start":16,"column_end":30},"name":"ZxdgImportedV2","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::ZxdgImportedV2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6411},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8375437,"byte_end":8375450,"line_start":718,"line_end":718,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6412},{"krate":0,"index":6413}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6412},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8375776,"byte_end":8375783,"line_start":720,"line_end":720,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":"destroy the xdg_imported object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6413},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8376129,"byte_end":8376142,"line_start":722,"line_end":722,"column_start":12,"column_end":25},"name":"set_parent_of","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::RequestsTrait::set_parent_of","value":"pub fn set_parent_of(&Self, &Proxy<super::wl_surface::WlSurface>) -> ()","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":"set as the parent of some surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6417},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8376688,"byte_end":8376705,"line_start":737,"line_end":737,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6418},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8376801,"byte_end":8376824,"line_start":739,"line_end":739,"column_start":15,"column_end":38},"name":"REQ_SET_PARENT_OF_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::REQ_SET_PARENT_OF_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6419},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8376918,"byte_end":8376937,"line_start":741,"line_end":741,"column_start":15,"column_end":34},"name":"EVT_DESTROYED_SINCE","qualname":"::unstable::xdg_foreign::v2::generated::client::zxdg_imported_v2::EVT_DESTROYED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19486,"byte_end":19496,"line_start":354,"line_end":354,"column_start":9,"column_end":19},"name":"xdg_output","qualname":"::unstable::xdg_output","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":6420}],"decl_id":null,"docs":" Protocol to describe output regions","sig":null,"attributes":[{"value":"! Protocol to describe output regions","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19503,"byte_end":19542,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19547,"byte_end":19550,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"! This protocol aims at describing outputs in a way which is more in line","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19555,"byte_end":19630,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"! with the concept of an output on desktop oriented systems.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19635,"byte_end":19697,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19702,"byte_end":19705,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"! Some information are more specific to the concept of an output for","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19710,"byte_end":19780,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"! a desktop oriented system and may not make sense in other applications,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19785,"byte_end":19860,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"! such as IVI systems for example.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19865,"byte_end":19901,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19906,"byte_end":19909,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"! Typically, the global compositor space on a desktop system is made of","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19914,"byte_end":19987,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"! a contiguous or overlapping set of rectangular regions.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19992,"byte_end":20051,"line_start":365,"line_end":365,"column_start":5,"column_end":64}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20056,"byte_end":20059,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"! Some of the information provided in this protocol might be identical","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20064,"byte_end":20136,"line_start":367,"line_end":367,"column_start":5,"column_end":77}},{"value":"! to their counterparts already available from wl_output, in which case","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20141,"byte_end":20214,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"! the information provided by this protocol should be preferred to their","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20219,"byte_end":20293,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"! equivalent in wl_output. The goal is to move the desktop specific","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20298,"byte_end":20367,"line_start":370,"line_end":370,"column_start":5,"column_end":74}},{"value":"! concepts (such as output location within the global compositor space,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20372,"byte_end":20445,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"! the connector name and types, etc.) out of the core wl_output protocol.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20450,"byte_end":20525,"line_start":372,"line_end":372,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":6420},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::xdg_output::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":6456},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_interfaces.rs","byte_start":8377433,"byte_end":8377464,"line_start":12,"line_end":12,"column_start":16,"column_end":47},"name":"zxdg_output_manager_v1_requests","qualname":"::unstable::xdg_output::v1::generated::c_interfaces::zxdg_output_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6458},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_interfaces.rs","byte_start":8377933,"byte_end":8377965,"line_start":24,"line_end":24,"column_start":16,"column_end":48},"name":"zxdg_output_manager_v1_interface","qualname":"::unstable::xdg_output::v1::generated::c_interfaces::zxdg_output_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6459},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_interfaces.rs","byte_start":8378255,"byte_end":8378278,"line_start":32,"line_end":32,"column_start":16,"column_end":39},"name":"zxdg_output_v1_requests","qualname":"::unstable::xdg_output::v1::generated::c_interfaces::zxdg_output_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6461},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_interfaces.rs","byte_start":8378484,"byte_end":8378505,"line_start":37,"line_end":37,"column_start":16,"column_end":37},"name":"zxdg_output_v1_events","qualname":"::unstable::xdg_output::v1::generated::c_interfaces::zxdg_output_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6463},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_interfaces.rs","byte_start":8379510,"byte_end":8379534,"line_start":64,"line_end":64,"column_start":16,"column_end":40},"name":"zxdg_output_v1_interface","qualname":"::unstable::xdg_output::v1::generated::c_interfaces::zxdg_output_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6464},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8379910,"byte_end":8379932,"line_start":2,"line_end":2,"column_start":9,"column_end":31},"name":"zxdg_output_manager_v1","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":14171},{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6479},{"krate":0,"index":6480},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6488},{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6517},{"krate":0,"index":6519},{"krate":0,"index":6525},{"krate":0,"index":6529},{"krate":0,"index":6533},{"krate":0,"index":6534}],"decl_id":null,"docs":"manage xdg_output objects","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6483},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8380554,"byte_end":8380561,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"destroy the xdg_output_manager object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6485},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8380693,"byte_end":8380705,"line_start":13,"line_end":13,"column_start":9,"column_end":21},"name":"GetXdgOutput","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::Request::GetXdgOutput","value":"Request::GetXdgOutput { id, output }","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"create an xdg output from a wl_output","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6482},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8380215,"byte_end":8380222,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_output_manager object\\n\\nUsing this request a client can tell the server that it is not\\ngoing to use the xdg_output_manager object anymore.\\n\\nAny objects already created through this instance are not affected.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create an xdg output from a wl_output\\n\\nThis creates a new xdg_output object for the given wl_output.\"]\n    GetXdgOutput {\n        id: Proxy<super::zxdg_output_v1::ZxdgOutputV1>,\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6485}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6503},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8383773,"byte_end":8383778,"line_start":101,"line_end":101,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6517},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8385078,"byte_end":8385097,"line_start":144,"line_end":144,"column_start":16,"column_end":35},"name":"ZxdgOutputManagerV1","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::ZxdgOutputManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6525},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8385462,"byte_end":8385475,"line_start":154,"line_end":154,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6526},{"krate":0,"index":6527}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6526},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8385840,"byte_end":8385847,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6525},"children":[],"decl_id":null,"docs":"destroy the xdg_output_manager object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6527},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8385995,"byte_end":8386009,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"get_xdg_output","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::RequestsTrait::get_xdg_output","value":"pub fn get_xdg_output<F>(&Self, &Proxy<super::wl_output::WlOutput>, F)\n-> Result<Proxy<super::zxdg_output_v1::ZxdgOutputV1>, ()> where\nF: FnOnce(NewProxy<super::zxdg_output_v1::ZxdgOutputV1>) ->\nProxy<super::zxdg_output_v1::ZxdgOutputV1>","parent":{"krate":0,"index":6525},"children":[],"decl_id":null,"docs":"create an xdg output from a wl_output","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6533},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8387195,"byte_end":8387212,"line_start":191,"line_end":191,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6534},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8387308,"byte_end":8387332,"line_start":193,"line_end":193,"column_start":15,"column_end":39},"name":"REQ_GET_XDG_OUTPUT_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_manager_v1::REQ_GET_XDG_OUTPUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6535},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8387548,"byte_end":8387562,"line_start":196,"line_end":196,"column_start":9,"column_end":23},"name":"zxdg_output_v1","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":14199},{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6556},{"krate":0,"index":6570},{"krate":0,"index":6583},{"krate":0,"index":6598},{"krate":0,"index":6600},{"krate":0,"index":6606},{"krate":0,"index":6608},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6615}],"decl_id":null,"docs":"compositor logical output region","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6554},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8388097,"byte_end":8388104,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6553},"children":[],"decl_id":null,"docs":"destroy the xdg_output object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6553},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8387845,"byte_end":8387852,"line_start":203,"line_end":203,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_output object\\n\\nUsing this request a client can tell the server that it is not\\ngoing to use the xdg_output object anymore.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":6554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6571},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8390303,"byte_end":8390318,"line_start":266,"line_end":266,"column_start":9,"column_end":24},"name":"LogicalPosition","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Event::LogicalPosition","value":"Event::LogicalPosition { x, y }","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":"position of the output within the global compositor space","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6574},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8391940,"byte_end":8391951,"line_start":268,"line_end":268,"column_start":9,"column_end":20},"name":"LogicalSize","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Event::LogicalSize","value":"Event::LogicalSize { width, height }","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":"size of the output in the global compositor space","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6577},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8392255,"byte_end":8392259,"line_start":270,"line_end":270,"column_start":9,"column_end":13},"name":"Done","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Event::Done","value":"Event::Done","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":"all information about the output have been sent","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6579},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8393287,"byte_end":8393291,"line_start":272,"line_end":272,"column_start":9,"column_end":13},"name":"Name","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Event::Name","value":"Event::Name { name }","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":"name of this output","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6581},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8394061,"byte_end":8394072,"line_start":274,"line_end":274,"column_start":9,"column_end":20},"name":"Description","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Event::Description","value":"Event::Description { description }","parent":{"krate":0,"index":6570},"children":[],"decl_id":null,"docs":"human-readable description of this output","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6570},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8389918,"byte_end":8389923,"line_start":264,"line_end":264,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"position of the output within the global compositor space\\n\\nThe position event describes the location of the wl_output within\\nthe global compositor space.\\n\\nThe logical_position event is sent after creating an xdg_output\\n(see xdg_output_manager.get_xdg_output) and whenever the location\\nof the output changes within the global compositor space.\"]\n    LogicalPosition {\n        x: i32,\n        y: i32,\n    },\n\n    #[doc =\n      \"size of the output in the global compositor space\\n\\nThe logical_size event describes the size of the output in the\\nglobal compositor space.\\n\\nFor example, a surface without any buffer scale, transformation\\nnor rotation set, with the size matching the logical_size will\\nhave the same size as the corresponding output when displayed.\\n\\nMost regular Wayland clients should not pay attention to the\\nlogical size and would rather rely on xdg_shell interfaces.\\n\\nSome clients such as Xwayland, however, need this to configure\\ntheir surfaces in the global compositor space as the compositor\\nmay apply a different scale from what is advertised by the output\\nscaling property (to achieve fractional scaling, for example).\\n\\nFor example, for a wl_output mode 3840\\u{d7}2160 and a scale factor 2:\\n\\n- A compositor not scaling the surface buffers will advertise a\\nlogical size of 3840\\u{d7}2160,\\n\\n- A compositor automatically scaling the surface buffers will\\nadvertise a logical size of 1920\\u{d7}1080,\\n\\n- A compositor using a fractional scale of 1.5 will advertise a\\nlogical size to 2560\\u{d7}1620.\\n\\nFor example, for a wl_output mode 1920\\u{d7}1080 and a 90 degree rotation,\\nthe compositor will advertise a logical size of 1080x1920.\\n\\nThe logical_size event is sent after creating an xdg_output\\n(see xdg_output_manager.get_xdg_output) and whenever the logical\\nsize of the output changes, either as a result of a change in the\\napplied scale or because of a change in the corresponding output\\nmode(see wl_output.mode) or transform (see wl_output.transform).\"]\n    LogicalSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"all information about the output have been sent\\n\\nThis event is sent after all other properties of an xdg_output\\nhave been sent.\\n\\nThis allows changes to the xdg_output properties to be seen as\\natomic, even if they happen via multiple events.\"]\n    Done,\n\n    #[doc =\n      \"name of this output\\n\\nMany compositors will assign names to their outputs, show them to the\\nuser, allow them to be configured by name, etc. The client may wish to\\nknow this name as well to offer the user similar behaviors.\\n\\nThe naming convention is compositor defined, but limited to\\nalphanumeric characters and dashes (-). Each name is unique among all\\nwl_output globals, but if a wl_output global is destroyed the same name\\nmay be reused later. The names will also remain consistent across\\nsessions with the same hardware and software configuration.\\n\\nExamples of names include 'HDMI-A-1', 'WL-1', 'X11-1', etc. However, do\\nnot assume that the name is a reflection of an underlying DRM\\nconnector, X11 connection, etc.\\n\\nThe name event is sent after creating an xdg_output (see\\nxdg_output_manager.get_xdg_output). This event is only sent once per\\nxdg_output, and the name does not change over the lifetime of the\\nwl_output global.\\n\\nOnly available since version 2 of the interface\"]\n    Name {\n        name: String,\n    },\n\n    #[doc =\n      \"human-readable description of this output\\n\\nMany compositors can produce human-readable descriptions of their\\noutputs.  The client may wish to know this description as well, to\\ncommunicate the user for various purposes.\\n\\nThe description is a UTF-8 string with no convention defined for its\\ncontents. Examples might include 'Foocorp 11\\\" Display' or 'Virtual X11\\noutput via :1'.\\n\\nThe description event is sent after creating an xdg_output (see\\nxdg_output_manager.get_xdg_output). This event is only sent once per\\nxdg_output, and the description does not change over the lifetime of\\nthe wl_output global. The description is optional, and may not be sent\\nat all.\\n\\nOnly available since version 2 of the interface\"]\n    Description {\n        description: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":6571},{"krate":0,"index":6574},{"krate":0,"index":6577},{"krate":0,"index":6579},{"krate":0,"index":6581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6598},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8400627,"byte_end":8400639,"line_start":452,"line_end":452,"column_start":16,"column_end":28},"name":"ZxdgOutputV1","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::ZxdgOutputV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6606},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8400981,"byte_end":8400994,"line_start":462,"line_end":462,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6607}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6607},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401272,"byte_end":8401279,"line_start":464,"line_end":464,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6606},"children":[],"decl_id":null,"docs":"destroy the xdg_output object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6610},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401549,"byte_end":8401566,"line_start":473,"line_end":473,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6611},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401660,"byte_end":8401686,"line_start":475,"line_end":475,"column_start":15,"column_end":41},"name":"EVT_LOGICAL_POSITION_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::EVT_LOGICAL_POSITION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6612},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401780,"byte_end":8401802,"line_start":477,"line_end":477,"column_start":15,"column_end":37},"name":"EVT_LOGICAL_SIZE_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::EVT_LOGICAL_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6613},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401896,"byte_end":8401910,"line_start":479,"line_end":479,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6614},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8402004,"byte_end":8402018,"line_start":481,"line_end":481,"column_start":15,"column_end":29},"name":"EVT_NAME_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::EVT_NAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6615},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8402112,"byte_end":8402133,"line_start":483,"line_end":483,"column_start":15,"column_end":36},"name":"EVT_DESCRIPTION_SINCE","qualname":"::unstable::xdg_output::v1::generated::client::zxdg_output_v1::EVT_DESCRIPTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20669,"byte_end":20678,"line_start":382,"line_end":382,"column_start":9,"column_end":18},"name":"xdg_shell","qualname":"::unstable::xdg_shell","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":6616},{"krate":0,"index":6617}],"decl_id":null,"docs":" XDG Shell protocol","sig":null,"attributes":[{"value":"! XDG Shell protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20685,"byte_end":20707,"line_start":383,"line_end":383,"column_start":5,"column_end":27}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20712,"byte_end":20715,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"! These are the old, unstable versions of the now stable XDG Shell protocol.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20720,"byte_end":20798,"line_start":385,"line_end":385,"column_start":5,"column_end":83}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20803,"byte_end":20806,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"! They remain here for compatibility reasons, allowing you to support older","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20811,"byte_end":20888,"line_start":387,"line_end":387,"column_start":5,"column_end":82}},{"value":"! clients/server not yet implementing the new protocol.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20893,"byte_end":20950,"line_start":388,"line_end":388,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":6616},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v5","qualname":"::unstable::xdg_shell::v5","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6620}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":6659},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8403118,"byte_end":8403136,"line_start":23,"line_end":23,"column_start":16,"column_end":34},"name":"xdg_shell_requests","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_shell_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6661},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8404214,"byte_end":8404230,"line_start":50,"line_end":50,"column_start":16,"column_end":32},"name":"xdg_shell_events","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_shell_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6663},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8404434,"byte_end":8404453,"line_start":55,"line_end":55,"column_start":16,"column_end":35},"name":"xdg_shell_interface","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_shell_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6674},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8405645,"byte_end":8405665,"line_start":82,"line_end":82,"column_start":16,"column_end":36},"name":"xdg_surface_requests","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_surface_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6676},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8408574,"byte_end":8408592,"line_start":154,"line_end":154,"column_start":16,"column_end":34},"name":"xdg_surface_events","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_surface_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6678},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8409014,"byte_end":8409035,"line_start":166,"line_end":166,"column_start":16,"column_end":37},"name":"xdg_surface_interface","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_surface_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6679},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8409318,"byte_end":8409336,"line_start":174,"line_end":174,"column_start":16,"column_end":34},"name":"xdg_popup_requests","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_popup_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6681},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8409542,"byte_end":8409558,"line_start":179,"line_end":179,"column_start":16,"column_end":32},"name":"xdg_popup_events","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_popup_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":6683},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_interfaces.rs","byte_start":8409767,"byte_end":8409786,"line_start":184,"line_end":184,"column_start":16,"column_end":35},"name":"xdg_popup_interface","qualname":"::unstable::xdg_shell::v5::generated::c_interfaces::xdg_popup_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6684},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8410326,"byte_end":8410335,"line_start":2,"line_end":2,"column_start":9,"column_end":18},"name":"xdg_shell","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691},{"krate":0,"index":14273},{"krate":0,"index":6692},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697},{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701},{"krate":0,"index":7023},{"krate":0,"index":7034},{"krate":0,"index":7032},{"krate":0,"index":7030},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":6702},{"krate":0,"index":7035},{"krate":0,"index":7055},{"krate":0,"index":7053},{"krate":0,"index":7051},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":6705},{"krate":0,"index":6708},{"krate":0,"index":6726},{"krate":0,"index":6744},{"krate":0,"index":6747},{"krate":0,"index":6760},{"krate":0,"index":6762},{"krate":0,"index":6768},{"krate":0,"index":6776},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789}],"decl_id":null,"docs":"create desktop-style surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7024},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8410999,"byte_end":8411006,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"Current","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Version::Current","value":"Version::Current","parent":{"krate":0,"index":7023},"children":[],"decl_id":null,"docs":"Always the latest version\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7023},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8410936,"byte_end":8410943,"line_start":12,"line_end":12,"column_start":14,"column_end":21},"name":"Version","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Version","value":"pub enum Version {\n\n    #[doc = \"Always the latest version\"]\n    Current = ,\n}","parent":null,"children":[{"krate":0,"index":7024}],"decl_id":null,"docs":"latest protocol version","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8410865,"byte_end":8410877,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6703},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411052,"byte_end":8411060,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Version>::from_raw","value":"pub fn from_raw(u32) -> Option<Version>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6704},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411231,"byte_end":8411237,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Version>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7036},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411439,"byte_end":8411443,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"Role","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Error::Role","value":"Error::Role","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"given wl_surface has another role\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7039},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411516,"byte_end":8411531,"line_start":33,"line_end":33,"column_start":9,"column_end":24},"name":"DefunctSurfaces","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Error::DefunctSurfaces","value":"Error::DefunctSurfaces","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"xdg_shell was destroyed before children\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7042},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411619,"byte_end":8411637,"line_start":35,"line_end":35,"column_start":9,"column_end":27},"name":"NotTheTopmostPopup","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Error::NotTheTopmostPopup","value":"Error::NotTheTopmostPopup","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"the client tried to map or destroy a non-topmost popup\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7045},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411723,"byte_end":8411741,"line_start":37,"line_end":37,"column_start":9,"column_end":27},"name":"InvalidPopupParent","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Error::InvalidPopupParent","value":"Error::InvalidPopupParent","parent":{"krate":0,"index":7035},"children":[],"decl_id":null,"docs":"the client specified an invalid popup parent surface\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7035},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411370,"byte_end":8411375,"line_start":29,"line_end":29,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Error","value":"pub enum Error {\n\n    #[doc = \"given wl_surface has another role\"]\n    Role = ,\n\n    #[doc = \"xdg_shell was destroyed before children\"]\n    DefunctSurfaces = ,\n\n    #[doc = \"the client tried to map or destroy a non-topmost popup\"]\n    NotTheTopmostPopup = ,\n\n    #[doc = \"the client specified an invalid popup parent surface\"]\n    InvalidPopupParent = ,\n}","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7042},{"krate":0,"index":7045}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411299,"byte_end":8411311,"line_start":27,"line_end":27,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6706},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411785,"byte_end":8411793,"line_start":40,"line_end":40,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8412116,"byte_end":8412122,"line_start":49,"line_end":49,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6709},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8412524,"byte_end":8412531,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6708},"children":[],"decl_id":null,"docs":"destroy xdg_shell","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6711},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8412874,"byte_end":8412892,"line_start":57,"line_end":57,"column_start":9,"column_end":27},"name":"UseUnstableVersion","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Request::UseUnstableVersion","value":"Request::UseUnstableVersion { version }","parent":{"krate":0,"index":6708},"children":[],"decl_id":null,"docs":"enable use of this unstable version","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6713},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8413387,"byte_end":8413400,"line_start":59,"line_end":59,"column_start":9,"column_end":22},"name":"GetXdgSurface","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Request::GetXdgSurface","value":"Request::GetXdgSurface { id, surface }","parent":{"krate":0,"index":6708},"children":[],"decl_id":null,"docs":"create a shell surface from a surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6716},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8414103,"byte_end":8414114,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"name":"GetXdgPopup","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Request::GetXdgPopup","value":"Request::GetXdgPopup { id, surface, parent, seat, serial, x, y }","parent":{"krate":0,"index":6708},"children":[],"decl_id":null,"docs":"create a popup for a surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6724},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8414563,"byte_end":8414567,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"Pong","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Request::Pong","value":"Request::Pong { serial }","parent":{"krate":0,"index":6708},"children":[],"decl_id":null,"docs":"respond to a ping event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6708},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8412193,"byte_end":8412200,"line_start":53,"line_end":53,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy xdg_shell\\n\\nDestroy this xdg_shell object.\\n\\nDestroying a bound xdg_shell object while there are surfaces\\nstill alive created by this xdg_shell object instance is illegal\\nand will result in a protocol error.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"enable use of this unstable version\\n\\nNegotiate the unstable version of the interface.  This\\nmechanism is in place to ensure client and server agree on the\\nunstable versions of the protocol that they speak or exit\\ncleanly if they don't agree.  This request will go away once\\nthe xdg-shell protocol is stable.\"]\n    UseUnstableVersion {\n        version: i32,\n    },\n\n    #[doc =\n      \"create a shell surface from a surface\\n\\nThis creates an xdg_surface for the given surface and gives it the\\nxdg_surface role. A wl_surface can only be given an xdg_surface role\\nonce. If get_xdg_surface is called with a wl_surface that already has\\nan active xdg_surface associated with it, or if it had any other role,\\nan error is raised.\\n\\nSee the documentation of xdg_surface for more details about what an\\nxdg_surface is and how it is used.\"]\n    GetXdgSurface {\n        id: Proxy<super::xdg_surface::XdgSurface>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"create a popup for a surface\\n\\nThis creates an xdg_popup for the given surface and gives it the\\nxdg_popup role. A wl_surface can only be given an xdg_popup role\\nonce. If get_xdg_popup is called with a wl_surface that already has\\nan active xdg_popup associated with it, or if it had any other role,\\nan error is raised.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event.\\n\\nSee the documentation of xdg_popup for more details about what an\\nxdg_popup is and how it is used.\"]\n    GetXdgPopup {\n        id: Proxy<super::xdg_popup::XdgPopup>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        parent: Proxy<super::wl_surface::WlSurface>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        x: i32,\n        y: i32,\n    },\n\n    #[doc =\n      \"respond to a ping event\\n\\nA client must respond to a ping event with a pong request or\\nthe client may be deemed unresponsive.\"]\n    Pong {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":6709},{"krate":0,"index":6711},{"krate":0,"index":6713},{"krate":0,"index":6716},{"krate":0,"index":6724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6745},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8421689,"byte_end":8421693,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"name":"Ping","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Event::Ping","value":"Event::Ping { serial }","parent":{"krate":0,"index":6744},"children":[],"decl_id":null,"docs":"check if the client is alive","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6744},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8421078,"byte_end":8421083,"line_start":247,"line_end":247,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::Event","value":"pub enum Event {\n\n    #[doc =\n      \"check if the client is alive\\n\\nThe ping event asks the client if it's still alive. Pass the\\nserial specified in the event back to the compositor by sending\\na \\\"pong\\\" request back with the specified serial.\\n\\nCompositors can use this to determine if the client is still\\nalive. It's unspecified what will happen if the client doesn't\\nrespond to the ping request, or in what timeframe. Clients should\\ntry to respond in a reasonable amount of time.\\n\\nA compositor is free to ping in any way it wants, but a client must\\nalways respond to any xdg_shell object it created.\"]\n    Ping {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":6745}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6760},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8423857,"byte_end":8423865,"line_start":317,"line_end":317,"column_start":16,"column_end":24},"name":"XdgShell","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::XdgShell","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6768},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8424193,"byte_end":8424206,"line_start":327,"line_end":327,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6769},{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6773},{"krate":0,"index":6775}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6769},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8424563,"byte_end":8424570,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6768},"children":[],"decl_id":null,"docs":"destroy xdg_shell","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6770},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8424929,"byte_end":8424949,"line_start":331,"line_end":331,"column_start":12,"column_end":32},"name":"use_unstable_version","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::RequestsTrait::use_unstable_version","value":"pub fn use_unstable_version(&Self, i32) -> ()","parent":{"krate":0,"index":6768},"children":[],"decl_id":null,"docs":"enable use of this unstable version","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6771},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8425457,"byte_end":8425472,"line_start":333,"line_end":333,"column_start":12,"column_end":27},"name":"get_xdg_surface","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::RequestsTrait::get_xdg_surface","value":"pub fn get_xdg_surface<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::xdg_surface::XdgSurface>, ()> where\nF: FnOnce(NewProxy<super::xdg_surface::XdgSurface>) ->\nProxy<super::xdg_surface::XdgSurface>","parent":{"krate":0,"index":6768},"children":[],"decl_id":null,"docs":"create a shell surface from a surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6773},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8426376,"byte_end":8426389,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"get_xdg_popup","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::RequestsTrait::get_xdg_popup","value":"pub fn get_xdg_popup<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                        &Proxy<super::wl_surface::WlSurface>,\n                        &Proxy<super::wl_seat::WlSeat>, u32, i32, i32, F)\n-> Result<Proxy<super::xdg_popup::XdgPopup>, ()> where\nF: FnOnce(NewProxy<super::xdg_popup::XdgPopup>) ->\nProxy<super::xdg_popup::XdgPopup>","parent":{"krate":0,"index":6768},"children":[],"decl_id":null,"docs":"create a popup for a surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6775},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8427002,"byte_end":8427006,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"name":"pong","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::RequestsTrait::pong","value":"pub fn pong(&Self, u32) -> ()","parent":{"krate":0,"index":6768},"children":[],"decl_id":null,"docs":"respond to a ping event","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6784},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8429030,"byte_end":8429047,"line_start":413,"line_end":413,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6785},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8429143,"byte_end":8429173,"line_start":415,"line_end":415,"column_start":15,"column_end":45},"name":"REQ_USE_UNSTABLE_VERSION_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::REQ_USE_UNSTABLE_VERSION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6786},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8429269,"byte_end":8429294,"line_start":417,"line_end":417,"column_start":15,"column_end":40},"name":"REQ_GET_XDG_SURFACE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::REQ_GET_XDG_SURFACE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6787},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8429390,"byte_end":8429413,"line_start":419,"line_end":419,"column_start":15,"column_end":38},"name":"REQ_GET_XDG_POPUP_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::REQ_GET_XDG_POPUP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6788},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8429509,"byte_end":8429523,"line_start":421,"line_end":421,"column_start":15,"column_end":29},"name":"REQ_PONG_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::REQ_PONG_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6789},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8429617,"byte_end":8429631,"line_start":423,"line_end":423,"column_start":15,"column_end":29},"name":"EVT_PING_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_shell::EVT_PING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6790},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8430595,"byte_end":8430606,"line_start":426,"line_end":426,"column_start":9,"column_end":20},"name":"xdg_surface","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":14301},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800},{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6803},{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6806},{"krate":0,"index":6807},{"krate":0,"index":7056},{"krate":0,"index":7091},{"krate":0,"index":7089},{"krate":0,"index":7087},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":6808},{"krate":0,"index":7092},{"krate":0,"index":7112},{"krate":0,"index":7110},{"krate":0,"index":7108},{"krate":0,"index":7105},{"krate":0,"index":7106},{"krate":0,"index":6811},{"krate":0,"index":6814},{"krate":0,"index":6852},{"krate":0,"index":6881},{"krate":0,"index":6889},{"krate":0,"index":6902},{"krate":0,"index":6904},{"krate":0,"index":6910},{"krate":0,"index":6925},{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6952},{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":6955},{"krate":0,"index":6956},{"krate":0,"index":6957}],"decl_id":null,"docs":"A desktop window","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7057},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431114,"byte_end":8431118,"line_start":437,"line_end":437,"column_start":9,"column_end":13},"name":"None","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::None","value":"ResizeEdge::None","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7060},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431132,"byte_end":8431135,"line_start":438,"line_end":438,"column_start":9,"column_end":12},"name":"Top","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::Top","value":"ResizeEdge::Top","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7063},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431149,"byte_end":8431155,"line_start":439,"line_end":439,"column_start":9,"column_end":15},"name":"Bottom","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::Bottom","value":"ResizeEdge::Bottom","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7066},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431169,"byte_end":8431173,"line_start":440,"line_end":440,"column_start":9,"column_end":13},"name":"Left","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::Left","value":"ResizeEdge::Left","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7069},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431187,"byte_end":8431194,"line_start":441,"line_end":441,"column_start":9,"column_end":16},"name":"TopLeft","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::TopLeft","value":"ResizeEdge::TopLeft","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7072},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431208,"byte_end":8431218,"line_start":442,"line_end":442,"column_start":9,"column_end":19},"name":"BottomLeft","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::BottomLeft","value":"ResizeEdge::BottomLeft","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7075},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431232,"byte_end":8431237,"line_start":443,"line_end":443,"column_start":9,"column_end":14},"name":"Right","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::Right","value":"ResizeEdge::Right","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7078},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431251,"byte_end":8431259,"line_start":444,"line_end":444,"column_start":9,"column_end":17},"name":"TopRight","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::TopRight","value":"ResizeEdge::TopRight","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7081},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431273,"byte_end":8431284,"line_start":445,"line_end":445,"column_start":9,"column_end":20},"name":"BottomRight","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge::BottomRight","value":"ResizeEdge::BottomRight","parent":{"krate":0,"index":7056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7056},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431093,"byte_end":8431103,"line_start":436,"line_end":436,"column_start":14,"column_end":24},"name":"ResizeEdge","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::ResizeEdge","value":"pub enum ResizeEdge {\n    None = ,\n    Top = ,\n    Bottom = ,\n    Left = ,\n    TopLeft = ,\n    BottomLeft = ,\n    Right = ,\n    TopRight = ,\n    BottomRight = ,\n}","parent":null,"children":[{"krate":0,"index":7057},{"krate":0,"index":7060},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7069},{"krate":0,"index":7072},{"krate":0,"index":7075},{"krate":0,"index":7078},{"krate":0,"index":7081}],"decl_id":null,"docs":"edge values for resizing","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431022,"byte_end":8431034,"line_start":434,"line_end":434,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431334,"byte_end":8431342,"line_start":448,"line_end":448,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ResizeEdge>::from_raw","value":"pub fn from_raw(u32) -> Option<ResizeEdge>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6810},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431899,"byte_end":8431905,"line_start":462,"line_end":462,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ResizeEdge>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7093},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433059,"byte_end":8433068,"line_start":471,"line_end":471,"column_start":9,"column_end":18},"name":"Maximized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::State::Maximized","value":"State::Maximized","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":"the surface is maximized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7096},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433241,"byte_end":8433251,"line_start":473,"line_end":473,"column_start":9,"column_end":19},"name":"Fullscreen","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::State::Fullscreen","value":"State::Fullscreen","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":"the surface is fullscreen","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7099},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433545,"byte_end":8433553,"line_start":475,"line_end":475,"column_start":9,"column_end":17},"name":"Resizing","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::State::Resizing","value":"State::Resizing","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":"the surface is being resized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7102},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433773,"byte_end":8433782,"line_start":477,"line_end":477,"column_start":9,"column_end":18},"name":"Activated","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::State::Activated","value":"State::Activated","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":"the surface is now activated","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7092},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8432886,"byte_end":8432891,"line_start":469,"line_end":469,"column_start":14,"column_end":19},"name":"State","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::State","value":"pub enum State {\n\n    #[doc =\n      \"the surface is maximized\\n\\nThe surface is maximized. The window geometry specified in the configure\\nevent must be obeyed by the client.\"]\n    Maximized = ,\n\n    #[doc =\n      \"the surface is fullscreen\\n\\nThe surface is fullscreen. The window geometry specified in the configure\\nevent must be obeyed by the client.\"]\n    Fullscreen = ,\n\n    #[doc =\n      \"the surface is being resized\\n\\nThe surface is being resized. The window geometry specified in the\\nconfigure event is a maximum; the client cannot resize beyond it.\\nClients that have aspect ratio or cell sizing configuration can use\\na smaller size, however.\"]\n    Resizing = ,\n\n    #[doc =\n      \"the surface is now activated\\n\\nClient window decorations should be painted as if the window is\\nactive. Do not assume this means that the window actually has\\nkeyboard or pointer focus.\"]\n    Activated = ,\n}","parent":null,"children":[{"krate":0,"index":7093},{"krate":0,"index":7096},{"krate":0,"index":7099},{"krate":0,"index":7102}],"decl_id":null,"docs":"types of state on the surface","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8432815,"byte_end":8432827,"line_start":467,"line_end":467,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6812},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433826,"byte_end":8433834,"line_start":480,"line_end":480,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<State>::from_raw","value":"pub fn from_raw(u32) -> Option<State>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6813},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8434138,"byte_end":8434144,"line_start":489,"line_end":489,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<State>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6815},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8434524,"byte_end":8434531,"line_start":495,"line_end":495,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"Destroy the xdg_surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6817},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8434893,"byte_end":8434902,"line_start":497,"line_end":497,"column_start":9,"column_end":18},"name":"SetParent","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetParent","value":"Request::SetParent { parent }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"set the parent of this surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6819},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8435248,"byte_end":8435256,"line_start":501,"line_end":501,"column_start":9,"column_end":17},"name":"SetTitle","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetTitle","value":"Request::SetTitle { title }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"set surface title","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6821},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8436196,"byte_end":8436204,"line_start":503,"line_end":503,"column_start":9,"column_end":17},"name":"SetAppId","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetAppId","value":"Request::SetAppId { app_id }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"set application ID","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6823},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8436825,"byte_end":8436839,"line_start":505,"line_end":505,"column_start":9,"column_end":23},"name":"ShowWindowMenu","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::ShowWindowMenu","value":"Request::ShowWindowMenu { seat, serial, x, y }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"show the window menu","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6828},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8437778,"byte_end":8437782,"line_start":512,"line_end":512,"column_start":9,"column_end":13},"name":"Move","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::Move","value":"Request::Move { seat, serial }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"start an interactive move","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6831},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8439386,"byte_end":8439392,"line_start":517,"line_end":517,"column_start":9,"column_end":15},"name":"Resize","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::Resize","value":"Request::Resize { seat, serial, edges }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"start an interactive resize","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6835},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8440431,"byte_end":8440443,"line_start":523,"line_end":523,"column_start":9,"column_end":21},"name":"AckConfigure","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::AckConfigure","value":"Request::AckConfigure { serial }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6837},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8441627,"byte_end":8441644,"line_start":525,"line_end":525,"column_start":9,"column_end":26},"name":"SetWindowGeometry","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetWindowGeometry","value":"Request::SetWindowGeometry { x, y, width, height }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"set the new window geometry","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6842},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8442525,"byte_end":8442537,"line_start":532,"line_end":532,"column_start":9,"column_end":21},"name":"SetMaximized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetMaximized","value":"Request::SetMaximized","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"maximize the window","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6844},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8443400,"byte_end":8443414,"line_start":534,"line_end":534,"column_start":9,"column_end":23},"name":"UnsetMaximized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::UnsetMaximized","value":"Request::UnsetMaximized","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"unmaximize the window","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6846},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8443882,"byte_end":8443895,"line_start":536,"line_end":536,"column_start":9,"column_end":22},"name":"SetFullscreen","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetFullscreen","value":"Request::SetFullscreen { output }","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"set the window as fullscreen on a monitor","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6848},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8444000,"byte_end":8444015,"line_start":540,"line_end":540,"column_start":9,"column_end":24},"name":"UnsetFullscreen","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::UnsetFullscreen","value":"Request::UnsetFullscreen","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6850},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8444474,"byte_end":8444486,"line_start":542,"line_end":542,"column_start":9,"column_end":21},"name":"SetMinimized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request::SetMinimized","value":"Request::SetMinimized","parent":{"krate":0,"index":6814},"children":[],"decl_id":null,"docs":"set the window as minimized","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6814},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8434215,"byte_end":8434222,"line_start":493,"line_end":493,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Request","value":"pub enum Request {\n\n    #[doc =\n      \"Destroy the xdg_surface\\n\\nUnmap and destroy the window. The window will be effectively\\nhidden from the user's point of view, and all state like\\nmaximization, fullscreen, and so on, will be lost.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the parent of this surface\\n\\nSet the \\\"parent\\\" of this surface. This window should be stacked\\nabove a parent. The parent surface must be mapped as long as this\\nsurface is mapped.\\n\\nParent windows should be set on dialogs, toolboxes, or other\\n\\\"auxiliary\\\" surfaces, so that the parent is raised when the dialog\\nis raised.\"]\n    SetParent {\n        parent: Option<Proxy<super::xdg_surface::XdgSurface>>,\n    },\n\n    #[doc =\n      \"set surface title\\n\\nSet a short title for the surface.\\n\\nThis string may be used to identify the surface in a task bar,\\nwindow list, or other user interface elements provided by the\\ncompositor.\\n\\nThe string must be encoded in UTF-8.\"]\n    SetTitle {\n        title: String,\n    },\n\n    #[doc =\n      \"set application ID\\n\\nSet an application identifier for the surface.\\n\\nThe app ID identifies the general class of applications to which\\nthe surface belongs. The compositor can use this to group multiple\\nsurfaces together, or to determine how to launch a new application.\\n\\nFor D-Bus activatable applications, the app ID is used as the D-Bus\\nservice name.\\n\\nThe compositor shell will try to group application surfaces together\\nby their app ID.  As a best practice, it is suggested to select app\\nID's that match the basename of the application's .desktop file.\\nFor example, \\\"org.freedesktop.FooViewer\\\" where the .desktop file is\\n\\\"org.freedesktop.FooViewer.desktop\\\".\\n\\nSee the desktop-entry specification [0] for more details on\\napplication identifiers and how they relate to well-known D-Bus\\nnames and .desktop files.\\n\\n[0] http://standards.freedesktop.org/desktop-entry-spec/\"]\n    SetAppId {\n        app_id: String,\n    },\n\n    #[doc =\n      \"show the window menu\\n\\nClients implementing client-side decorations might want to show\\na context menu when right-clicking on the decorations, giving the\\nuser a menu that they can use to maximize or minimize the window.\\n\\nThis request asks the compositor to pop up such a window menu at\\nthe given position, relative to the local surface coordinates of\\nthe parent surface. There are no guarantees as to what menu items\\nthe window menu contains.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event.\"]\n    ShowWindowMenu {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        x: i32,\n        y: i32,\n    },\n\n    #[doc =\n      \"start an interactive move\\n\\nStart an interactive, user-driven move of the surface.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event. The passed\\nserial is used to determine the type of interactive move (touch,\\npointer, etc).\\n\\nThe server may ignore move requests depending on the state of\\nthe surface (e.g. fullscreen or maximized), or if the passed serial\\nis no longer valid.\\n\\nIf triggered, the surface will lose the focus of the device\\n(wl_pointer, wl_touch, etc) used for the move. It is up to the\\ncompositor to visually indicate that the move is taking place, such as\\nupdating a pointer cursor, during the move. There is no guarantee\\nthat the device focus will return when the move is completed.\"]\n    Move {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n    },\n\n    #[doc =\n      \"start an interactive resize\\n\\nStart a user-driven, interactive resize of the surface.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event. The passed\\nserial is used to determine the type of interactive resize (touch,\\npointer, etc).\\n\\nThe server may ignore resize requests depending on the state of\\nthe surface (e.g. fullscreen or maximized).\\n\\nIf triggered, the client will receive configure events with the\\n\\\"resize\\\" state enum value and the expected sizes. See the \\\"resize\\\"\\nenum value for more details about what is required. The client\\nmust also acknowledge configure events using \\\"ack_configure\\\". After\\nthe resize is completed, the client will receive another \\\"configure\\\"\\nevent without the resize state.\\n\\nIf triggered, the surface also will lose the focus of the device\\n(wl_pointer, wl_touch, etc) used for the resize. It is up to the\\ncompositor to visually indicate that the resize is taking place,\\nsuch as updating a pointer cursor, during the resize. There is no\\nguarantee that the device focus will return when the resize is\\ncompleted.\\n\\nThe edges parameter specifies how the surface should be resized,\\nand is one of the values of the resize_edge enum. The compositor\\nmay use this information to update the surface position for\\nexample when dragging the top left corner. The compositor may also\\nuse this information to adapt its behavior, e.g. choose an\\nappropriate cursor image.\"]\n    Resize {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        edges: u32,\n    },\n\n    #[doc =\n      \"ack a configure event\\n\\nWhen a configure event is received, if a client commits the\\nsurface in response to the configure event, then the client\\nmust make an ack_configure request sometime before the commit\\nrequest, passing along the serial of the configure event.\\n\\nFor instance, the compositor might use this information to move\\na surface to the top left only when the client has drawn itself\\nfor the maximized or fullscreen state.\\n\\nIf the client receives multiple configure events before it\\ncan respond to one, it only has to ack the last configure event.\\n\\nA client is not required to commit immediately after sending\\nan ack_configure request - it may even ack_configure several times\\nbefore its next surface commit.\\n\\nThe compositor expects that the most recently received\\nack_configure request at the time of a commit indicates which\\nconfigure event the client is responding to.\"]\n    AckConfigure {\n        serial: u32,\n    },\n\n    #[doc =\n      \"set the new window geometry\\n\\nThe window geometry of a window is its \\\"visible bounds\\\" from the\\nuser's perspective. Client-side decorations often have invisible\\nportions like drop-shadows which should be ignored for the\\npurposes of aligning, placing and constraining windows.\\n\\nThe window geometry is double buffered, and will be applied at the\\ntime wl_surface.commit of the corresponding wl_surface is called.\\n\\nOnce the window geometry of the surface is set once, it is not\\npossible to unset it, and it will remain the same until\\nset_window_geometry is called again, even if a new subsurface or\\nbuffer is attached.\\n\\nIf never set, the value is the full bounds of the surface,\\nincluding any subsurfaces. This updates dynamically on every\\ncommit. This unset mode is meant for extremely simple clients.\\n\\nIf responding to a configure event, the window geometry in here\\nmust respect the sizing negotiations specified by the states in\\nthe configure event.\\n\\nThe arguments are given in the surface local coordinate space of\\nthe wl_surface associated with this xdg_surface.\\n\\nThe width and height must be greater than zero.\"]\n    SetWindowGeometry {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"maximize the window\\n\\nMaximize the surface.\\n\\nAfter requesting that the surface should be maximized, the compositor\\nwill respond by emitting a configure event with the \\\"maximized\\\" state\\nand the required window geometry. The client should then update its\\ncontent, drawing it in a maximized state, i.e. without shadow or other\\ndecoration outside of the window geometry. The client must also\\nacknowledge the configure when committing the new content (see\\nack_configure).\\n\\nIt is up to the compositor to decide how and where to maximize the\\nsurface, for example which output and what region of the screen should\\nbe used.\\n\\nIf the surface was already maximized, the compositor will still emit\\na configure event with the \\\"maximized\\\" state.\"]\n    SetMaximized,\n\n    #[doc =\n      \"unmaximize the window\\n\\nUnmaximize the surface.\\n\\nAfter requesting that the surface should be unmaximized, the compositor\\nwill respond by emitting a configure event without the \\\"maximized\\\"\\nstate. If available, the compositor will include the window geometry\\ndimensions the window had prior to being maximized in the configure\\nrequest. The client must then update its content, drawing it in a\\nregular state, i.e. potentially with shadow, etc. The client must also\\nacknowledge the configure when committing the new content (see\\nack_configure).\\n\\nIt is up to the compositor to position the surface after it was\\nunmaximized; usually the position the surface had before maximizing, if\\napplicable.\\n\\nIf the surface was already not maximized, the compositor will still\\nemit a configure event without the \\\"maximized\\\" state.\"]\n    UnsetMaximized,\n\n    #[doc =\n      \"set the window as fullscreen on a monitor\\n\\nMake the surface fullscreen.\\n\\nYou can specify an output that you would prefer to be fullscreen.\\nIf this value is NULL, it's up to the compositor to choose which\\ndisplay will be used to map this surface.\\n\\nIf the surface doesn't cover the whole output, the compositor will\\nposition the surface in the center of the output and compensate with\\nblack borders filling the rest of the output.\"]\n    SetFullscreen {\n        output: Option<Proxy<super::wl_output::WlOutput>>,\n    },\n\n    #[doc = \"\"]\n    UnsetFullscreen,\n\n    #[doc =\n      \"set the window as minimized\\n\\nRequest that the compositor minimize your surface. There is no\\nway to know if the surface is currently minimized, nor is there\\nany way to unset minimization on this surface.\\n\\nIf you are looking to throttle redrawing when minimized, please\\ninstead use the wl_surface.frame event for this, as this will\\nalso work with live previews on windows in Alt-Tab, Expose or\\nsimilar compositor features.\"]\n    SetMinimized,\n}","parent":null,"children":[{"krate":0,"index":6815},{"krate":0,"index":6817},{"krate":0,"index":6819},{"krate":0,"index":6821},{"krate":0,"index":6823},{"krate":0,"index":6828},{"krate":0,"index":6831},{"krate":0,"index":6835},{"krate":0,"index":6837},{"krate":0,"index":6842},{"krate":0,"index":6844},{"krate":0,"index":6846},{"krate":0,"index":6848},{"krate":0,"index":6850}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6882},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8458411,"byte_end":8458420,"line_start":875,"line_end":875,"column_start":9,"column_end":18},"name":"Configure","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Event::Configure","value":"Event::Configure { width, height, states, serial }","parent":{"krate":0,"index":6881},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6887},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8458981,"byte_end":8458986,"line_start":882,"line_end":882,"column_start":9,"column_end":14},"name":"Close","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Event::Close","value":"Event::Close","parent":{"krate":0,"index":6881},"children":[],"decl_id":null,"docs":"surface wants to be closed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6881},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8457359,"byte_end":8457364,"line_start":873,"line_end":873,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThe configure event asks the client to resize its surface or to\\nchange its state.\\n\\nThe width and height arguments specify a hint to the window\\nabout how its surface should be resized in window geometry\\ncoordinates. See set_window_geometry.\\n\\nIf the width or height arguments are zero, it means the client\\nshould decide its own window dimension. This may happen when the\\ncompositor need to configure the state of the surface but doesn't\\nhave any information about any previous or expected dimension.\\n\\nThe states listed in the event specify how the width/height\\narguments should be interpreted, and possibly how it should be\\ndrawn.\\n\\nClients should arrange their surface for the new size and\\nstates, and then send a ack_configure request with the serial\\nsent in this configure event at some point before committing\\nthe new surface.\\n\\nIf the client receives multiple configure events before it\\ncan respond to one, it is free to discard all but the last\\nevent it received.\"]\n    Configure {\n        width: i32,\n        height: i32,\n        states: Vec<u8>,\n        serial: u32,\n    },\n\n    #[doc =\n      \"surface wants to be closed\\n\\nThe close event is sent by the compositor when the user\\nwants the surface to be closed. This should be equivalent to\\nthe user clicking the close button in client-side decorations,\\nif your application has any...\\n\\nThis is only a request that the user intends to close your\\nwindow. The client may choose to ignore this request, or show\\na dialog to ask the user to save their data...\"]\n    Close,\n}","parent":null,"children":[{"krate":0,"index":6882},{"krate":0,"index":6887}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6902},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8462872,"byte_end":8462882,"line_start":995,"line_end":995,"column_start":16,"column_end":26},"name":"XdgSurface","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::XdgSurface","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6910},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8463216,"byte_end":8463229,"line_start":1005,"line_end":1005,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6911},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8463564,"byte_end":8463571,"line_start":1007,"line_end":1007,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"Destroy the xdg_surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8463949,"byte_end":8463959,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"set_parent","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_parent","value":"pub fn set_parent(&Self, Option<&Proxy<super::xdg_surface::XdgSurface>>) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"set the parent of this surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6913},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8464298,"byte_end":8464307,"line_start":1011,"line_end":1011,"column_start":12,"column_end":21},"name":"set_title","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_title","value":"pub fn set_title(&Self, String) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"set surface title","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6914},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8465260,"byte_end":8465270,"line_start":1013,"line_end":1013,"column_start":12,"column_end":22},"name":"set_app_id","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_app_id","value":"pub fn set_app_id(&Self, String) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"set application ID","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6915},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8465904,"byte_end":8465920,"line_start":1015,"line_end":1015,"column_start":12,"column_end":28},"name":"show_window_menu","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::show_window_menu","value":"pub fn show_window_menu(&Self, &Proxy<super::wl_seat::WlSeat>, u32, i32, i32)\n-> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"show the window menu","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6916},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8466887,"byte_end":8466892,"line_start":1023,"line_end":1023,"column_start":12,"column_end":17},"name":"_move","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::_move","value":"pub fn _move(&Self, &Proxy<super::wl_seat::WlSeat>, u32) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"start an interactive move","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6917},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8468477,"byte_end":8468483,"line_start":1025,"line_end":1025,"column_start":12,"column_end":18},"name":"resize","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::resize","value":"pub fn resize(&Self, &Proxy<super::wl_seat::WlSeat>, u32, u32) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"start an interactive resize","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6918},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8469491,"byte_end":8469504,"line_start":1027,"line_end":1027,"column_start":12,"column_end":25},"name":"ack_configure","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::ack_configure","value":"pub fn ack_configure(&Self, u32) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6919},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8470701,"byte_end":8470720,"line_start":1029,"line_end":1029,"column_start":12,"column_end":31},"name":"set_window_geometry","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_window_geometry","value":"pub fn set_window_geometry(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"set the new window geometry","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6920},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8471557,"byte_end":8471570,"line_start":1031,"line_end":1031,"column_start":12,"column_end":25},"name":"set_maximized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_maximized","value":"pub fn set_maximized(&Self) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"maximize the window","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6921},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8472449,"byte_end":8472464,"line_start":1033,"line_end":1033,"column_start":12,"column_end":27},"name":"unset_maximized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::unset_maximized","value":"pub fn unset_maximized(&Self) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"unmaximize the window","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6922},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8472948,"byte_end":8472962,"line_start":1035,"line_end":1035,"column_start":12,"column_end":26},"name":"set_fullscreen","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_fullscreen","value":"pub fn set_fullscreen(&Self, Option<&Proxy<super::wl_output::WlOutput>>) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"set the window as fullscreen on a monitor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6923},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8473060,"byte_end":8473076,"line_start":1037,"line_end":1037,"column_start":12,"column_end":28},"name":"unset_fullscreen","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::unset_fullscreen","value":"pub fn unset_fullscreen(&Self) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6924},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8473551,"byte_end":8473564,"line_start":1039,"line_end":1039,"column_start":12,"column_end":25},"name":"set_minimized","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::RequestsTrait::set_minimized","value":"pub fn set_minimized(&Self) -> ()","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":"set the window as minimized","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6942},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8476491,"byte_end":8476508,"line_start":1127,"line_end":1127,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6943},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8476604,"byte_end":8476624,"line_start":1129,"line_end":1129,"column_start":15,"column_end":35},"name":"REQ_SET_PARENT_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_PARENT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6944},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8476720,"byte_end":8476739,"line_start":1131,"line_end":1131,"column_start":15,"column_end":34},"name":"REQ_SET_TITLE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_TITLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6945},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8476835,"byte_end":8476855,"line_start":1133,"line_end":1133,"column_start":15,"column_end":35},"name":"REQ_SET_APP_ID_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_APP_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6946},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8476951,"byte_end":8476977,"line_start":1135,"line_end":1135,"column_start":15,"column_end":41},"name":"REQ_SHOW_WINDOW_MENU_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SHOW_WINDOW_MENU_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6947},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477073,"byte_end":8477087,"line_start":1137,"line_end":1137,"column_start":15,"column_end":29},"name":"REQ_MOVE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_MOVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6948},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477183,"byte_end":8477199,"line_start":1139,"line_end":1139,"column_start":15,"column_end":31},"name":"REQ_RESIZE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_RESIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6949},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477295,"byte_end":8477318,"line_start":1141,"line_end":1141,"column_start":15,"column_end":38},"name":"REQ_ACK_CONFIGURE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_ACK_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6950},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477414,"byte_end":8477443,"line_start":1143,"line_end":1143,"column_start":15,"column_end":44},"name":"REQ_SET_WINDOW_GEOMETRY_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_WINDOW_GEOMETRY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6951},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477539,"byte_end":8477562,"line_start":1145,"line_end":1145,"column_start":15,"column_end":38},"name":"REQ_SET_MAXIMIZED_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6952},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477658,"byte_end":8477683,"line_start":1147,"line_end":1147,"column_start":15,"column_end":40},"name":"REQ_UNSET_MAXIMIZED_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_UNSET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6953},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477779,"byte_end":8477803,"line_start":1149,"line_end":1149,"column_start":15,"column_end":39},"name":"REQ_SET_FULLSCREEN_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_FULLSCREEN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6954},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8477899,"byte_end":8477925,"line_start":1151,"line_end":1151,"column_start":15,"column_end":41},"name":"REQ_UNSET_FULLSCREEN_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_UNSET_FULLSCREEN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6955},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8478021,"byte_end":8478044,"line_start":1153,"line_end":1153,"column_start":15,"column_end":38},"name":"REQ_SET_MINIMIZED_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::REQ_SET_MINIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6956},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8478138,"byte_end":8478157,"line_start":1155,"line_end":1155,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6957},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8478251,"byte_end":8478266,"line_start":1157,"line_end":1157,"column_start":15,"column_end":30},"name":"EVT_CLOSE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_surface::EVT_CLOSE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6958},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8480582,"byte_end":8480591,"line_start":1160,"line_end":1160,"column_start":9,"column_end":18},"name":"xdg_popup","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","parent":null,"children":[{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962},{"krate":0,"index":6963},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":14329},{"krate":0,"index":6966},{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6979},{"krate":0,"index":6993},{"krate":0,"index":6996},{"krate":0,"index":7009},{"krate":0,"index":7011},{"krate":0,"index":7017},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7022}],"decl_id":null,"docs":"short-lived, popup surfaces for menus","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6977},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8481219,"byte_end":8481226,"line_start":1169,"line_end":1169,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":6976},"children":[],"decl_id":null,"docs":"remove xdg_popup interface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6976},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8480874,"byte_end":8480881,"line_start":1167,"line_end":1167,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::Request","value":"pub enum Request {\n\n    #[doc =\n      \"remove xdg_popup interface\\n\\nThis destroys the popup. Explicitly destroying the xdg_popup\\nobject will also dismiss the popup, and unmap the surface.\\n\\nIf this xdg_popup is not the \\\"topmost\\\" popup, a protocol error\\nwill be sent.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":6977}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6994},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8483246,"byte_end":8483255,"line_start":1230,"line_end":1230,"column_start":9,"column_end":18},"name":"PopupDone","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::Event::PopupDone","value":"Event::PopupDone","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":"popup interaction is done","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6993},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8483040,"byte_end":8483045,"line_start":1228,"line_end":1228,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::Event","value":"pub enum Event {\n\n    #[doc =\n      \"popup interaction is done\\n\\nThe popup_done event is sent out when a popup is dismissed by the\\ncompositor. The client should destroy the xdg_popup object at this\\npoint.\"]\n    PopupDone,\n}","parent":null,"children":[{"krate":0,"index":6994}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7009},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8484850,"byte_end":8484858,"line_start":1284,"line_end":1284,"column_start":16,"column_end":24},"name":"XdgPopup","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::XdgPopup","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7017},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8485186,"byte_end":8485199,"line_start":1294,"line_end":1294,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":7018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7018},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8485570,"byte_end":8485577,"line_start":1296,"line_end":1296,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":7017},"children":[],"decl_id":null,"docs":"remove xdg_popup interface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7021},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8485843,"byte_end":8485860,"line_start":1305,"line_end":1305,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7022},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8485954,"byte_end":8485974,"line_start":1307,"line_end":1307,"column_start":15,"column_end":35},"name":"EVT_POPUP_DONE_SINCE","qualname":"::unstable::xdg_shell::v5::generated::client::xdg_popup::EVT_POPUP_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6617},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v6","qualname":"::unstable::xdg_shell::v6","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":7156},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8486693,"byte_end":8486715,"line_start":16,"line_end":16,"column_start":16,"column_end":38},"name":"zxdg_shell_v6_requests","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_shell_v6_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7158},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8487600,"byte_end":8487620,"line_start":38,"line_end":38,"column_start":16,"column_end":36},"name":"zxdg_shell_v6_events","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_shell_v6_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7160},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8487824,"byte_end":8487847,"line_start":43,"line_end":43,"column_start":16,"column_end":39},"name":"zxdg_shell_v6_interface","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_shell_v6_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7161},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8488135,"byte_end":8488162,"line_start":51,"line_end":51,"column_start":16,"column_end":43},"name":"zxdg_positioner_v6_requests","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_positioner_v6_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7163},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8489573,"byte_end":8489601,"line_start":88,"line_end":88,"column_start":16,"column_end":44},"name":"zxdg_positioner_v6_interface","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_positioner_v6_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7168},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8490319,"byte_end":8490343,"line_start":103,"line_end":103,"column_start":16,"column_end":40},"name":"zxdg_surface_v6_requests","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_surface_v6_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7170},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8491425,"byte_end":8491447,"line_start":130,"line_end":130,"column_start":16,"column_end":38},"name":"zxdg_surface_v6_events","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_surface_v6_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7172},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8491656,"byte_end":8491681,"line_start":135,"line_end":135,"column_start":16,"column_end":41},"name":"zxdg_surface_v6_interface","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_surface_v6_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7183},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8492921,"byte_end":8492946,"line_start":162,"line_end":162,"column_start":16,"column_end":41},"name":"zxdg_toplevel_v6_requests","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_toplevel_v6_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7185},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8495871,"byte_end":8495894,"line_start":234,"line_end":234,"column_start":16,"column_end":39},"name":"zxdg_toplevel_v6_events","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_toplevel_v6_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7187},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8496315,"byte_end":8496341,"line_start":246,"line_end":246,"column_start":16,"column_end":42},"name":"zxdg_toplevel_v6_interface","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_toplevel_v6_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7190},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8496811,"byte_end":8496833,"line_start":258,"line_end":258,"column_start":16,"column_end":38},"name":"zxdg_popup_v6_requests","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_popup_v6_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7192},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8497273,"byte_end":8497293,"line_start":270,"line_end":270,"column_start":16,"column_end":36},"name":"zxdg_popup_v6_events","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_popup_v6_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":7194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_interfaces.rs","byte_start":8497720,"byte_end":8497743,"line_start":282,"line_end":282,"column_start":16,"column_end":39},"name":"zxdg_popup_v6_interface","qualname":"::unstable::xdg_shell::v6::generated::c_interfaces::zxdg_popup_v6_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7195},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8498295,"byte_end":8498308,"line_start":2,"line_end":2,"column_start":9,"column_end":22},"name":"zxdg_shell_v6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","parent":null,"children":[{"krate":0,"index":7196},{"krate":0,"index":7197},{"krate":0,"index":7198},{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7202},{"krate":0,"index":14403},{"krate":0,"index":7203},{"krate":0,"index":7204},{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207},{"krate":0,"index":7208},{"krate":0,"index":7209},{"krate":0,"index":7210},{"krate":0,"index":7211},{"krate":0,"index":7212},{"krate":0,"index":7749},{"krate":0,"index":7775},{"krate":0,"index":7773},{"krate":0,"index":7771},{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7213},{"krate":0,"index":7216},{"krate":0,"index":7226},{"krate":0,"index":7243},{"krate":0,"index":7246},{"krate":0,"index":7259},{"krate":0,"index":7261},{"krate":0,"index":7267},{"krate":0,"index":7274},{"krate":0,"index":7281},{"krate":0,"index":7282},{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7285}],"decl_id":null,"docs":"create desktop-style surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7750},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8498722,"byte_end":8498726,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"Role","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error::Role","value":"Error::Role","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"given wl_surface has another role\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7753},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8498799,"byte_end":8498814,"line_start":15,"line_end":15,"column_start":9,"column_end":24},"name":"DefunctSurfaces","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error::DefunctSurfaces","value":"Error::DefunctSurfaces","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"xdg_shell was destroyed before children\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7756},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8498902,"byte_end":8498920,"line_start":17,"line_end":17,"column_start":9,"column_end":27},"name":"NotTheTopmostPopup","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error::NotTheTopmostPopup","value":"Error::NotTheTopmostPopup","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"the client tried to map or destroy a non-topmost popup\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7759},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499006,"byte_end":8499024,"line_start":19,"line_end":19,"column_start":9,"column_end":27},"name":"InvalidPopupParent","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error::InvalidPopupParent","value":"Error::InvalidPopupParent","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"the client specified an invalid popup parent surface\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7762},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499102,"byte_end":8499121,"line_start":21,"line_end":21,"column_start":9,"column_end":28},"name":"InvalidSurfaceState","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error::InvalidSurfaceState","value":"Error::InvalidSurfaceState","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"the client provided an invalid surface state\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7765},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499196,"byte_end":8499213,"line_start":23,"line_end":23,"column_start":9,"column_end":26},"name":"InvalidPositioner","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error::InvalidPositioner","value":"Error::InvalidPositioner","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"the client provided an invalid positioner\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7749},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8498653,"byte_end":8498658,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Error","value":"pub enum Error {\n\n    #[doc = \"given wl_surface has another role\"]\n    Role = ,\n\n    #[doc = \"xdg_shell was destroyed before children\"]\n    DefunctSurfaces = ,\n\n    #[doc = \"the client tried to map or destroy a non-topmost popup\"]\n    NotTheTopmostPopup = ,\n\n    #[doc = \"the client specified an invalid popup parent surface\"]\n    InvalidPopupParent = ,\n\n    #[doc = \"the client provided an invalid surface state\"]\n    InvalidSurfaceState = ,\n\n    #[doc = \"the client provided an invalid positioner\"]\n    InvalidPositioner = ,\n}","parent":null,"children":[{"krate":0,"index":7750},{"krate":0,"index":7753},{"krate":0,"index":7756},{"krate":0,"index":7759},{"krate":0,"index":7762},{"krate":0,"index":7765}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8498582,"byte_end":8498594,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7214},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499257,"byte_end":8499265,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7215},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499696,"byte_end":8499702,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7217},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8500104,"byte_end":8500111,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":7216},"children":[],"decl_id":null,"docs":"destroy xdg_shell","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7219},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8500351,"byte_end":8500367,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"CreatePositioner","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Request::CreatePositioner","value":"Request::CreatePositioner { id }","parent":{"krate":0,"index":7216},"children":[],"decl_id":null,"docs":"create a positioner object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7221},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8501068,"byte_end":8501081,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"name":"GetXdgSurface","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Request::GetXdgSurface","value":"Request::GetXdgSurface { id, surface }","parent":{"krate":0,"index":7216},"children":[],"decl_id":null,"docs":"create a shell surface from a surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7224},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8501390,"byte_end":8501394,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"Pong","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Request::Pong","value":"Request::Pong { serial }","parent":{"krate":0,"index":7216},"children":[],"decl_id":null,"docs":"respond to a ping event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7216},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499773,"byte_end":8499780,"line_start":41,"line_end":41,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy xdg_shell\\n\\nDestroy this xdg_shell object.\\n\\nDestroying a bound xdg_shell object while there are surfaces\\nstill alive created by this xdg_shell object instance is illegal\\nand will result in a protocol error.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a positioner object\\n\\nCreate a positioner object. A positioner object is used to position\\nsurfaces relative to some parent surface. See the interface description\\nand xdg_surface.get_popup for details.\"]\n    CreatePositioner {\n        id: Proxy<super::zxdg_positioner_v6::ZxdgPositionerV6>,\n    },\n\n    #[doc =\n      \"create a shell surface from a surface\\n\\nThis creates an xdg_surface for the given surface. While xdg_surface\\nitself is not a role, the corresponding surface may only be assigned\\na role extending xdg_surface, such as xdg_toplevel or xdg_popup.\\n\\nThis creates an xdg_surface for the given surface. An xdg_surface is\\nused as basis to define a role to a given surface, such as xdg_toplevel\\nor xdg_popup. It also manages functionality shared between xdg_surface\\nbased surface roles.\\n\\nSee the documentation of xdg_surface for more details about what an\\nxdg_surface is and how it is used.\"]\n    GetXdgSurface {\n        id: Proxy<super::zxdg_surface_v6::ZxdgSurfaceV6>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"respond to a ping event\\n\\nA client must respond to a ping event with a pong request or\\nthe client may be deemed unresponsive. See xdg_shell.ping.\"]\n    Pong {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":7217},{"krate":0,"index":7219},{"krate":0,"index":7221},{"krate":0,"index":7224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7244},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8506445,"byte_end":8506449,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"name":"Ping","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Event::Ping","value":"Event::Ping { serial }","parent":{"krate":0,"index":7243},"children":[],"decl_id":null,"docs":"check if the client is alive","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7243},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8505814,"byte_end":8505819,"line_start":171,"line_end":171,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::Event","value":"pub enum Event {\n\n    #[doc =\n      \"check if the client is alive\\n\\nThe ping event asks the client if it's still alive. Pass the\\nserial specified in the event back to the compositor by sending\\na \\\"pong\\\" request back with the specified serial. See xdg_shell.ping.\\n\\nCompositors can use this to determine if the client is still\\nalive. It's unspecified what will happen if the client doesn't\\nrespond to the ping request, or in what timeframe. Clients should\\ntry to respond in a reasonable amount of time.\\n\\nA compositor is free to ping in any way it wants, but a client must\\nalways respond to any xdg_shell object it created.\"]\n    Ping {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":7244}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7259},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8508613,"byte_end":8508624,"line_start":241,"line_end":241,"column_start":16,"column_end":27},"name":"ZxdgShellV6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::ZxdgShellV6","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7267},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8508963,"byte_end":8508976,"line_start":251,"line_end":251,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":7268},{"krate":0,"index":7269},{"krate":0,"index":7271},{"krate":0,"index":7273}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7268},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8509333,"byte_end":8509340,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":"destroy xdg_shell","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7269},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8509596,"byte_end":8509613,"line_start":255,"line_end":255,"column_start":12,"column_end":29},"name":"create_positioner","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::RequestsTrait::create_positioner","value":"pub fn create_positioner<F>(&Self, F)\n-> Result<Proxy<super::zxdg_positioner_v6::ZxdgPositionerV6>, ()> where\nF: FnOnce(NewProxy<super::zxdg_positioner_v6::ZxdgPositionerV6>) ->\nProxy<super::zxdg_positioner_v6::ZxdgPositionerV6>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":"create a positioner object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7271},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8510540,"byte_end":8510555,"line_start":264,"line_end":264,"column_start":12,"column_end":27},"name":"get_xdg_surface","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::RequestsTrait::get_xdg_surface","value":"pub fn get_xdg_surface<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::zxdg_surface_v6::ZxdgSurfaceV6>, ()> where\nF: FnOnce(NewProxy<super::zxdg_surface_v6::ZxdgSurfaceV6>) ->\nProxy<super::zxdg_surface_v6::ZxdgSurfaceV6>","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":"create a shell surface from a surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7273},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8511079,"byte_end":8511083,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"pong","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::RequestsTrait::pong","value":"pub fn pong(&Self, u32) -> ()","parent":{"krate":0,"index":7267},"children":[],"decl_id":null,"docs":"respond to a ping event","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7281},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8512625,"byte_end":8512642,"line_start":317,"line_end":317,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7282},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8512738,"byte_end":8512765,"line_start":319,"line_end":319,"column_start":15,"column_end":42},"name":"REQ_CREATE_POSITIONER_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::REQ_CREATE_POSITIONER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7283},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8512861,"byte_end":8512886,"line_start":321,"line_end":321,"column_start":15,"column_end":40},"name":"REQ_GET_XDG_SURFACE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::REQ_GET_XDG_SURFACE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7284},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8512982,"byte_end":8512996,"line_start":323,"line_end":323,"column_start":15,"column_end":29},"name":"REQ_PONG_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::REQ_PONG_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7285},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8513090,"byte_end":8513104,"line_start":325,"line_end":325,"column_start":15,"column_end":29},"name":"EVT_PING_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_shell_v6::EVT_PING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7286},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514250,"byte_end":8514268,"line_start":328,"line_end":328,"column_start":9,"column_end":27},"name":"zxdg_positioner_v6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","parent":null,"children":[{"krate":0,"index":7287},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7291},{"krate":0,"index":7292},{"krate":0,"index":7293},{"krate":0,"index":14431},{"krate":0,"index":7294},{"krate":0,"index":7295},{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7299},{"krate":0,"index":7300},{"krate":0,"index":7301},{"krate":0,"index":7302},{"krate":0,"index":7303},{"krate":0,"index":7776},{"krate":0,"index":7787},{"krate":0,"index":7785},{"krate":0,"index":7783},{"krate":0,"index":7780},{"krate":0,"index":7781},{"krate":0,"index":7304},{"krate":0,"index":7788},{"krate":0,"index":7810},{"krate":0,"index":7806},{"krate":0,"index":7807},{"krate":0,"index":7803},{"krate":0,"index":7804},{"krate":0,"index":7801},{"krate":0,"index":7795},{"krate":0,"index":7793},{"krate":0,"index":7790},{"krate":0,"index":7811},{"krate":0,"index":7820},{"krate":0,"index":7822},{"krate":0,"index":7824},{"krate":0,"index":7826},{"krate":0,"index":7828},{"krate":0,"index":7839},{"krate":0,"index":7842},{"krate":0,"index":7844},{"krate":0,"index":7847},{"krate":0,"index":7849},{"krate":0,"index":7852},{"krate":0,"index":7854},{"krate":0,"index":7857},{"krate":0,"index":7859},{"krate":0,"index":7862},{"krate":0,"index":7865},{"krate":0,"index":7307},{"krate":0,"index":7894},{"krate":0,"index":7916},{"krate":0,"index":7912},{"krate":0,"index":7913},{"krate":0,"index":7909},{"krate":0,"index":7910},{"krate":0,"index":7907},{"krate":0,"index":7901},{"krate":0,"index":7899},{"krate":0,"index":7896},{"krate":0,"index":7917},{"krate":0,"index":7926},{"krate":0,"index":7928},{"krate":0,"index":7930},{"krate":0,"index":7932},{"krate":0,"index":7934},{"krate":0,"index":7945},{"krate":0,"index":7948},{"krate":0,"index":7950},{"krate":0,"index":7953},{"krate":0,"index":7955},{"krate":0,"index":7958},{"krate":0,"index":7960},{"krate":0,"index":7963},{"krate":0,"index":7965},{"krate":0,"index":7968},{"krate":0,"index":7971},{"krate":0,"index":7310},{"krate":0,"index":8000},{"krate":0,"index":8022},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8015},{"krate":0,"index":8016},{"krate":0,"index":8013},{"krate":0,"index":8007},{"krate":0,"index":8005},{"krate":0,"index":8002},{"krate":0,"index":8023},{"krate":0,"index":8034},{"krate":0,"index":8036},{"krate":0,"index":8038},{"krate":0,"index":8040},{"krate":0,"index":8042},{"krate":0,"index":8055},{"krate":0,"index":8058},{"krate":0,"index":8060},{"krate":0,"index":8063},{"krate":0,"index":8065},{"krate":0,"index":8068},{"krate":0,"index":8070},{"krate":0,"index":8073},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":7313},{"krate":0,"index":7316},{"krate":0,"index":7336},{"krate":0,"index":7356},{"krate":0,"index":7357},{"krate":0,"index":7370},{"krate":0,"index":7372},{"krate":0,"index":7378},{"krate":0,"index":7386},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7399},{"krate":0,"index":7400}],"decl_id":null,"docs":"child surface positioner","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7777},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514671,"byte_end":8514683,"line_start":339,"line_end":339,"column_start":9,"column_end":21},"name":"InvalidInput","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Error::InvalidInput","value":"Error::InvalidInput","parent":{"krate":0,"index":7776},"children":[],"decl_id":null,"docs":"invalid input provided\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7776},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514613,"byte_end":8514618,"line_start":337,"line_end":337,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Error","value":"pub enum Error {\n\n    #[doc = \"invalid input provided\"]\n    InvalidInput = ,\n}","parent":null,"children":[{"krate":0,"index":7777}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514542,"byte_end":8514554,"line_start":335,"line_end":335,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7305},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514727,"byte_end":8514735,"line_start":342,"line_end":342,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7306},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514907,"byte_end":8514913,"line_start":348,"line_end":348,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7788},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514998,"byte_end":8515004,"line_start":352,"line_end":352,"column_start":28,"column_end":34},"name":"Anchor","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor","value":"Anchor {  }","parent":null,"children":[{"krate":0,"index":7789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7829},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515068,"byte_end":8515072,"line_start":352,"line_end":352,"column_start":98,"column_end":102},"name":"None","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor::None","value":"Anchor","parent":{"krate":0,"index":7828},"children":[],"decl_id":null,"docs":"the center of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7830},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515136,"byte_end":8515139,"line_start":352,"line_end":352,"column_start":166,"column_end":169},"name":"Top","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor::Top","value":"Anchor","parent":{"krate":0,"index":7828},"children":[],"decl_id":null,"docs":"the top edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7831},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515206,"byte_end":8515212,"line_start":352,"line_end":352,"column_start":236,"column_end":242},"name":"Bottom","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor::Bottom","value":"Anchor","parent":{"krate":0,"index":7828},"children":[],"decl_id":null,"docs":"the bottom edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7832},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515277,"byte_end":8515281,"line_start":352,"line_end":352,"column_start":307,"column_end":311},"name":"Left","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor::Left","value":"Anchor","parent":{"krate":0,"index":7828},"children":[],"decl_id":null,"docs":"the left edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7833},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515347,"byte_end":8515352,"line_start":352,"line_end":352,"column_start":377,"column_end":382},"name":"Right","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor::Right","value":"Anchor","parent":{"krate":0,"index":7828},"children":[],"decl_id":null,"docs":"the right edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7308},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515396,"byte_end":8515404,"line_start":354,"line_end":354,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Anchor>::from_raw","value":"pub fn from_raw(u32) -> Option<Anchor>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7309},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515506,"byte_end":8515512,"line_start":357,"line_end":357,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Anchor>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7894},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515596,"byte_end":8515603,"line_start":361,"line_end":361,"column_start":28,"column_end":35},"name":"Gravity","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity","value":"Gravity {  }","parent":null,"children":[{"krate":0,"index":7895}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7935},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515660,"byte_end":8515664,"line_start":361,"line_end":361,"column_start":92,"column_end":96},"name":"None","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity::None","value":"Gravity","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":"center over the anchor edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7936},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515722,"byte_end":8515725,"line_start":361,"line_end":361,"column_start":154,"column_end":157},"name":"Top","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity::Top","value":"Gravity","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":"position above the anchor edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7937},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515783,"byte_end":8515789,"line_start":361,"line_end":361,"column_start":215,"column_end":221},"name":"Bottom","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity::Bottom","value":"Gravity","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":"position below the anchor edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7938},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515856,"byte_end":8515860,"line_start":361,"line_end":361,"column_start":288,"column_end":292},"name":"Left","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity::Left","value":"Gravity","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":"position to the left of the anchor edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7939},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515928,"byte_end":8515933,"line_start":361,"line_end":361,"column_start":360,"column_end":365},"name":"Right","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity::Right","value":"Gravity","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":"position to the right of the anchor edge\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7311},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515978,"byte_end":8515986,"line_start":363,"line_end":363,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Gravity>::from_raw","value":"pub fn from_raw(u32) -> Option<Gravity>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7312},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8516090,"byte_end":8516096,"line_start":366,"line_end":366,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Gravity>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8000},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8516785,"byte_end":8516805,"line_start":370,"line_end":370,"column_start":633,"column_end":653},"name":"ConstraintAdjustment","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment","value":"ConstraintAdjustment {  }","parent":null,"children":[{"krate":0,"index":8001}],"decl_id":null,"docs":"constraint adjustments","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8043},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8517010,"byte_end":8517014,"line_start":370,"line_end":370,"column_start":858,"column_end":862},"name":"None","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::None","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"don't move the child surface when constrained","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8044},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8517596,"byte_end":8517602,"line_start":370,"line_end":370,"column_start":1444,"column_end":1450},"name":"SlideX","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::SlideX","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"move along the x axis until unconstrained","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8045},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8518184,"byte_end":8518190,"line_start":370,"line_end":370,"column_start":2032,"column_end":2038},"name":"SlideY","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::SlideY","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"move along the y axis until unconstrained","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8046},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8518671,"byte_end":8518676,"line_start":370,"line_end":370,"column_start":2519,"column_end":2524},"name":"FlipX","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::FlipX","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"invert the anchor and gravity on the x axis","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8047},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519159,"byte_end":8519164,"line_start":370,"line_end":370,"column_start":3007,"column_end":3012},"name":"FlipY","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::FlipY","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"invert the anchor and gravity on the y axis","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8048},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519299,"byte_end":8519306,"line_start":370,"line_end":370,"column_start":3147,"column_end":3154},"name":"ResizeX","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::ResizeX","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"horizontally resize the surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8049},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519437,"byte_end":8519444,"line_start":370,"line_end":370,"column_start":3285,"column_end":3292},"name":"ResizeY","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment::ResizeY","value":"ConstraintAdjustment","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":"vertically resize the surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7314},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519503,"byte_end":8519511,"line_start":372,"line_end":372,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ConstraintAdjustment>::from_raw","value":"pub fn from_raw(u32) -> Option<ConstraintAdjustment>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7315},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519641,"byte_end":8519647,"line_start":375,"line_end":375,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ConstraintAdjustment>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7317},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519935,"byte_end":8519942,"line_start":381,"line_end":381,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"destroy the xdg_positioner object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7319},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8520294,"byte_end":8520301,"line_start":383,"line_end":383,"column_start":9,"column_end":16},"name":"SetSize","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::SetSize","value":"Request::SetSize { width, height }","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"set the size of the to-be positioned rectangle","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7322},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8520932,"byte_end":8520945,"line_start":385,"line_end":385,"column_start":9,"column_end":22},"name":"SetAnchorRect","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::SetAnchorRect","value":"Request::SetAnchorRect { x, y, width, height }","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"set the anchor rectangle within the parent surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7327},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8521684,"byte_end":8521693,"line_start":392,"line_end":392,"column_start":9,"column_end":18},"name":"SetAnchor","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::SetAnchor","value":"Request::SetAnchor { anchor }","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"set anchor rectangle anchor edges","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7329},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8522239,"byte_end":8522249,"line_start":394,"line_end":394,"column_start":9,"column_end":19},"name":"SetGravity","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::SetGravity","value":"Request::SetGravity { gravity }","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"set child surface gravity","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7331},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8523011,"byte_end":8523034,"line_start":396,"line_end":396,"column_start":9,"column_end":32},"name":"SetConstraintAdjustment","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::SetConstraintAdjustment","value":"Request::SetConstraintAdjustment { constraint_adjustment }","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"set the adjustment to be done when constrained","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7333},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8523780,"byte_end":8523789,"line_start":398,"line_end":398,"column_start":9,"column_end":18},"name":"SetOffset","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request::SetOffset","value":"Request::SetOffset { x, y }","parent":{"krate":0,"index":7316},"children":[],"decl_id":null,"docs":"set surface position offset","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7316},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519717,"byte_end":8519724,"line_start":379,"line_end":379,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_positioner object\\n\\nNotify the compositor that the xdg_positioner will no longer be used.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the size of the to-be positioned rectangle\\n\\nSet the size of the surface that is to be positioned with the positioner\\nobject. The size is in surface-local coordinates and corresponds to the\\nwindow geometry. See xdg_surface.set_window_geometry.\\n\\nIf a zero or negative size is set the invalid_input error is raised.\"]\n    SetSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"set the anchor rectangle within the parent surface\\n\\nSpecify the anchor rectangle within the parent surface that the child\\nsurface will be placed relative to. The rectangle is relative to the\\nwindow geometry as defined by xdg_surface.set_window_geometry of the\\nparent surface. The rectangle must be at least 1x1 large.\\n\\nWhen the xdg_positioner object is used to position a child surface, the\\nanchor rectangle may not extend outside the window geometry of the\\npositioned child's parent surface.\\n\\nIf a zero or negative size is set the invalid_input error is raised.\"]\n    SetAnchorRect {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"set anchor rectangle anchor edges\\n\\nDefines a set of edges for the anchor rectangle. These are used to\\nderive an anchor point that the child surface will be positioned\\nrelative to. If two orthogonal edges are specified (e.g. 'top' and\\n'left'), then the anchor point will be the intersection of the edges\\n(e.g. the top left position of the rectangle); otherwise, the derived\\nanchor point will be centered on the specified edge, or in the center of\\nthe anchor rectangle if no edge is specified.\\n\\nIf two parallel anchor edges are specified (e.g. 'left' and 'right'),\\nthe invalid_input error is raised.\"]\n    SetAnchor {\n        anchor: Anchor,\n    },\n\n    #[doc =\n      \"set child surface gravity\\n\\nDefines in what direction a surface should be positioned, relative to\\nthe anchor point of the parent surface. If two orthogonal gravities are\\nspecified (e.g. 'bottom' and 'right'), then the child surface will be\\nplaced in the specified direction; otherwise, the child surface will be\\ncentered over the anchor point on any axis that had no gravity\\nspecified.\\n\\nIf two parallel gravities are specified (e.g. 'left' and 'right'), the\\ninvalid_input error is raised.\"]\n    SetGravity {\n        gravity: Gravity,\n    },\n\n    #[doc =\n      \"set the adjustment to be done when constrained\\n\\nSpecify how the window should be positioned if the originally intended\\nposition caused the surface to be constrained, meaning at least\\npartially outside positioning boundaries set by the compositor. The\\nadjustment is set by constructing a bitmask describing the adjustment to\\nbe made when the surface is constrained on that axis.\\n\\nIf no bit for one axis is set, the compositor will assume that the child\\nsurface should not change its position on that axis when constrained.\\n\\nIf more than one bit for one axis is set, the order of how adjustments\\nare applied is specified in the corresponding adjustment descriptions.\\n\\nThe default adjustment is none.\"]\n    SetConstraintAdjustment {\n        constraint_adjustment: u32,\n    },\n\n    #[doc =\n      \"set surface position offset\\n\\nSpecify the surface position offset relative to the position of the\\nanchor on the anchor rectangle and the anchor on the surface. For\\nexample if the anchor of the anchor rectangle is at (x, y), the surface\\nhas the gravity bottom|right, and the offset is (ox, oy), the calculated\\nsurface position will be (x + ox, y + oy). The offset position of the\\nsurface is the one used for constraint testing. See\\nset_constraint_adjustment.\\n\\nAn example use case is placing a popup menu on top of a user interface\\nelement, while aligning the user interface element of the parent surface\\nwith some user interface element placed somewhere in the popup surface.\"]\n    SetOffset {\n        x: i32,\n        y: i32,\n    },\n}","parent":null,"children":[{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7322},{"krate":0,"index":7327},{"krate":0,"index":7329},{"krate":0,"index":7331},{"krate":0,"index":7333}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7356},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8530855,"byte_end":8530860,"line_start":585,"line_end":585,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7370},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8532160,"byte_end":8532176,"line_start":628,"line_end":628,"column_start":16,"column_end":32},"name":"ZxdgPositionerV6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ZxdgPositionerV6","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7378},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8532530,"byte_end":8532543,"line_start":638,"line_end":638,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7385}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7379},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8532787,"byte_end":8532794,"line_start":640,"line_end":640,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"destroy the xdg_positioner object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7380},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8533162,"byte_end":8533170,"line_start":642,"line_end":642,"column_start":12,"column_end":20},"name":"set_size","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::set_size","value":"pub fn set_size(&Self, i32, i32) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"set the size of the to-be positioned rectangle","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7381},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8533814,"byte_end":8533829,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"set_anchor_rect","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::set_anchor_rect","value":"pub fn set_anchor_rect(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"set the anchor rectangle within the parent surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8534524,"byte_end":8534534,"line_start":646,"line_end":646,"column_start":12,"column_end":22},"name":"set_anchor","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::set_anchor","value":"pub fn set_anchor(&Self, Anchor) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"set anchor rectangle anchor edges","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7383},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8535093,"byte_end":8535104,"line_start":648,"line_end":648,"column_start":12,"column_end":23},"name":"set_gravity","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::set_gravity","value":"pub fn set_gravity(&Self, Gravity) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"set child surface gravity","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7384},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8535879,"byte_end":8535904,"line_start":650,"line_end":650,"column_start":12,"column_end":37},"name":"set_constraint_adjustment","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::set_constraint_adjustment","value":"pub fn set_constraint_adjustment(&Self, u32) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"set the adjustment to be done when constrained","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7385},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8536663,"byte_end":8536673,"line_start":652,"line_end":652,"column_start":12,"column_end":22},"name":"set_offset","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::RequestsTrait::set_offset","value":"pub fn set_offset(&Self, i32, i32) -> ()","parent":{"krate":0,"index":7378},"children":[],"decl_id":null,"docs":"set surface position offset","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7394},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538178,"byte_end":8538195,"line_start":695,"line_end":695,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7395},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538291,"byte_end":8538309,"line_start":697,"line_end":697,"column_start":15,"column_end":33},"name":"REQ_SET_SIZE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_SET_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7396},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538405,"byte_end":8538430,"line_start":699,"line_end":699,"column_start":15,"column_end":40},"name":"REQ_SET_ANCHOR_RECT_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_SET_ANCHOR_RECT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7397},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538526,"byte_end":8538546,"line_start":701,"line_end":701,"column_start":15,"column_end":35},"name":"REQ_SET_ANCHOR_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_SET_ANCHOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7398},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538642,"byte_end":8538663,"line_start":703,"line_end":703,"column_start":15,"column_end":36},"name":"REQ_SET_GRAVITY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_SET_GRAVITY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7399},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538759,"byte_end":8538794,"line_start":705,"line_end":705,"column_start":15,"column_end":50},"name":"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7400},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8538890,"byte_end":8538910,"line_start":707,"line_end":707,"column_start":15,"column_end":35},"name":"REQ_SET_OFFSET_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::REQ_SET_OFFSET_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7401},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540435,"byte_end":8540450,"line_start":710,"line_end":710,"column_start":9,"column_end":24},"name":"zxdg_surface_v6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","parent":null,"children":[{"krate":0,"index":7402},{"krate":0,"index":7403},{"krate":0,"index":7404},{"krate":0,"index":7405},{"krate":0,"index":7406},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":14459},{"krate":0,"index":7409},{"krate":0,"index":7410},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7415},{"krate":0,"index":7416},{"krate":0,"index":7417},{"krate":0,"index":7418},{"krate":0,"index":8116},{"krate":0,"index":8133},{"krate":0,"index":8131},{"krate":0,"index":8129},{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":7419},{"krate":0,"index":7422},{"krate":0,"index":7438},{"krate":0,"index":7456},{"krate":0,"index":7459},{"krate":0,"index":7472},{"krate":0,"index":7474},{"krate":0,"index":7480},{"krate":0,"index":7488},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500},{"krate":0,"index":7501}],"decl_id":null,"docs":"desktop user interface surface base interface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8117},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540811,"byte_end":8540825,"line_start":720,"line_end":720,"column_start":9,"column_end":23},"name":"NotConstructed","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Error::NotConstructed","value":"Error::NotConstructed","parent":{"krate":0,"index":8116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8120},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540839,"byte_end":8540857,"line_start":721,"line_end":721,"column_start":9,"column_end":27},"name":"AlreadyConstructed","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Error::AlreadyConstructed","value":"Error::AlreadyConstructed","parent":{"krate":0,"index":8116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8123},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540871,"byte_end":8540889,"line_start":722,"line_end":722,"column_start":9,"column_end":27},"name":"UnconfiguredBuffer","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Error::UnconfiguredBuffer","value":"Error::UnconfiguredBuffer","parent":{"krate":0,"index":8116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8116},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540795,"byte_end":8540800,"line_start":719,"line_end":719,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Error","value":"pub enum Error {\n    NotConstructed = ,\n    AlreadyConstructed = ,\n    UnconfiguredBuffer = ,\n}","parent":null,"children":[{"krate":0,"index":8117},{"krate":0,"index":8120},{"krate":0,"index":8123}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540724,"byte_end":8540736,"line_start":717,"line_end":717,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7420},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540933,"byte_end":8540941,"line_start":725,"line_end":725,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7421},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8541223,"byte_end":8541229,"line_start":733,"line_end":733,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7423},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8541551,"byte_end":8541558,"line_start":739,"line_end":739,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":"destroy the xdg_surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7425},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8541858,"byte_end":8541869,"line_start":741,"line_end":741,"column_start":9,"column_end":20},"name":"GetToplevel","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Request::GetToplevel","value":"Request::GetToplevel { id }","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":"assign the xdg_toplevel surface role","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7427},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8542230,"byte_end":8542238,"line_start":745,"line_end":745,"column_start":9,"column_end":17},"name":"GetPopup","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Request::GetPopup","value":"Request::GetPopup { id, parent, positioner }","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":"assign the xdg_popup surface role","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7431},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8543704,"byte_end":8543721,"line_start":751,"line_end":751,"column_start":9,"column_end":26},"name":"SetWindowGeometry","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Request::SetWindowGeometry","value":"Request::SetWindowGeometry { x, y, width, height }","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":"set the new window geometry","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7436},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8544795,"byte_end":8544807,"line_start":758,"line_end":758,"column_start":9,"column_end":21},"name":"AckConfigure","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Request::AckConfigure","value":"Request::AckConfigure { serial }","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7422},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8541300,"byte_end":8541307,"line_start":737,"line_end":737,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_surface\\n\\nDestroy the xdg_surface object. An xdg_surface must only be destroyed\\nafter its role object has been destroyed.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"assign the xdg_toplevel surface role\\n\\nThis creates an xdg_toplevel object for the given xdg_surface and gives\\nthe associated wl_surface the xdg_toplevel role.\\n\\nSee the documentation of xdg_toplevel for more details about what an\\nxdg_toplevel is and how it is used.\"]\n    GetToplevel {\n        id: Proxy<super::zxdg_toplevel_v6::ZxdgToplevelV6>,\n    },\n\n    #[doc =\n      \"assign the xdg_popup surface role\\n\\nThis creates an xdg_popup object for the given xdg_surface and gives the\\nassociated wl_surface the xdg_popup role.\\n\\nSee the documentation of xdg_popup for more details about what an\\nxdg_popup is and how it is used.\"]\n    GetPopup {\n        id: Proxy<super::zxdg_popup_v6::ZxdgPopupV6>,\n        parent: Proxy<super::zxdg_surface_v6::ZxdgSurfaceV6>,\n        positioner: Proxy<super::zxdg_positioner_v6::ZxdgPositionerV6>,\n    },\n\n    #[doc =\n      \"set the new window geometry\\n\\nThe window geometry of a surface is its \\\"visible bounds\\\" from the\\nuser's perspective. Client-side decorations often have invisible\\nportions like drop-shadows which should be ignored for the\\npurposes of aligning, placing and constraining windows.\\n\\nThe window geometry is double buffered, and will be applied at the\\ntime wl_surface.commit of the corresponding wl_surface is called.\\n\\nOnce the window geometry of the surface is set, it is not possible to\\nunset it, and it will remain the same until set_window_geometry is\\ncalled again, even if a new subsurface or buffer is attached.\\n\\nIf never set, the value is the full bounds of the surface,\\nincluding any subsurfaces. This updates dynamically on every\\ncommit. This unset is meant for extremely simple clients.\\n\\nThe arguments are given in the surface-local coordinate space of\\nthe wl_surface associated with this xdg_surface.\\n\\nThe width and height must be greater than zero. Setting an invalid size\\nwill raise an error. When applied, the effective window geometry will be\\nthe set window geometry clamped to the bounding rectangle of the\\ncombined geometry of the surface of the xdg_surface and the associated\\nsubsurfaces.\"]\n    SetWindowGeometry {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"ack a configure event\\n\\nWhen a configure event is received, if a client commits the\\nsurface in response to the configure event, then the client\\nmust make an ack_configure request sometime before the commit\\nrequest, passing along the serial of the configure event.\\n\\nFor instance, for toplevel surfaces the compositor might use this\\ninformation to move a surface to the top left only when the client has\\ndrawn itself for the maximized or fullscreen state.\\n\\nIf the client receives multiple configure events before it\\ncan respond to one, it only has to ack the last configure event.\\n\\nA client is not required to commit immediately after sending\\nan ack_configure request - it may even ack_configure several times\\nbefore its next surface commit.\\n\\nA client may send multiple ack_configure requests before committing, but\\nonly the last request sent before a commit indicates which configure\\nevent the client really is responding to.\"]\n    AckConfigure {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":7425},{"krate":0,"index":7427},{"krate":0,"index":7431},{"krate":0,"index":7436}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7457},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8552057,"byte_end":8552066,"line_start":934,"line_end":934,"column_start":9,"column_end":18},"name":"Configure","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Event::Configure","value":"Event::Configure { serial }","parent":{"krate":0,"index":7456},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7456},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8551121,"byte_end":8551126,"line_start":932,"line_end":932,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThe configure event marks the end of a configure sequence. A configure\\nsequence is a set of one or more events configuring the state of the\\nxdg_surface, including the final xdg_surface.configure event.\\n\\nWhere applicable, xdg_surface surface roles will during a configure\\nsequence extend this event as a latched state sent as events before the\\nxdg_surface.configure event. Such events should be considered to make up\\na set of atomically applied configuration states, where the\\nxdg_surface.configure commits the accumulated state.\\n\\nClients should arrange their surface for the new states, and then send\\nan ack_configure request with the serial sent in this configure event at\\nsome point before committing the new surface.\\n\\nIf the client receives multiple configure events before it can respond\\nto one, it is free to discard all but the last event it received.\"]\n    Configure {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":7457}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7472},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8554250,"byte_end":8554263,"line_start":1002,"line_end":1002,"column_start":16,"column_end":29},"name":"ZxdgSurfaceV6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::ZxdgSurfaceV6","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7480},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8554608,"byte_end":8554621,"line_start":1012,"line_end":1012,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7484},{"krate":0,"index":7486},{"krate":0,"index":7487}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7481},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8554898,"byte_end":8554905,"line_start":1014,"line_end":1014,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":"destroy the xdg_surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7482},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8555221,"byte_end":8555233,"line_start":1016,"line_end":1016,"column_start":12,"column_end":24},"name":"get_toplevel","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::RequestsTrait::get_toplevel","value":"pub fn get_toplevel<F>(&Self, F)\n-> Result<Proxy<super::zxdg_toplevel_v6::ZxdgToplevelV6>, ()> where\nF: FnOnce(NewProxy<super::zxdg_toplevel_v6::ZxdgToplevelV6>) ->\nProxy<super::zxdg_toplevel_v6::ZxdgToplevelV6>","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":"assign the xdg_toplevel surface role","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7484},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8555812,"byte_end":8555821,"line_start":1025,"line_end":1025,"column_start":12,"column_end":21},"name":"get_popup","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::RequestsTrait::get_popup","value":"pub fn get_popup<F>(&Self, &Proxy<super::zxdg_surface_v6::ZxdgSurfaceV6>,\n                    &Proxy<super::zxdg_positioner_v6::ZxdgPositionerV6>, F)\n-> Result<Proxy<super::zxdg_popup_v6::ZxdgPopupV6>, ()> where\nF: FnOnce(NewProxy<super::zxdg_popup_v6::ZxdgPopupV6>) ->\nProxy<super::zxdg_popup_v6::ZxdgPopupV6>","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":"assign the xdg_popup surface role","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7486},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8557495,"byte_end":8557514,"line_start":1036,"line_end":1036,"column_start":12,"column_end":31},"name":"set_window_geometry","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::RequestsTrait::set_window_geometry","value":"pub fn set_window_geometry(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":"set the new window geometry","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7487},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8558544,"byte_end":8558557,"line_start":1038,"line_end":1038,"column_start":12,"column_end":25},"name":"ack_configure","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::RequestsTrait::ack_configure","value":"pub fn ack_configure(&Self, u32) -> ()","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7496},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8560501,"byte_end":8560518,"line_start":1092,"line_end":1092,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7497},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8560614,"byte_end":8560636,"line_start":1094,"line_end":1094,"column_start":15,"column_end":37},"name":"REQ_GET_TOPLEVEL_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::REQ_GET_TOPLEVEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7498},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8560732,"byte_end":8560751,"line_start":1096,"line_end":1096,"column_start":15,"column_end":34},"name":"REQ_GET_POPUP_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::REQ_GET_POPUP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7499},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8560847,"byte_end":8560876,"line_start":1098,"line_end":1098,"column_start":15,"column_end":44},"name":"REQ_SET_WINDOW_GEOMETRY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::REQ_SET_WINDOW_GEOMETRY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7500},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8560972,"byte_end":8560995,"line_start":1100,"line_end":1100,"column_start":15,"column_end":38},"name":"REQ_ACK_CONFIGURE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::REQ_ACK_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7501},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8561089,"byte_end":8561108,"line_start":1102,"line_end":1102,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_surface_v6::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7502},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8561466,"byte_end":8561482,"line_start":1105,"line_end":1105,"column_start":9,"column_end":25},"name":"zxdg_toplevel_v6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","parent":null,"children":[{"krate":0,"index":7503},{"krate":0,"index":7504},{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":14487},{"krate":0,"index":7510},{"krate":0,"index":7511},{"krate":0,"index":7512},{"krate":0,"index":7513},{"krate":0,"index":7514},{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7517},{"krate":0,"index":7518},{"krate":0,"index":7519},{"krate":0,"index":8134},{"krate":0,"index":8169},{"krate":0,"index":8167},{"krate":0,"index":8165},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":7520},{"krate":0,"index":8170},{"krate":0,"index":8190},{"krate":0,"index":8188},{"krate":0,"index":8186},{"krate":0,"index":8183},{"krate":0,"index":8184},{"krate":0,"index":7523},{"krate":0,"index":7526},{"krate":0,"index":7563},{"krate":0,"index":7592},{"krate":0,"index":7599},{"krate":0,"index":7612},{"krate":0,"index":7614},{"krate":0,"index":7620},{"krate":0,"index":7635},{"krate":0,"index":7652},{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7658},{"krate":0,"index":7659},{"krate":0,"index":7660},{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7665},{"krate":0,"index":7666},{"krate":0,"index":7667}],"decl_id":null,"docs":"toplevel surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8135},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8561990,"byte_end":8561994,"line_start":1116,"line_end":1116,"column_start":9,"column_end":13},"name":"None","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::None","value":"ResizeEdge::None","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8138},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562008,"byte_end":8562011,"line_start":1117,"line_end":1117,"column_start":9,"column_end":12},"name":"Top","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::Top","value":"ResizeEdge::Top","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8141},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562025,"byte_end":8562031,"line_start":1118,"line_end":1118,"column_start":9,"column_end":15},"name":"Bottom","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::Bottom","value":"ResizeEdge::Bottom","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8144},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562045,"byte_end":8562049,"line_start":1119,"line_end":1119,"column_start":9,"column_end":13},"name":"Left","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::Left","value":"ResizeEdge::Left","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8147},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562063,"byte_end":8562070,"line_start":1120,"line_end":1120,"column_start":9,"column_end":16},"name":"TopLeft","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::TopLeft","value":"ResizeEdge::TopLeft","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8150},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562084,"byte_end":8562094,"line_start":1121,"line_end":1121,"column_start":9,"column_end":19},"name":"BottomLeft","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::BottomLeft","value":"ResizeEdge::BottomLeft","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8153},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562108,"byte_end":8562113,"line_start":1122,"line_end":1122,"column_start":9,"column_end":14},"name":"Right","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::Right","value":"ResizeEdge::Right","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8156},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562127,"byte_end":8562135,"line_start":1123,"line_end":1123,"column_start":9,"column_end":17},"name":"TopRight","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::TopRight","value":"ResizeEdge::TopRight","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8159},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562149,"byte_end":8562160,"line_start":1124,"line_end":1124,"column_start":9,"column_end":20},"name":"BottomRight","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge::BottomRight","value":"ResizeEdge::BottomRight","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8134},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8561969,"byte_end":8561979,"line_start":1115,"line_end":1115,"column_start":14,"column_end":24},"name":"ResizeEdge","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ResizeEdge","value":"pub enum ResizeEdge {\n    None = ,\n    Top = ,\n    Bottom = ,\n    Left = ,\n    TopLeft = ,\n    BottomLeft = ,\n    Right = ,\n    TopRight = ,\n    BottomRight = ,\n}","parent":null,"children":[{"krate":0,"index":8135},{"krate":0,"index":8138},{"krate":0,"index":8141},{"krate":0,"index":8144},{"krate":0,"index":8147},{"krate":0,"index":8150},{"krate":0,"index":8153},{"krate":0,"index":8156},{"krate":0,"index":8159}],"decl_id":null,"docs":"edge values for resizing","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8561898,"byte_end":8561910,"line_start":1113,"line_end":1113,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7521},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562210,"byte_end":8562218,"line_start":1127,"line_end":1127,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ResizeEdge>::from_raw","value":"pub fn from_raw(u32) -> Option<ResizeEdge>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7522},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562775,"byte_end":8562781,"line_start":1141,"line_end":1141,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ResizeEdge>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8171},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8563465,"byte_end":8563474,"line_start":1150,"line_end":1150,"column_start":9,"column_end":18},"name":"Maximized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::State::Maximized","value":"State::Maximized","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"the surface is maximized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8174},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8563647,"byte_end":8563657,"line_start":1152,"line_end":1152,"column_start":9,"column_end":19},"name":"Fullscreen","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::State::Fullscreen","value":"State::Fullscreen","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"the surface is fullscreen","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8177},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8563951,"byte_end":8563959,"line_start":1154,"line_end":1154,"column_start":9,"column_end":17},"name":"Resizing","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::State::Resizing","value":"State::Resizing","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"the surface is being resized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8180},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564179,"byte_end":8564188,"line_start":1156,"line_end":1156,"column_start":9,"column_end":18},"name":"Activated","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::State::Activated","value":"State::Activated","parent":{"krate":0,"index":8170},"children":[],"decl_id":null,"docs":"the surface is now activated","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8170},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8563292,"byte_end":8563297,"line_start":1148,"line_end":1148,"column_start":14,"column_end":19},"name":"State","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::State","value":"pub enum State {\n\n    #[doc =\n      \"the surface is maximized\\n\\nThe surface is maximized. The window geometry specified in the configure\\nevent must be obeyed by the client.\"]\n    Maximized = ,\n\n    #[doc =\n      \"the surface is fullscreen\\n\\nThe surface is fullscreen. The window geometry specified in the configure\\nevent must be obeyed by the client.\"]\n    Fullscreen = ,\n\n    #[doc =\n      \"the surface is being resized\\n\\nThe surface is being resized. The window geometry specified in the\\nconfigure event is a maximum; the client cannot resize beyond it.\\nClients that have aspect ratio or cell sizing configuration can use\\na smaller size, however.\"]\n    Resizing = ,\n\n    #[doc =\n      \"the surface is now activated\\n\\nClient window decorations should be painted as if the window is\\nactive. Do not assume this means that the window actually has\\nkeyboard or pointer focus.\"]\n    Activated = ,\n}","parent":null,"children":[{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":8177},{"krate":0,"index":8180}],"decl_id":null,"docs":"types of state on the surface","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8563221,"byte_end":8563233,"line_start":1146,"line_end":1146,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7524},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564232,"byte_end":8564240,"line_start":1159,"line_end":1159,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<State>::from_raw","value":"pub fn from_raw(u32) -> Option<State>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7525},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564544,"byte_end":8564550,"line_start":1168,"line_end":1168,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<State>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7527},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564931,"byte_end":8564938,"line_start":1174,"line_end":1174,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"destroy the xdg_toplevel","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7529},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8565300,"byte_end":8565309,"line_start":1176,"line_end":1176,"column_start":9,"column_end":18},"name":"SetParent","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetParent","value":"Request::SetParent { parent }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set the parent of this surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7531},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8565664,"byte_end":8565672,"line_start":1180,"line_end":1180,"column_start":9,"column_end":17},"name":"SetTitle","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetTitle","value":"Request::SetTitle { title }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set surface title","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7533},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8566611,"byte_end":8566619,"line_start":1182,"line_end":1182,"column_start":9,"column_end":17},"name":"SetAppId","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetAppId","value":"Request::SetAppId { app_id }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set application ID","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7535},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8567240,"byte_end":8567254,"line_start":1184,"line_end":1184,"column_start":9,"column_end":23},"name":"ShowWindowMenu","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::ShowWindowMenu","value":"Request::ShowWindowMenu { seat, serial, x, y }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"show the window menu","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7540},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8568193,"byte_end":8568197,"line_start":1191,"line_end":1191,"column_start":9,"column_end":13},"name":"Move","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::Move","value":"Request::Move { seat, serial }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"start an interactive move","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7543},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8569801,"byte_end":8569807,"line_start":1196,"line_end":1196,"column_start":9,"column_end":15},"name":"Resize","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::Resize","value":"Request::Resize { seat, serial, edges }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"start an interactive resize","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7547},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8571294,"byte_end":8571304,"line_start":1202,"line_end":1202,"column_start":9,"column_end":19},"name":"SetMaxSize","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetMaxSize","value":"Request::SetMaxSize { width, height }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set the maximum size","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7550},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8572708,"byte_end":8572718,"line_start":1204,"line_end":1204,"column_start":9,"column_end":19},"name":"SetMinSize","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetMinSize","value":"Request::SetMinSize { width, height }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set the minimum size","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7553},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8573526,"byte_end":8573538,"line_start":1206,"line_end":1206,"column_start":9,"column_end":21},"name":"SetMaximized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetMaximized","value":"Request::SetMaximized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"maximize the window","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7555},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8574401,"byte_end":8574415,"line_start":1208,"line_end":1208,"column_start":9,"column_end":23},"name":"UnsetMaximized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::UnsetMaximized","value":"Request::UnsetMaximized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"unmaximize the window","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7557},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8574883,"byte_end":8574896,"line_start":1210,"line_end":1210,"column_start":9,"column_end":22},"name":"SetFullscreen","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetFullscreen","value":"Request::SetFullscreen { output }","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set the window as fullscreen on a monitor","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7559},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8575001,"byte_end":8575016,"line_start":1214,"line_end":1214,"column_start":9,"column_end":24},"name":"UnsetFullscreen","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::UnsetFullscreen","value":"Request::UnsetFullscreen","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7561},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8575475,"byte_end":8575487,"line_start":1216,"line_end":1216,"column_start":9,"column_end":21},"name":"SetMinimized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request::SetMinimized","value":"Request::SetMinimized","parent":{"krate":0,"index":7526},"children":[],"decl_id":null,"docs":"set the window as minimized","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7526},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564621,"byte_end":8564628,"line_start":1172,"line_end":1172,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_toplevel\\n\\nUnmap and destroy the window. The window will be effectively\\nhidden from the user's point of view, and all state like\\nmaximization, fullscreen, and so on, will be lost.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the parent of this surface\\n\\nSet the \\\"parent\\\" of this surface. This window should be stacked\\nabove a parent. The parent surface must be mapped as long as this\\nsurface is mapped.\\n\\nParent windows should be set on dialogs, toolboxes, or other\\n\\\"auxiliary\\\" surfaces, so that the parent is raised when the dialog\\nis raised.\"]\n    SetParent {\n        parent: Option<Proxy<super::zxdg_toplevel_v6::ZxdgToplevelV6>>,\n    },\n\n    #[doc =\n      \"set surface title\\n\\nSet a short title for the surface.\\n\\nThis string may be used to identify the surface in a task bar,\\nwindow list, or other user interface elements provided by the\\ncompositor.\\n\\nThe string must be encoded in UTF-8.\"]\n    SetTitle {\n        title: String,\n    },\n\n    #[doc =\n      \"set application ID\\n\\nSet an application identifier for the surface.\\n\\nThe app ID identifies the general class of applications to which\\nthe surface belongs. The compositor can use this to group multiple\\nsurfaces together, or to determine how to launch a new application.\\n\\nFor D-Bus activatable applications, the app ID is used as the D-Bus\\nservice name.\\n\\nThe compositor shell will try to group application surfaces together\\nby their app ID. As a best practice, it is suggested to select app\\nID's that match the basename of the application's .desktop file.\\nFor example, \\\"org.freedesktop.FooViewer\\\" where the .desktop file is\\n\\\"org.freedesktop.FooViewer.desktop\\\".\\n\\nSee the desktop-entry specification [0] for more details on\\napplication identifiers and how they relate to well-known D-Bus\\nnames and .desktop files.\\n\\n[0] http://standards.freedesktop.org/desktop-entry-spec/\"]\n    SetAppId {\n        app_id: String,\n    },\n\n    #[doc =\n      \"show the window menu\\n\\nClients implementing client-side decorations might want to show\\na context menu when right-clicking on the decorations, giving the\\nuser a menu that they can use to maximize or minimize the window.\\n\\nThis request asks the compositor to pop up such a window menu at\\nthe given position, relative to the local surface coordinates of\\nthe parent surface. There are no guarantees as to what menu items\\nthe window menu contains.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event.\"]\n    ShowWindowMenu {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        x: i32,\n        y: i32,\n    },\n\n    #[doc =\n      \"start an interactive move\\n\\nStart an interactive, user-driven move of the surface.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event. The passed\\nserial is used to determine the type of interactive move (touch,\\npointer, etc).\\n\\nThe server may ignore move requests depending on the state of\\nthe surface (e.g. fullscreen or maximized), or if the passed serial\\nis no longer valid.\\n\\nIf triggered, the surface will lose the focus of the device\\n(wl_pointer, wl_touch, etc) used for the move. It is up to the\\ncompositor to visually indicate that the move is taking place, such as\\nupdating a pointer cursor, during the move. There is no guarantee\\nthat the device focus will return when the move is completed.\"]\n    Move {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n    },\n\n    #[doc =\n      \"start an interactive resize\\n\\nStart a user-driven, interactive resize of the surface.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event. The passed\\nserial is used to determine the type of interactive resize (touch,\\npointer, etc).\\n\\nThe server may ignore resize requests depending on the state of\\nthe surface (e.g. fullscreen or maximized).\\n\\nIf triggered, the client will receive configure events with the\\n\\\"resize\\\" state enum value and the expected sizes. See the \\\"resize\\\"\\nenum value for more details about what is required. The client\\nmust also acknowledge configure events using \\\"ack_configure\\\". After\\nthe resize is completed, the client will receive another \\\"configure\\\"\\nevent without the resize state.\\n\\nIf triggered, the surface also will lose the focus of the device\\n(wl_pointer, wl_touch, etc) used for the resize. It is up to the\\ncompositor to visually indicate that the resize is taking place,\\nsuch as updating a pointer cursor, during the resize. There is no\\nguarantee that the device focus will return when the resize is\\ncompleted.\\n\\nThe edges parameter specifies how the surface should be resized,\\nand is one of the values of the resize_edge enum. The compositor\\nmay use this information to update the surface position for\\nexample when dragging the top left corner. The compositor may also\\nuse this information to adapt its behavior, e.g. choose an\\nappropriate cursor image.\"]\n    Resize {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        edges: u32,\n    },\n\n    #[doc =\n      \"set the maximum size\\n\\nSet a maximum size for the window.\\n\\nThe client can specify a maximum size so that the compositor does\\nnot try to configure the window beyond this size.\\n\\nThe width and height arguments are in window geometry coordinates.\\nSee xdg_surface.set_window_geometry.\\n\\nValues set in this way are double-buffered. They will get applied\\non the next commit.\\n\\nThe compositor can use this information to allow or disallow\\ndifferent states like maximize or fullscreen and draw accurate\\nanimations.\\n\\nSimilarly, a tiling window manager may use this information to\\nplace and resize client windows in a more effective way.\\n\\nThe client should not rely on the compositor to obey the maximum\\nsize. The compositor may decide to ignore the values set by the\\nclient and request a larger size.\\n\\nIf never set, or a value of zero in the request, means that the\\nclient has no expected maximum size in the given dimension.\\nAs a result, a client wishing to reset the maximum size\\nto an unspecified state can use zero for width and height in the\\nrequest.\\n\\nRequesting a maximum size to be smaller than the minimum size of\\na surface is illegal and will result in a protocol error.\\n\\nThe width and height must be greater than or equal to zero. Using\\nstrictly negative values for width and height will result in a\\nprotocol error.\"]\n    SetMaxSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"set the minimum size\\n\\nSet a minimum size for the window.\\n\\nThe client can specify a minimum size so that the compositor does\\nnot try to configure the window below this size.\\n\\nThe width and height arguments are in window geometry coordinates.\\nSee xdg_surface.set_window_geometry.\\n\\nValues set in this way are double-buffered. They will get applied\\non the next commit.\\n\\nThe compositor can use this information to allow or disallow\\ndifferent states like maximize or fullscreen and draw accurate\\nanimations.\\n\\nSimilarly, a tiling window manager may use this information to\\nplace and resize client windows in a more effective way.\\n\\nThe client should not rely on the compositor to obey the minimum\\nsize. The compositor may decide to ignore the values set by the\\nclient and request a smaller size.\\n\\nIf never set, or a value of zero in the request, means that the\\nclient has no expected minimum size in the given dimension.\\nAs a result, a client wishing to reset the minimum size\\nto an unspecified state can use zero for width and height in the\\nrequest.\\n\\nRequesting a minimum size to be larger than the maximum size of\\na surface is illegal and will result in a protocol error.\\n\\nThe width and height must be greater than or equal to zero. Using\\nstrictly negative values for width and height will result in a\\nprotocol error.\"]\n    SetMinSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"maximize the window\\n\\nMaximize the surface.\\n\\nAfter requesting that the surface should be maximized, the compositor\\nwill respond by emitting a configure event with the \\\"maximized\\\" state\\nand the required window geometry. The client should then update its\\ncontent, drawing it in a maximized state, i.e. without shadow or other\\ndecoration outside of the window geometry. The client must also\\nacknowledge the configure when committing the new content (see\\nack_configure).\\n\\nIt is up to the compositor to decide how and where to maximize the\\nsurface, for example which output and what region of the screen should\\nbe used.\\n\\nIf the surface was already maximized, the compositor will still emit\\na configure event with the \\\"maximized\\\" state.\"]\n    SetMaximized,\n\n    #[doc =\n      \"unmaximize the window\\n\\nUnmaximize the surface.\\n\\nAfter requesting that the surface should be unmaximized, the compositor\\nwill respond by emitting a configure event without the \\\"maximized\\\"\\nstate. If available, the compositor will include the window geometry\\ndimensions the window had prior to being maximized in the configure\\nrequest. The client must then update its content, drawing it in a\\nregular state, i.e. potentially with shadow, etc. The client must also\\nacknowledge the configure when committing the new content (see\\nack_configure).\\n\\nIt is up to the compositor to position the surface after it was\\nunmaximized; usually the position the surface had before maximizing, if\\napplicable.\\n\\nIf the surface was already not maximized, the compositor will still\\nemit a configure event without the \\\"maximized\\\" state.\"]\n    UnsetMaximized,\n\n    #[doc =\n      \"set the window as fullscreen on a monitor\\n\\nMake the surface fullscreen.\\n\\nYou can specify an output that you would prefer to be fullscreen.\\nIf this value is NULL, it's up to the compositor to choose which\\ndisplay will be used to map this surface.\\n\\nIf the surface doesn't cover the whole output, the compositor will\\nposition the surface in the center of the output and compensate with\\nblack borders filling the rest of the output.\"]\n    SetFullscreen {\n        output: Option<Proxy<super::wl_output::WlOutput>>,\n    },\n\n    #[doc = \"\"]\n    UnsetFullscreen,\n\n    #[doc =\n      \"set the window as minimized\\n\\nRequest that the compositor minimize your surface. There is no\\nway to know if the surface is currently minimized, nor is there\\nany way to unset minimization on this surface.\\n\\nIf you are looking to throttle redrawing when minimized, please\\ninstead use the wl_surface.frame event for this, as this will\\nalso work with live previews on windows in Alt-Tab, Expose or\\nsimilar compositor features.\"]\n    SetMinimized,\n}","parent":null,"children":[{"krate":0,"index":7527},{"krate":0,"index":7529},{"krate":0,"index":7531},{"krate":0,"index":7533},{"krate":0,"index":7535},{"krate":0,"index":7540},{"krate":0,"index":7543},{"krate":0,"index":7547},{"krate":0,"index":7550},{"krate":0,"index":7553},{"krate":0,"index":7555},{"krate":0,"index":7557},{"krate":0,"index":7559},{"krate":0,"index":7561}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7593},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8588783,"byte_end":8588792,"line_start":1528,"line_end":1528,"column_start":9,"column_end":18},"name":"Configure","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Event::Configure","value":"Event::Configure { width, height, states }","parent":{"krate":0,"index":7592},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7597},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8589328,"byte_end":8589333,"line_start":1534,"line_end":1534,"column_start":9,"column_end":14},"name":"Close","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Event::Close","value":"Event::Close","parent":{"krate":0,"index":7592},"children":[],"decl_id":null,"docs":"surface wants to be closed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7592},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8587835,"byte_end":8587840,"line_start":1526,"line_end":1526,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThis configure event asks the client to resize its toplevel surface or\\nto change its state. The configured state should not be applied\\nimmediately. See xdg_surface.configure for details.\\n\\nThe width and height arguments specify a hint to the window\\nabout how its surface should be resized in window geometry\\ncoordinates. See set_window_geometry.\\n\\nIf the width or height arguments are zero, it means the client\\nshould decide its own window dimension. This may happen when the\\ncompositor needs to configure the state of the surface but doesn't\\nhave any information about any previous or expected dimension.\\n\\nThe states listed in the event specify how the width/height\\narguments should be interpreted, and possibly how it should be\\ndrawn.\\n\\nClients must send an ack_configure in response to this event. See\\nxdg_surface.configure and xdg_surface.ack_configure for details.\"]\n    Configure {\n        width: i32,\n        height: i32,\n        states: Vec<u8>,\n    },\n\n    #[doc =\n      \"surface wants to be closed\\n\\nThe close event is sent by the compositor when the user\\nwants the surface to be closed. This should be equivalent to\\nthe user clicking the close button in client-side decorations,\\nif your application has any.\\n\\nThis is only a request that the user intends to close the\\nwindow. The client may choose to ignore this request, or show\\na dialog to ask the user to save their data, etc.\"]\n    Close,\n}","parent":null,"children":[{"krate":0,"index":7593},{"krate":0,"index":7597}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7612},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8592839,"byte_end":8592853,"line_start":1638,"line_end":1638,"column_start":16,"column_end":30},"name":"ZxdgToplevelV6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::ZxdgToplevelV6","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7620},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8593201,"byte_end":8593214,"line_start":1648,"line_end":1648,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":7621},{"krate":0,"index":7622},{"krate":0,"index":7623},{"krate":0,"index":7624},{"krate":0,"index":7625},{"krate":0,"index":7626},{"krate":0,"index":7627},{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7630},{"krate":0,"index":7631},{"krate":0,"index":7632},{"krate":0,"index":7633},{"krate":0,"index":7634}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7621},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8593550,"byte_end":8593557,"line_start":1650,"line_end":1650,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"destroy the xdg_toplevel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7622},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8593935,"byte_end":8593945,"line_start":1652,"line_end":1652,"column_start":12,"column_end":22},"name":"set_parent","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_parent","value":"pub fn set_parent(&Self,\n                  Option<&Proxy<super::zxdg_toplevel_v6::ZxdgToplevelV6>>)\n-> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set the parent of this surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7623},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8594305,"byte_end":8594314,"line_start":1655,"line_end":1655,"column_start":12,"column_end":21},"name":"set_title","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_title","value":"pub fn set_title(&Self, String) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set surface title","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7624},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8595266,"byte_end":8595276,"line_start":1657,"line_end":1657,"column_start":12,"column_end":22},"name":"set_app_id","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_app_id","value":"pub fn set_app_id(&Self, String) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set application ID","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7625},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8595910,"byte_end":8595926,"line_start":1659,"line_end":1659,"column_start":12,"column_end":28},"name":"show_window_menu","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::show_window_menu","value":"pub fn show_window_menu(&Self, &Proxy<super::wl_seat::WlSeat>, u32, i32, i32)\n-> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"show the window menu","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7626},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8596893,"byte_end":8596898,"line_start":1667,"line_end":1667,"column_start":12,"column_end":17},"name":"_move","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::_move","value":"pub fn _move(&Self, &Proxy<super::wl_seat::WlSeat>, u32) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"start an interactive move","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7627},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8598483,"byte_end":8598489,"line_start":1669,"line_end":1669,"column_start":12,"column_end":18},"name":"resize","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::resize","value":"pub fn resize(&Self, &Proxy<super::wl_seat::WlSeat>, u32, u32) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"start an interactive resize","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7628},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8599945,"byte_end":8599957,"line_start":1671,"line_end":1671,"column_start":12,"column_end":24},"name":"set_max_size","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_max_size","value":"pub fn set_max_size(&Self, i32, i32) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set the maximum size","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7629},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8601374,"byte_end":8601386,"line_start":1673,"line_end":1673,"column_start":12,"column_end":24},"name":"set_min_size","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_min_size","value":"pub fn set_min_size(&Self, i32, i32) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set the minimum size","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7630},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8602207,"byte_end":8602220,"line_start":1675,"line_end":1675,"column_start":12,"column_end":25},"name":"set_maximized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_maximized","value":"pub fn set_maximized(&Self) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"maximize the window","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7631},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8603099,"byte_end":8603114,"line_start":1677,"line_end":1677,"column_start":12,"column_end":27},"name":"unset_maximized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::unset_maximized","value":"pub fn unset_maximized(&Self) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"unmaximize the window","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7632},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8603598,"byte_end":8603612,"line_start":1679,"line_end":1679,"column_start":12,"column_end":26},"name":"set_fullscreen","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_fullscreen","value":"pub fn set_fullscreen(&Self, Option<&Proxy<super::wl_output::WlOutput>>) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set the window as fullscreen on a monitor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7633},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8603710,"byte_end":8603726,"line_start":1681,"line_end":1681,"column_start":12,"column_end":28},"name":"unset_fullscreen","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::unset_fullscreen","value":"pub fn unset_fullscreen(&Self) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7634},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8604201,"byte_end":8604214,"line_start":1683,"line_end":1683,"column_start":12,"column_end":25},"name":"set_minimized","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::RequestsTrait::set_minimized","value":"pub fn set_minimized(&Self) -> ()","parent":{"krate":0,"index":7620},"children":[],"decl_id":null,"docs":"set the window as minimized","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7652},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607183,"byte_end":8607200,"line_start":1775,"line_end":1775,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7653},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607296,"byte_end":8607316,"line_start":1777,"line_end":1777,"column_start":15,"column_end":35},"name":"REQ_SET_PARENT_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_PARENT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7654},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607412,"byte_end":8607431,"line_start":1779,"line_end":1779,"column_start":15,"column_end":34},"name":"REQ_SET_TITLE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_TITLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7655},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607527,"byte_end":8607547,"line_start":1781,"line_end":1781,"column_start":15,"column_end":35},"name":"REQ_SET_APP_ID_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_APP_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7656},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607643,"byte_end":8607669,"line_start":1783,"line_end":1783,"column_start":15,"column_end":41},"name":"REQ_SHOW_WINDOW_MENU_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SHOW_WINDOW_MENU_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7657},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607765,"byte_end":8607779,"line_start":1785,"line_end":1785,"column_start":15,"column_end":29},"name":"REQ_MOVE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_MOVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7658},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607875,"byte_end":8607891,"line_start":1787,"line_end":1787,"column_start":15,"column_end":31},"name":"REQ_RESIZE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_RESIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7659},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8607987,"byte_end":8608009,"line_start":1789,"line_end":1789,"column_start":15,"column_end":37},"name":"REQ_SET_MAX_SIZE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_MAX_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7660},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608105,"byte_end":8608127,"line_start":1791,"line_end":1791,"column_start":15,"column_end":37},"name":"REQ_SET_MIN_SIZE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_MIN_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7661},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608223,"byte_end":8608246,"line_start":1793,"line_end":1793,"column_start":15,"column_end":38},"name":"REQ_SET_MAXIMIZED_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7662},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608342,"byte_end":8608367,"line_start":1795,"line_end":1795,"column_start":15,"column_end":40},"name":"REQ_UNSET_MAXIMIZED_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_UNSET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7663},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608463,"byte_end":8608487,"line_start":1797,"line_end":1797,"column_start":15,"column_end":39},"name":"REQ_SET_FULLSCREEN_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_FULLSCREEN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7664},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608583,"byte_end":8608609,"line_start":1799,"line_end":1799,"column_start":15,"column_end":41},"name":"REQ_UNSET_FULLSCREEN_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_UNSET_FULLSCREEN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7665},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608705,"byte_end":8608728,"line_start":1801,"line_end":1801,"column_start":15,"column_end":38},"name":"REQ_SET_MINIMIZED_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::REQ_SET_MINIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7666},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608822,"byte_end":8608841,"line_start":1803,"line_end":1803,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7667},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8608935,"byte_end":8608950,"line_start":1805,"line_end":1805,"column_start":15,"column_end":30},"name":"EVT_CLOSE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_toplevel_v6::EVT_CLOSE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7668},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610430,"byte_end":8610443,"line_start":1808,"line_end":1808,"column_start":9,"column_end":22},"name":"zxdg_popup_v6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","parent":null,"children":[{"krate":0,"index":7669},{"krate":0,"index":7670},{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":14515},{"krate":0,"index":7676},{"krate":0,"index":7677},{"krate":0,"index":7678},{"krate":0,"index":7679},{"krate":0,"index":7680},{"krate":0,"index":7681},{"krate":0,"index":7682},{"krate":0,"index":7683},{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":8193},{"krate":0,"index":8204},{"krate":0,"index":8202},{"krate":0,"index":8200},{"krate":0,"index":8197},{"krate":0,"index":8198},{"krate":0,"index":7686},{"krate":0,"index":7689},{"krate":0,"index":7695},{"krate":0,"index":7710},{"krate":0,"index":7718},{"krate":0,"index":7731},{"krate":0,"index":7733},{"krate":0,"index":7739},{"krate":0,"index":7742},{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747},{"krate":0,"index":7748}],"decl_id":null,"docs":"short-lived, popup surfaces for menus","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610856,"byte_end":8610867,"line_start":1819,"line_end":1819,"column_start":9,"column_end":20},"name":"InvalidGrab","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Error::InvalidGrab","value":"Error::InvalidGrab","parent":{"krate":0,"index":8193},"children":[],"decl_id":null,"docs":"tried to grab after being mapped\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8193},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610788,"byte_end":8610793,"line_start":1817,"line_end":1817,"column_start":14,"column_end":19},"name":"Error","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Error","value":"pub enum Error {\n\n    #[doc = \"tried to grab after being mapped\"]\n    InvalidGrab = ,\n}","parent":null,"children":[{"krate":0,"index":8194}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610717,"byte_end":8610729,"line_start":1815,"line_end":1815,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7687},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610911,"byte_end":8610919,"line_start":1822,"line_end":1822,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7688},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8611090,"byte_end":8611096,"line_start":1828,"line_end":1828,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7690},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8611512,"byte_end":8611519,"line_start":1834,"line_end":1834,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":7689},"children":[],"decl_id":null,"docs":"remove xdg_popup interface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7692},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8613556,"byte_end":8613560,"line_start":1836,"line_end":1836,"column_start":9,"column_end":13},"name":"Grab","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Request::Grab","value":"Request::Grab { seat, serial }","parent":{"krate":0,"index":7689},"children":[],"decl_id":null,"docs":"make the popup take an explicit grab","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7689},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8611167,"byte_end":8611174,"line_start":1832,"line_end":1832,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Request","value":"pub enum Request {\n\n    #[doc =\n      \"remove xdg_popup interface\\n\\nThis destroys the popup. Explicitly destroying the xdg_popup\\nobject will also dismiss the popup, and unmap the surface.\\n\\nIf this xdg_popup is not the \\\"topmost\\\" popup, a protocol error\\nwill be sent.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"make the popup take an explicit grab\\n\\nThis request makes the created popup take an explicit grab. An explicit\\ngrab will be dismissed when the user dismisses the popup, or when the\\nclient destroys the xdg_popup. This can be done by the user clicking\\noutside the surface, using the keyboard, or even locking the screen\\nthrough closing the lid or a timeout.\\n\\nIf the compositor denies the grab, the popup will be immediately\\ndismissed.\\n\\nThis request must be used in response to some sort of user action like a\\nbutton press, key press, or touch down event. The serial number of the\\nevent should be passed as 'serial'.\\n\\nThe parent of a grabbing popup must either be an xdg_toplevel surface or\\nanother xdg_popup with an explicit grab. If the parent is another\\nxdg_popup it means that the popups are nested, with this popup now being\\nthe topmost popup.\\n\\nNested popups must be destroyed in the reverse order they were created\\nin, e.g. the only popup you are allowed to destroy at all times is the\\ntopmost one.\\n\\nWhen compositors choose to dismiss a popup, they may dismiss every\\nnested grabbing popup as well. When a compositor dismisses popups, it\\nwill follow the same dismissing order as required from the client.\\n\\nThe parent of a grabbing popup must either be another xdg_popup with an\\nactive explicit grab, or an xdg_popup or xdg_toplevel, if there are no\\nexplicit grabs already taken.\\n\\nIf the topmost grabbing popup is destroyed, the grab will be returned to\\nthe parent of the popup, if that parent previously had an explicit grab.\\n\\nIf the parent is a grabbing popup which has already been dismissed, this\\npopup will be immediately dismissed. If the parent is a popup that did\\nnot take an explicit grab, an error will be raised.\\n\\nDuring a popup grab, the client owning the grab will receive pointer\\nand touch events for all their surfaces as normal (similar to an\\n\\\"owner-events\\\" grab in X11 parlance), while the top most grabbing popup\\nwill always have keyboard focus.\"]\n    Grab {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":7690},{"krate":0,"index":7692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7711},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8616740,"byte_end":8616749,"line_start":1920,"line_end":1920,"column_start":9,"column_end":18},"name":"Configure","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Event::Configure","value":"Event::Configure { x, y, width, height }","parent":{"krate":0,"index":7710},"children":[],"decl_id":null,"docs":"configure the popup surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7716},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8617050,"byte_end":8617059,"line_start":1927,"line_end":1927,"column_start":9,"column_end":18},"name":"PopupDone","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Event::PopupDone","value":"Event::PopupDone","parent":{"krate":0,"index":7710},"children":[],"decl_id":null,"docs":"popup interaction is done","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7710},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8616313,"byte_end":8616318,"line_start":1918,"line_end":1918,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::Event","value":"pub enum Event {\n\n    #[doc =\n      \"configure the popup surface\\n\\nThis event asks the popup surface to configure itself given the\\nconfiguration. The configured state should not be applied immediately.\\nSee xdg_surface.configure for details.\\n\\nThe x and y arguments represent the position the popup was placed at\\ngiven the xdg_positioner rule, relative to the upper left corner of the\\nwindow geometry of the parent surface.\"]\n    Configure {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"popup interaction is done\\n\\nThe popup_done event is sent out when a popup is dismissed by the\\ncompositor. The client should destroy the xdg_popup object at this\\npoint.\"]\n    PopupDone,\n}","parent":null,"children":[{"krate":0,"index":7711},{"krate":0,"index":7716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7731},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8620727,"byte_end":8620738,"line_start":2036,"line_end":2036,"column_start":16,"column_end":27},"name":"ZxdgPopupV6","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::ZxdgPopupV6","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7739},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8621077,"byte_end":8621090,"line_start":2046,"line_end":2046,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":7740},{"krate":0,"index":7741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7740},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8621461,"byte_end":8621468,"line_start":2048,"line_end":2048,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":"remove xdg_popup interface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8623521,"byte_end":8623525,"line_start":2050,"line_end":2050,"column_start":12,"column_end":16},"name":"grab","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::RequestsTrait::grab","value":"pub fn grab(&Self, &Proxy<super::wl_seat::WlSeat>, u32) -> ()","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":"make the popup take an explicit grab","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7745},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8624086,"byte_end":8624103,"line_start":2066,"line_end":2066,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7746},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8624199,"byte_end":8624213,"line_start":2068,"line_end":2068,"column_start":15,"column_end":29},"name":"REQ_GRAB_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::REQ_GRAB_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7747},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8624307,"byte_end":8624326,"line_start":2070,"line_end":2070,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7748},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8624420,"byte_end":8624440,"line_start":2072,"line_end":2072,"column_start":15,"column_end":35},"name":"EVT_POPUP_DONE_SINCE","qualname":"::unstable::xdg_shell::v6::generated::client::zxdg_popup_v6::EVT_POPUP_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21209,"byte_end":21231,"line_start":402,"line_end":402,"column_start":9,"column_end":31},"name":"xwayland_keyboard_grab","qualname":"::unstable::xwayland_keyboard_grab","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","parent":null,"children":[{"krate":0,"index":8205}],"decl_id":null,"docs":" Protocol for grabbing the keyboard from Xwayland","sig":null,"attributes":[{"value":"! Protocol for grabbing the keyboard from Xwayland","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21238,"byte_end":21290,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21295,"byte_end":21298,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"! This protocol is application-specific to meet the needs of the X11","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21303,"byte_end":21373,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"! protocol through Xwayland. It provides a way for Xwayland to request","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21378,"byte_end":21450,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"! all keyboard events to be forwarded to a surface even when the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21455,"byte_end":21521,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"! surface does not have keyboard focus.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21526,"byte_end":21567,"line_start":408,"line_end":408,"column_start":5,"column_end":46}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21572,"byte_end":21575,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"! In the X11 protocol, a client may request an \"active grab\" on the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21580,"byte_end":21649,"line_start":410,"line_end":410,"column_start":5,"column_end":74}},{"value":"! keyboard. On success, all key events are reported only to the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21654,"byte_end":21719,"line_start":411,"line_end":411,"column_start":5,"column_end":70}},{"value":"! grabbing X11 client. For details, see XGrabKeyboard(3).","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21724,"byte_end":21783,"line_start":412,"line_end":412,"column_start":5,"column_end":64}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21788,"byte_end":21791,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"! The core Wayland protocol does not have a notion of an active","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21796,"byte_end":21861,"line_start":414,"line_end":414,"column_start":5,"column_end":70}},{"value":"! keyboard grab. When running in Xwayland, X11 applications may","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21866,"byte_end":21931,"line_start":415,"line_end":415,"column_start":5,"column_end":70}},{"value":"! acquire an active grab inside Xwayland but that cannot be translated","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21936,"byte_end":22008,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"! to the Wayland compositor who may set the input focus to some other","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22013,"byte_end":22084,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"! surface. In doing so, it breaks the X11 client assumption that all","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22089,"byte_end":22159,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"! key events are reported to the grabbing client.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22164,"byte_end":22215,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22220,"byte_end":22223,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"! This protocol specifies a way for Xwayland to request all keyboard","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22228,"byte_end":22298,"line_start":421,"line_end":421,"column_start":5,"column_end":75}},{"value":"! be directed to the given surface. The protocol does not guarantee","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22303,"byte_end":22372,"line_start":422,"line_end":422,"column_start":5,"column_end":74}},{"value":"! that the compositor will honor this request and it does not","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22377,"byte_end":22440,"line_start":423,"line_end":423,"column_start":5,"column_end":68}},{"value":"! prescribe user interfaces on how to handle the respond. For example,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22445,"byte_end":22517,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"! a compositor may inform the user that all key events are now","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22522,"byte_end":22586,"line_start":425,"line_end":425,"column_start":5,"column_end":69}},{"value":"! forwarded to the given client surface, or it may ask the user for","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22591,"byte_end":22660,"line_start":426,"line_end":426,"column_start":5,"column_end":74}},{"value":"! permission to do so.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22665,"byte_end":22689,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22694,"byte_end":22697,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"! Compositors are required to restrict access to this application","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22702,"byte_end":22769,"line_start":429,"line_end":429,"column_start":5,"column_end":72}},{"value":"! specific protocol to Xwayland alone.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22774,"byte_end":22814,"line_start":430,"line_end":430,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":8205},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::unstable::xwayland_keyboard_grab::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":8206},{"krate":0,"index":8207},{"krate":0,"index":8208}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":8243},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_interfaces.rs","byte_start":8624955,"byte_end":8625001,"line_start":11,"line_end":11,"column_start":16,"column_end":62},"name":"zwp_xwayland_keyboard_grab_manager_v1_requests","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::c_interfaces::zwp_xwayland_keyboard_grab_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8245},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_interfaces.rs","byte_start":8625504,"byte_end":8625551,"line_start":25,"line_end":25,"column_start":16,"column_end":63},"name":"zwp_xwayland_keyboard_grab_manager_v1_interface","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::c_interfaces::zwp_xwayland_keyboard_grab_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8246},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_interfaces.rs","byte_start":8625871,"byte_end":8625909,"line_start":33,"line_end":33,"column_start":16,"column_end":54},"name":"zwp_xwayland_keyboard_grab_v1_requests","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::c_interfaces::zwp_xwayland_keyboard_grab_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8248},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_interfaces.rs","byte_start":8626115,"byte_end":8626154,"line_start":38,"line_end":38,"column_start":16,"column_end":55},"name":"zwp_xwayland_keyboard_grab_v1_interface","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::c_interfaces::zwp_xwayland_keyboard_grab_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8249},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8626558,"byte_end":8626595,"line_start":2,"line_end":2,"column_start":9,"column_end":46},"name":"zwp_xwayland_keyboard_grab_manager_v1","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8250},{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8253},{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8256},{"krate":0,"index":14585},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264},{"krate":0,"index":8265},{"krate":0,"index":8266},{"krate":0,"index":8267},{"krate":0,"index":8274},{"krate":0,"index":8289},{"krate":0,"index":8290},{"krate":0,"index":8303},{"krate":0,"index":8305},{"krate":0,"index":8311},{"krate":0,"index":8315},{"krate":0,"index":8319},{"krate":0,"index":8320}],"decl_id":null,"docs":"context object for keyboard grab manager","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8268},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8627061,"byte_end":8627068,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8267},"children":[],"decl_id":null,"docs":"destroy the keyboard grab manager","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8270},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8628049,"byte_end":8628061,"line_start":13,"line_end":13,"column_start":9,"column_end":21},"name":"GrabKeyboard","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::Request::GrabKeyboard","value":"Request::GrabKeyboard { id, surface, seat }","parent":{"krate":0,"index":8267},"children":[],"decl_id":null,"docs":"grab the keyboard to a surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8267},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8626878,"byte_end":8626885,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the keyboard grab manager\\n\\nDestroy the keyboard grab manager.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"grab the keyboard to a surface\\n\\nThe grab_keyboard request asks for a grab of the keyboard, forcing\\nthe keyboard focus for the given seat upon the given surface.\\n\\nThe protocol provides no guarantee that the grab is ever satisfied,\\nand does not require the compositor to send an error if the grab\\ncannot ever be satisfied. It is thus possible to request a keyboard\\ngrab that will never be effective.\\n\\nThe protocol:\\n\\n* does not guarantee that the grab itself is applied for a surface,\\nthe grab request may be silently ignored by the compositor,\\n* does not guarantee that any events are sent to this client even\\nif the grab is applied to a surface,\\n* does not guarantee that events sent to this client are exhaustive,\\na compositor may filter some events for its own consumption,\\n* does not guarantee that events sent to this client are continuous,\\na compositor may change and reroute keyboard events while the grab\\nis nominally active.\"]\n    GrabKeyboard {\n        id: Proxy<super::zwp_xwayland_keyboard_grab_v1::ZwpXwaylandKeyboardGrabV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n}","parent":null,"children":[{"krate":0,"index":8268},{"krate":0,"index":8270}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8289},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8631476,"byte_end":8631481,"line_start":108,"line_end":108,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8303},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8632781,"byte_end":8632813,"line_start":151,"line_end":151,"column_start":16,"column_end":48},"name":"ZwpXwaylandKeyboardGrabManagerV1","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::ZwpXwaylandKeyboardGrabManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8311},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8633221,"byte_end":8633234,"line_start":161,"line_end":161,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8312},{"krate":0,"index":8313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8312},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8633443,"byte_end":8633450,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"destroy the keyboard grab manager","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8313},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8634447,"byte_end":8634460,"line_start":165,"line_end":165,"column_start":12,"column_end":25},"name":"grab_keyboard","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::RequestsTrait::grab_keyboard","value":"pub fn grab_keyboard<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                        &Proxy<super::wl_seat::WlSeat>, F)\n->\n    Result<Proxy<super::zwp_xwayland_keyboard_grab_v1::ZwpXwaylandKeyboardGrabV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwp_xwayland_keyboard_grab_v1::ZwpXwaylandKeyboardGrabV1>)\n-> Proxy<super::zwp_xwayland_keyboard_grab_v1::ZwpXwaylandKeyboardGrabV1>","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":"grab the keyboard to a surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8319},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636002,"byte_end":8636019,"line_start":203,"line_end":203,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8320},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636115,"byte_end":8636138,"line_start":205,"line_end":205,"column_start":15,"column_end":38},"name":"REQ_GRAB_KEYBOARD_SINCE","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_manager_v1::REQ_GRAB_KEYBOARD_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8321},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636263,"byte_end":8636292,"line_start":208,"line_end":208,"column_start":9,"column_end":38},"name":"zwp_xwayland_keyboard_grab_v1","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8322},{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8325},{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8328},{"krate":0,"index":14613},{"krate":0,"index":8329},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8335},{"krate":0,"index":8336},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8339},{"krate":0,"index":8342},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8370},{"krate":0,"index":8372},{"krate":0,"index":8378},{"krate":0,"index":8380},{"krate":0,"index":8382}],"decl_id":null,"docs":"interface for grabbing the keyboard","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8340},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636819,"byte_end":8636826,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8339},"children":[],"decl_id":null,"docs":"destroy the grabbed keyboard object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8339},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636575,"byte_end":8636582,"line_start":215,"line_end":215,"column_start":14,"column_end":21},"name":"Request","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the grabbed keyboard object\\n\\nDestroy the grabbed keyboard object. If applicable, the compositor\\nwill ungrab the keyboard.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8340}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8356},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8638640,"byte_end":8638645,"line_start":276,"line_end":276,"column_start":14,"column_end":19},"name":"Event","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8370},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8639945,"byte_end":8639970,"line_start":319,"line_end":319,"column_start":16,"column_end":41},"name":"ZwpXwaylandKeyboardGrabV1","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::ZwpXwaylandKeyboardGrabV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8378},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8640355,"byte_end":8640368,"line_start":329,"line_end":329,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8379}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8379},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8640638,"byte_end":8640645,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"destroy","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8378},"children":[],"decl_id":null,"docs":"destroy the grabbed keyboard object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8382},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8640928,"byte_end":8640945,"line_start":340,"line_end":340,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::unstable::xwayland_keyboard_grab::v1::generated::client::zwp_xwayland_keyboard_grab_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wlr","qualname":"::wlr","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" wlr-procotols extension family","sig":null,"attributes":[{"value":"! wlr-procotols extension family","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23028,"byte_end":23062,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23063,"byte_end":23066,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module regroup bindings to the protocol extensions from","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23067,"byte_end":23131,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"! [wlr-protocols](https://github.com/swaywm/wlr-protocols).","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23132,"byte_end":23193,"line_start":4,"line_end":4,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23279,"byte_end":23287,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"name":"unstable","qualname":"::wlr::unstable","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" Unstable protocols from wlr-protocols","sig":null,"attributes":[{"value":"cfg(feature = \"unstable_protocols\")","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23232,"byte_end":23270,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"! Unstable protocols from wlr-protocols","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23294,"byte_end":23335,"line_start":10,"line_end":10,"column_start":5,"column_end":46}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23340,"byte_end":23343,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"! The protocols described in this module are experimental and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23348,"byte_end":23411,"line_start":12,"line_end":12,"column_start":5,"column_end":68}},{"value":"! backward incompatible changes may be made. Backward compatible","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23416,"byte_end":23482,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"! changes may be added together with the corresponding interface","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23487,"byte_end":23553,"line_start":14,"line_end":14,"column_start":5,"column_end":71}},{"value":"! version bump.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23558,"byte_end":23575,"line_start":15,"line_end":15,"column_start":5,"column_end":22}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23580,"byte_end":23583,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"! Backward incompatible changes are done by bumping the version","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23588,"byte_end":23653,"line_start":17,"line_end":17,"column_start":5,"column_end":70}},{"value":"! number in the protocol and interface names and resetting the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23658,"byte_end":23722,"line_start":18,"line_end":18,"column_start":5,"column_end":69}},{"value":"! interface version. Once the protocol is to be declared stable,","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23727,"byte_end":23793,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"! the 'z' prefix and the version number in the protocol and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23798,"byte_end":23859,"line_start":20,"line_end":20,"column_start":5,"column_end":66}},{"value":"! interface names are removed and the interface version number is","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23864,"byte_end":23931,"line_start":21,"line_end":21,"column_start":5,"column_end":72}},{"value":"! reset.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23936,"byte_end":23946,"line_start":22,"line_end":22,"column_start":5,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23960,"byte_end":23972,"line_start":24,"line_end":24,"column_start":13,"column_end":25},"name":"data_control","qualname":"::wlr::unstable::data_control","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":8383}],"decl_id":null,"docs":" Control data devices, particularly the clipboard.","sig":null,"attributes":[{"value":"! Control data devices, particularly the clipboard.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":23983,"byte_end":24036,"line_start":25,"line_end":25,"column_start":9,"column_end":62}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24045,"byte_end":24048,"line_start":26,"line_end":26,"column_start":9,"column_end":12}},{"value":"! An interface to control data devices, particularly to manage the current selection and","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24057,"byte_end":24147,"line_start":27,"line_end":27,"column_start":9,"column_end":99}},{"value":"! take the role of a clipboard manager.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24156,"byte_end":24197,"line_start":28,"line_end":28,"column_start":9,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":8383},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::data_control::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":8421},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8641641,"byte_end":8641678,"line_start":14,"line_end":14,"column_start":16,"column_end":53},"name":"zwlr_data_control_manager_v1_requests","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8423},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8642428,"byte_end":8642466,"line_start":33,"line_end":33,"column_start":16,"column_end":54},"name":"zwlr_data_control_manager_v1_interface","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8426},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8642944,"byte_end":8642980,"line_start":43,"line_end":43,"column_start":16,"column_end":52},"name":"zwlr_data_control_device_v1_requests","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_device_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8432},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8643791,"byte_end":8643825,"line_start":59,"line_end":59,"column_start":16,"column_end":50},"name":"zwlr_data_control_device_v1_events","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_device_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8434},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8644522,"byte_end":8644559,"line_start":76,"line_end":76,"column_start":16,"column_end":53},"name":"zwlr_data_control_device_v1_interface","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_device_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8435},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8644889,"byte_end":8644925,"line_start":84,"line_end":84,"column_start":16,"column_end":52},"name":"zwlr_data_control_source_v1_requests","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_source_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8437},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8645342,"byte_end":8645376,"line_start":96,"line_end":96,"column_start":16,"column_end":50},"name":"zwlr_data_control_source_v1_events","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_source_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8439},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8645795,"byte_end":8645832,"line_start":108,"line_end":108,"column_start":16,"column_end":53},"name":"zwlr_data_control_source_v1_interface","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_source_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8440},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8646162,"byte_end":8646197,"line_start":116,"line_end":116,"column_start":16,"column_end":51},"name":"zwlr_data_control_offer_v1_requests","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_offer_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8442},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8646617,"byte_end":8646650,"line_start":128,"line_end":128,"column_start":16,"column_end":49},"name":"zwlr_data_control_offer_v1_events","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_offer_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8444},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_interfaces.rs","byte_start":8646855,"byte_end":8646891,"line_start":133,"line_end":133,"column_start":16,"column_end":52},"name":"zwlr_data_control_offer_v1_interface","qualname":"::wlr::unstable::data_control::v1::generated::c_interfaces::zwlr_data_control_offer_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8445},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8647339,"byte_end":8647367,"line_start":2,"line_end":2,"column_start":9,"column_end":37},"name":"zwlr_data_control_manager_v1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8451},{"krate":0,"index":8452},{"krate":0,"index":14679},{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8456},{"krate":0,"index":8457},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8471},{"krate":0,"index":8487},{"krate":0,"index":8488},{"krate":0,"index":8501},{"krate":0,"index":8503},{"krate":0,"index":8509},{"krate":0,"index":8515},{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523}],"decl_id":null,"docs":"manager to control data devices","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8464},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8647741,"byte_end":8647757,"line_start":11,"line_end":11,"column_start":9,"column_end":25},"name":"CreateDataSource","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::Request::CreateDataSource","value":"Request::CreateDataSource { id }","parent":{"krate":0,"index":8463},"children":[],"decl_id":null,"docs":"create a new data source","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8466},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8647982,"byte_end":8647995,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"GetDataDevice","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::Request::GetDataDevice","value":"Request::GetDataDevice { id, seat }","parent":{"krate":0,"index":8463},"children":[],"decl_id":null,"docs":"get a data device for a seat","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8469},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8648384,"byte_end":8648391,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8463},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8463},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8647650,"byte_end":8647657,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::Request","value":"pub enum Request {\n\n    #[doc = \"create a new data source\\n\\nCreate a new data source.\"]\n    CreateDataSource {\n        id: Proxy<super::zwlr_data_control_source_v1::ZwlrDataControlSourceV1>,\n    },\n\n    #[doc =\n      \"get a data device for a seat\\n\\nCreate a data device that can be used to manage a seat's selection.\"]\n    GetDataDevice {\n        id: Proxy<super::zwlr_data_control_device_v1::ZwlrDataControlDeviceV1>,\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n\n    #[doc =\n      \"destroy the manager\\n\\nAll objects created by the manager will still remain valid, until their\\nappropriate destroy request has been called.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8464},{"krate":0,"index":8466},{"krate":0,"index":8469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8487},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8652169,"byte_end":8652174,"line_start":121,"line_end":121,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8501},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8653474,"byte_end":8653498,"line_start":164,"line_end":164,"column_start":16,"column_end":40},"name":"ZwlrDataControlManagerV1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::ZwlrDataControlManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8509},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8653880,"byte_end":8653893,"line_start":174,"line_end":174,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8510},{"krate":0,"index":8512},{"krate":0,"index":8514}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8510},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8653980,"byte_end":8653998,"line_start":176,"line_end":176,"column_start":12,"column_end":30},"name":"create_data_source","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::RequestsTrait::create_data_source","value":"pub fn create_data_source<F>(&Self, F)\n->\n    Result<Proxy<super::zwlr_data_control_source_v1::ZwlrDataControlSourceV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwlr_data_control_source_v1::ZwlrDataControlSourceV1>)\n-> Proxy<super::zwlr_data_control_source_v1::ZwlrDataControlSourceV1>","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"create a new data source","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8512},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8654497,"byte_end":8654512,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"get_data_device","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::RequestsTrait::get_data_device","value":"pub fn get_data_device<F>(&Self, &Proxy<super::wl_seat::WlSeat>, F)\n->\n    Result<Proxy<super::zwlr_data_control_device_v1::ZwlrDataControlDeviceV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwlr_data_control_device_v1::ZwlrDataControlDeviceV1>)\n-> Proxy<super::zwlr_data_control_device_v1::ZwlrDataControlDeviceV1>","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"get a data device for a seat","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8514},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8655206,"byte_end":8655213,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8521},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8656749,"byte_end":8656777,"line_start":238,"line_end":238,"column_start":15,"column_end":43},"name":"REQ_CREATE_DATA_SOURCE_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::REQ_CREATE_DATA_SOURCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8522},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8656873,"byte_end":8656898,"line_start":240,"line_end":240,"column_start":15,"column_end":40},"name":"REQ_GET_DATA_DEVICE_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::REQ_GET_DATA_DEVICE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8523},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8656994,"byte_end":8657011,"line_start":242,"line_end":242,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8524},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8657200,"byte_end":8657227,"line_start":245,"line_end":245,"column_start":9,"column_end":36},"name":"zwlr_data_control_device_v1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527},{"krate":0,"index":8528},{"krate":0,"index":8529},{"krate":0,"index":8530},{"krate":0,"index":8531},{"krate":0,"index":14707},{"krate":0,"index":8532},{"krate":0,"index":8533},{"krate":0,"index":8534},{"krate":0,"index":8535},{"krate":0,"index":8536},{"krate":0,"index":8537},{"krate":0,"index":8538},{"krate":0,"index":8539},{"krate":0,"index":8540},{"krate":0,"index":8541},{"krate":0,"index":8542},{"krate":0,"index":8547},{"krate":0,"index":8563},{"krate":0,"index":8570},{"krate":0,"index":8583},{"krate":0,"index":8585},{"krate":0,"index":8591},{"krate":0,"index":8594},{"krate":0,"index":8598},{"krate":0,"index":8599},{"krate":0,"index":8600},{"krate":0,"index":8601},{"krate":0,"index":8602}],"decl_id":null,"docs":"manage a data device for a seat","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8543},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8657694,"byte_end":8657706,"line_start":254,"line_end":254,"column_start":9,"column_end":21},"name":"SetSelection","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Request::SetSelection","value":"Request::SetSelection { source }","parent":{"krate":0,"index":8542},"children":[],"decl_id":null,"docs":"copy data to the selection","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8545},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8657978,"byte_end":8657985,"line_start":258,"line_end":258,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8542},"children":[],"decl_id":null,"docs":"destroy this data device","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8542},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8657510,"byte_end":8657517,"line_start":252,"line_end":252,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"copy data to the selection\\n\\nAll objects created by the device will still remain valid, until their\\nappropriate destroy request has been called.\"]\n    SetSelection {\n        source: Option<Proxy<super::zwlr_data_control_source_v1::ZwlrDataControlSourceV1>>,\n    },\n\n    #[doc =\n      \"destroy this data device\\n\\nDestroys the data device object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8543},{"krate":0,"index":8545}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8564},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8661201,"byte_end":8661210,"line_start":340,"line_end":340,"column_start":9,"column_end":18},"name":"DataOffer","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Event::DataOffer","value":"Event::DataOffer { id }","parent":{"krate":0,"index":8563},"children":[],"decl_id":null,"docs":"introduce a new wlr_data_control_offer","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8566},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8661935,"byte_end":8661944,"line_start":344,"line_end":344,"column_start":9,"column_end":18},"name":"Selection","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Event::Selection","value":"Event::Selection { id }","parent":{"krate":0,"index":8563},"children":[],"decl_id":null,"docs":"introduce a new wlr_data_control_offer","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8568},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8662199,"byte_end":8662207,"line_start":348,"line_end":348,"column_start":9,"column_end":17},"name":"Finished","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Event::Finished","value":"Event::Finished","parent":{"krate":0,"index":8563},"children":[],"decl_id":null,"docs":"this data control is no longer valid","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8563},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8660698,"byte_end":8660703,"line_start":338,"line_end":338,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"introduce a new wlr_data_control_offer\\n\\nThe data_offer event introduces a new wlr_data_control_offer object,\\nwhich will subsequently be used in the wlr_data_control_device.selection\\nevent. Immediately following the wlr_data_control_device.data_offer\\nevent, the new data_offer object will send out\\nwlr_data_control_offer.offer events to describe the MIME types it\\noffers.\\n\\nThis event replaces the previous data offer, which should be destroyed\\nby the client.\"]\n    DataOffer {\n        id: NewProxy<super::zwlr_data_control_offer_v1::ZwlrDataControlOfferV1>,\n    },\n\n    #[doc =\n      \"introduce a new wlr_data_control_offer\\n\\nThe selection event is sent out to notify the client of a new\\nwlr_data_control_offer for the selection for this device. The\\nwlr_data_control_device.data_offer and the wlr_data_control_offer.offer\\nevents are sent out immediately before this event to introduce the data\\noffer object. The selection event is sent to a client when a new\\nselection is set. The wlr_data_control_offer is valid until a new\\nwlr_data_control_offer or NULL is received. The client must destroy the\\nprevious selection wlr_data_control_offer, if any, upon receiving this\\nevent.\"]\n    Selection {\n        id: Option<Proxy<super::zwlr_data_control_offer_v1::ZwlrDataControlOfferV1>>,\n    },\n\n    #[doc =\n      \"this data control is no longer valid\\n\\nThis data control object is no longer valid and should be destroyed by\\nthe client.\"]\n    Finished,\n}","parent":null,"children":[{"krate":0,"index":8564},{"krate":0,"index":8566},{"krate":0,"index":8568}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8583},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8666429,"byte_end":8666452,"line_start":465,"line_end":465,"column_start":16,"column_end":39},"name":"ZwlrDataControlDeviceV1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::ZwlrDataControlDeviceV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8591},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8666831,"byte_end":8666844,"line_start":475,"line_end":475,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8592},{"krate":0,"index":8593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8592},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8667024,"byte_end":8667037,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"set_selection","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::RequestsTrait::set_selection","value":"pub fn set_selection(&Self,\n                     Option<&Proxy<super::zwlr_data_control_source_v1::ZwlrDataControlSourceV1>>)\n-> ()","parent":{"krate":0,"index":8591},"children":[],"decl_id":null,"docs":"copy data to the selection","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8593},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8667367,"byte_end":8667374,"line_start":482,"line_end":482,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8591},"children":[],"decl_id":null,"docs":"destroy this data device","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8598},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8667965,"byte_end":8667988,"line_start":500,"line_end":500,"column_start":15,"column_end":38},"name":"REQ_SET_SELECTION_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::REQ_SET_SELECTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8599},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8668084,"byte_end":8668101,"line_start":502,"line_end":502,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8600},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8668195,"byte_end":8668215,"line_start":504,"line_end":504,"column_start":15,"column_end":35},"name":"EVT_DATA_OFFER_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::EVT_DATA_OFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8601},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8668309,"byte_end":8668328,"line_start":506,"line_end":506,"column_start":15,"column_end":34},"name":"EVT_SELECTION_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::EVT_SELECTION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8602},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8668422,"byte_end":8668440,"line_start":508,"line_end":508,"column_start":15,"column_end":33},"name":"EVT_FINISHED_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_device_v1::EVT_FINISHED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8603},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8668744,"byte_end":8668771,"line_start":511,"line_end":511,"column_start":9,"column_end":36},"name":"zwlr_data_control_source_v1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8604},{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":14735},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619},{"krate":0,"index":8620},{"krate":0,"index":8756},{"krate":0,"index":8767},{"krate":0,"index":8765},{"krate":0,"index":8763},{"krate":0,"index":8760},{"krate":0,"index":8761},{"krate":0,"index":8621},{"krate":0,"index":8624},{"krate":0,"index":8629},{"krate":0,"index":8644},{"krate":0,"index":8650},{"krate":0,"index":8664},{"krate":0,"index":8666},{"krate":0,"index":8672},{"krate":0,"index":8675},{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681}],"decl_id":null,"docs":"offer to transfer data","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8757},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669206,"byte_end":8669218,"line_start":522,"line_end":522,"column_start":9,"column_end":21},"name":"InvalidOffer","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Error::InvalidOffer","value":"Error::InvalidOffer","parent":{"krate":0,"index":8756},"children":[],"decl_id":null,"docs":"offer sent after wlr_data_control_device.set_selection\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8756},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669116,"byte_end":8669121,"line_start":520,"line_end":520,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Error","value":"pub enum Error {\n\n    #[doc = \"offer sent after wlr_data_control_device.set_selection\"]\n    InvalidOffer = ,\n}","parent":null,"children":[{"krate":0,"index":8757}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669045,"byte_end":8669057,"line_start":518,"line_end":518,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8622},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669262,"byte_end":8669270,"line_start":525,"line_end":525,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8623},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669442,"byte_end":8669448,"line_start":531,"line_end":531,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8625},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669798,"byte_end":8669803,"line_start":537,"line_end":537,"column_start":9,"column_end":14},"name":"Offer","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Request::Offer","value":"Request::Offer { mime_type }","parent":{"krate":0,"index":8624},"children":[],"decl_id":null,"docs":"add an offered MIME type","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8627},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669984,"byte_end":8669991,"line_start":539,"line_end":539,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8624},"children":[],"decl_id":null,"docs":"destroy this source","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8624},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669519,"byte_end":8669526,"line_start":535,"line_end":535,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"add an offered MIME type\\n\\nThis request adds a MIME type to the set of MIME types advertised to\\ntargets. Can be called several times to offer multiple types.\\n\\nCalling this after wlr_data_control_device.set_selection is a protocol\\nerror.\"]\n    Offer {\n        mime_type: String,\n    },\n\n    #[doc =\n      \"destroy this source\\n\\nDestroys the data source object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8625},{"krate":0,"index":8627}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8645},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8672903,"byte_end":8672907,"line_start":622,"line_end":622,"column_start":9,"column_end":13},"name":"Send","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Event::Send","value":"Event::Send { mime_type, fd }","parent":{"krate":0,"index":8644},"children":[],"decl_id":null,"docs":"send the data","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8648},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8673206,"byte_end":8673215,"line_start":627,"line_end":627,"column_start":9,"column_end":18},"name":"Cancelled","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Event::Cancelled","value":"Event::Cancelled","parent":{"krate":0,"index":8644},"children":[],"decl_id":null,"docs":"selection was cancelled","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8644},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8672727,"byte_end":8672732,"line_start":620,"line_end":620,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"send the data\\n\\nRequest for data from the client. Send the data as the specified MIME\\ntype over the passed file descriptor, then close it.\"]\n    Send {\n        mime_type: String,\n        fd: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"selection was cancelled\\n\\nThis data source is no longer valid. The data source has been replaced\\nby another data source.\\n\\nThe client should clean up and destroy this data source.\"]\n    Cancelled,\n}","parent":null,"children":[{"krate":0,"index":8645},{"krate":0,"index":8648}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8664},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8676397,"byte_end":8676420,"line_start":720,"line_end":720,"column_start":16,"column_end":39},"name":"ZwlrDataControlSourceV1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::ZwlrDataControlSourceV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8672},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8676799,"byte_end":8676812,"line_start":730,"line_end":730,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8673},{"krate":0,"index":8674}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8673},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8677087,"byte_end":8677092,"line_start":732,"line_end":732,"column_start":12,"column_end":17},"name":"offer","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::RequestsTrait::offer","value":"pub fn offer(&Self, String) -> ()","parent":{"krate":0,"index":8672},"children":[],"decl_id":null,"docs":"add an offered MIME type","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8674},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8677316,"byte_end":8677323,"line_start":734,"line_end":734,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8672},"children":[],"decl_id":null,"docs":"destroy this source","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8678},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8677785,"byte_end":8677800,"line_start":749,"line_end":749,"column_start":15,"column_end":30},"name":"REQ_OFFER_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::REQ_OFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8679},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8677896,"byte_end":8677913,"line_start":751,"line_end":751,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8680},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8678007,"byte_end":8678021,"line_start":753,"line_end":753,"column_start":15,"column_end":29},"name":"EVT_SEND_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::EVT_SEND_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8681},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8678115,"byte_end":8678134,"line_start":755,"line_end":755,"column_start":15,"column_end":34},"name":"EVT_CANCELLED_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_source_v1::EVT_CANCELLED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8682},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8678475,"byte_end":8678501,"line_start":758,"line_end":758,"column_start":9,"column_end":35},"name":"zwlr_data_control_offer_v1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8683},{"krate":0,"index":8684},{"krate":0,"index":8685},{"krate":0,"index":8686},{"krate":0,"index":8687},{"krate":0,"index":8688},{"krate":0,"index":8689},{"krate":0,"index":14763},{"krate":0,"index":8690},{"krate":0,"index":8691},{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8706},{"krate":0,"index":8721},{"krate":0,"index":8724},{"krate":0,"index":8738},{"krate":0,"index":8740},{"krate":0,"index":8746},{"krate":0,"index":8749},{"krate":0,"index":8752},{"krate":0,"index":8753},{"krate":0,"index":8754}],"decl_id":null,"docs":"offer to transfer data","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8701},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8679396,"byte_end":8679403,"line_start":767,"line_end":767,"column_start":9,"column_end":16},"name":"Receive","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::Request::Receive","value":"Request::Receive { mime_type, fd }","parent":{"krate":0,"index":8700},"children":[],"decl_id":null,"docs":"request that the data is transferred","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8704},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8679647,"byte_end":8679654,"line_start":772,"line_end":772,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8700},"children":[],"decl_id":null,"docs":"destroy this offer","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8700},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8678784,"byte_end":8678791,"line_start":765,"line_end":765,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"request that the data is transferred\\n\\nTo transfer the offered data, the client issues this request and\\nindicates the MIME type it wants to receive. The transfer happens\\nthrough the passed file descriptor (typically created with the pipe\\nsystem call). The source client writes the data in the MIME type\\nrepresentation requested and then closes the file descriptor.\\n\\nThe receiving client reads from the read end of the pipe until EOF and\\nthen closes its end, at which point the transfer is complete.\\n\\nThis request may happen multiple times for different MIME types.\"]\n    Receive {\n        mime_type: String,\n        fd: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"destroy this offer\\n\\nDestroys the data offer object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8701},{"krate":0,"index":8704}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8722},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8682738,"byte_end":8682743,"line_start":859,"line_end":859,"column_start":9,"column_end":14},"name":"Offer","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::Event::Offer","value":"Event::Offer { mime_type }","parent":{"krate":0,"index":8721},"children":[],"decl_id":null,"docs":"advertise offered MIME type","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8721},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8682571,"byte_end":8682576,"line_start":857,"line_end":857,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"advertise offered MIME type\\n\\nSent immediately after creating the wlr_data_control_offer object.\\nOne event per offered MIME type.\"]\n    Offer {\n        mime_type: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":8722}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8738},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8685298,"byte_end":8685320,"line_start":934,"line_end":934,"column_start":16,"column_end":38},"name":"ZwlrDataControlOfferV1","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::ZwlrDataControlOfferV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8746},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8685696,"byte_end":8685709,"line_start":944,"line_end":944,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8747},{"krate":0,"index":8748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8747},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8686317,"byte_end":8686324,"line_start":946,"line_end":946,"column_start":12,"column_end":19},"name":"receive","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::RequestsTrait::receive","value":"pub fn receive(&Self, String, ::std::os::unix::io::RawFd) -> ()","parent":{"krate":0,"index":8746},"children":[],"decl_id":null,"docs":"request that the data is transferred","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8748},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8686578,"byte_end":8686585,"line_start":948,"line_end":948,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8746},"children":[],"decl_id":null,"docs":"destroy this offer","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8752},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8687106,"byte_end":8687123,"line_start":964,"line_end":964,"column_start":15,"column_end":32},"name":"REQ_RECEIVE_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::REQ_RECEIVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8753},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8687219,"byte_end":8687236,"line_start":966,"line_end":966,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8754},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8687330,"byte_end":8687345,"line_start":968,"line_end":968,"column_start":15,"column_end":30},"name":"EVT_OFFER_SINCE","qualname":"::wlr::unstable::data_control::v1::generated::client::zwlr_data_control_offer_v1::EVT_OFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24405,"byte_end":24418,"line_start":40,"line_end":40,"column_start":13,"column_end":26},"name":"export_dmabuf","qualname":"::wlr::unstable::export_dmabuf","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":8768}],"decl_id":null,"docs":" A protocol for low overhead screen content capturing","sig":null,"attributes":[{"value":"! A protocol for low overhead screen content capturing","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24429,"byte_end":24485,"line_start":41,"line_end":41,"column_start":9,"column_end":65}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24494,"byte_end":24497,"line_start":42,"line_end":42,"column_start":9,"column_end":12}},{"value":"! An interface to capture surfaces in an efficient way by exporting DMA-BUFs.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24506,"byte_end":24585,"line_start":43,"line_end":43,"column_start":9,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":8768},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::export_dmabuf::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":8769},{"krate":0,"index":8770},{"krate":0,"index":8771}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":8804},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_interfaces.rs","byte_start":8688186,"byte_end":8688224,"line_start":21,"line_end":21,"column_start":16,"column_end":54},"name":"zwlr_export_dmabuf_manager_v1_requests","qualname":"::wlr::unstable::export_dmabuf::v1::generated::c_interfaces::zwlr_export_dmabuf_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8806},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_interfaces.rs","byte_start":8688701,"byte_end":8688740,"line_start":33,"line_end":33,"column_start":16,"column_end":55},"name":"zwlr_export_dmabuf_manager_v1_interface","qualname":"::wlr::unstable::export_dmabuf::v1::generated::c_interfaces::zwlr_export_dmabuf_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8807},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_interfaces.rs","byte_start":8689044,"byte_end":8689080,"line_start":41,"line_end":41,"column_start":16,"column_end":52},"name":"zwlr_export_dmabuf_frame_v1_requests","qualname":"::wlr::unstable::export_dmabuf::v1::generated::c_interfaces::zwlr_export_dmabuf_frame_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_interfaces.rs","byte_start":8689286,"byte_end":8689320,"line_start":46,"line_end":46,"column_start":16,"column_end":50},"name":"zwlr_export_dmabuf_frame_v1_events","qualname":"::wlr::unstable::export_dmabuf::v1::generated::c_interfaces::zwlr_export_dmabuf_frame_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":8811},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_interfaces.rs","byte_start":8690130,"byte_end":8690167,"line_start":68,"line_end":68,"column_start":16,"column_end":53},"name":"zwlr_export_dmabuf_frame_v1_interface","qualname":"::wlr::unstable::export_dmabuf::v1::generated::c_interfaces::zwlr_export_dmabuf_frame_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8812},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8690620,"byte_end":8690649,"line_start":2,"line_end":2,"column_start":9,"column_end":38},"name":"zwlr_export_dmabuf_manager_v1","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819},{"krate":0,"index":14829},{"krate":0,"index":8820},{"krate":0,"index":8821},{"krate":0,"index":8822},{"krate":0,"index":8823},{"krate":0,"index":8824},{"krate":0,"index":8825},{"krate":0,"index":8826},{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830},{"krate":0,"index":8837},{"krate":0,"index":8852},{"krate":0,"index":8853},{"krate":0,"index":8866},{"krate":0,"index":8868},{"krate":0,"index":8874},{"krate":0,"index":8878},{"krate":0,"index":8882},{"krate":0,"index":8883}],"decl_id":null,"docs":"manager to inform clients and begin capturing","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8831},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8691049,"byte_end":8691062,"line_start":11,"line_end":11,"column_start":9,"column_end":22},"name":"CaptureOutput","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::Request::CaptureOutput","value":"Request::CaptureOutput { frame, overlay_cursor, output }","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"capture a frame from an output","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8835},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8691493,"byte_end":8691500,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8830},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8690932,"byte_end":8690939,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"capture a frame from an output\\n\\nCapture the next frame of a an entire output.\"]\n    CaptureOutput {\n        frame: Proxy<super::zwlr_export_dmabuf_frame_v1::ZwlrExportDmabufFrameV1>,\n        overlay_cursor: i32,\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n\n    #[doc =\n      \"destroy the manager\\n\\nAll objects created by the manager will still remain valid, until their\\nappropriate destroy request has been called.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8831},{"krate":0,"index":8835}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8852},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8694881,"byte_end":8694886,"line_start":116,"line_end":116,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8866},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8696186,"byte_end":8696211,"line_start":159,"line_end":159,"column_start":16,"column_end":41},"name":"ZwlrExportDmabufManagerV1","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::ZwlrExportDmabufManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8874},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8696596,"byte_end":8696609,"line_start":169,"line_end":169,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8875},{"krate":0,"index":8877}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8875},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8696722,"byte_end":8696736,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"capture_output","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::RequestsTrait::capture_output","value":"pub fn capture_output<F>(&Self, i32, &Proxy<super::wl_output::WlOutput>, F)\n->\n    Result<Proxy<super::zwlr_export_dmabuf_frame_v1::ZwlrExportDmabufFrameV1>,\n           ()> where\nF: FnOnce(NewProxy<super::zwlr_export_dmabuf_frame_v1::ZwlrExportDmabufFrameV1>)\n-> Proxy<super::zwlr_export_dmabuf_frame_v1::ZwlrExportDmabufFrameV1>","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":"capture a frame from an output","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8877},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8697469,"byte_end":8697476,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8874},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8882},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8698519,"byte_end":8698543,"line_start":211,"line_end":211,"column_start":15,"column_end":39},"name":"REQ_CAPTURE_OUTPUT_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::REQ_CAPTURE_OUTPUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8883},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8698639,"byte_end":8698656,"line_start":213,"line_end":213,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8884},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699337,"byte_end":8699364,"line_start":216,"line_end":216,"column_start":9,"column_end":36},"name":"zwlr_export_dmabuf_frame_v1","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":8885},{"krate":0,"index":8886},{"krate":0,"index":8887},{"krate":0,"index":8888},{"krate":0,"index":8889},{"krate":0,"index":8890},{"krate":0,"index":8891},{"krate":0,"index":14857},{"krate":0,"index":8892},{"krate":0,"index":8893},{"krate":0,"index":8894},{"krate":0,"index":8895},{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899},{"krate":0,"index":8900},{"krate":0,"index":8901},{"krate":0,"index":8980},{"krate":0,"index":8991},{"krate":0,"index":8989},{"krate":0,"index":8987},{"krate":0,"index":8984},{"krate":0,"index":8985},{"krate":0,"index":8902},{"krate":0,"index":8992},{"krate":0,"index":9009},{"krate":0,"index":9007},{"krate":0,"index":9005},{"krate":0,"index":9002},{"krate":0,"index":9003},{"krate":0,"index":8905},{"krate":0,"index":8908},{"krate":0,"index":8911},{"krate":0,"index":8925},{"krate":0,"index":8950},{"krate":0,"index":8963},{"krate":0,"index":8965},{"krate":0,"index":8971},{"krate":0,"index":8973},{"krate":0,"index":8975},{"krate":0,"index":8976},{"krate":0,"index":8977},{"krate":0,"index":8978},{"krate":0,"index":8979}],"decl_id":null,"docs":"a DMA-BUF frame","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8981},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699872,"byte_end":8699881,"line_start":228,"line_end":228,"column_start":9,"column_end":18},"name":"Transient","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Flags::Transient","value":"Flags::Transient","parent":{"krate":0,"index":8980},"children":[],"decl_id":null,"docs":"clients should copy frame before processing\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8980},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699793,"byte_end":8699798,"line_start":226,"line_end":226,"column_start":14,"column_end":19},"name":"Flags","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Flags","value":"pub enum Flags {\n\n    #[doc = \"clients should copy frame before processing\"]\n    Transient = ,\n}","parent":null,"children":[{"krate":0,"index":8981}],"decl_id":null,"docs":"frame flags","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699722,"byte_end":8699734,"line_start":224,"line_end":224,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8903},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699925,"byte_end":8699933,"line_start":231,"line_end":231,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Flags>::from_raw","value":"pub fn from_raw(u32) -> Option<Flags>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8904},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700102,"byte_end":8700108,"line_start":237,"line_end":237,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Flags>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8993},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700407,"byte_end":8700416,"line_start":246,"line_end":246,"column_start":9,"column_end":18},"name":"Temporary","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::CancelReason::Temporary","value":"CancelReason::Temporary","parent":{"krate":0,"index":8992},"children":[],"decl_id":null,"docs":"temporary error, source will produce more frames\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8996},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700493,"byte_end":8700502,"line_start":248,"line_end":248,"column_start":9,"column_end":18},"name":"Permanent","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::CancelReason::Permanent","value":"CancelReason::Permanent","parent":{"krate":0,"index":8992},"children":[],"decl_id":null,"docs":"fatal error, source will not produce frames\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8999},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700584,"byte_end":8700592,"line_start":250,"line_end":250,"column_start":9,"column_end":17},"name":"Resizing","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::CancelReason::Resizing","value":"CancelReason::Resizing","parent":{"krate":0,"index":8992},"children":[],"decl_id":null,"docs":"temporary error, source will produce more frames\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8992},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700316,"byte_end":8700328,"line_start":244,"line_end":244,"column_start":14,"column_end":26},"name":"CancelReason","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::CancelReason","value":"pub enum CancelReason {\n\n    #[doc = \"temporary error, source will produce more frames\"]\n    Temporary = ,\n\n    #[doc = \"fatal error, source will not produce frames\"]\n    Permanent = ,\n\n    #[doc = \"temporary error, source will produce more frames\"]\n    Resizing = ,\n}","parent":null,"children":[{"krate":0,"index":8993},{"krate":0,"index":8996},{"krate":0,"index":8999}],"decl_id":null,"docs":"cancel reason","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700245,"byte_end":8700257,"line_start":242,"line_end":242,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8906},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700643,"byte_end":8700651,"line_start":253,"line_end":253,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<CancelReason>::from_raw","value":"pub fn from_raw(u32) -> Option<CancelReason>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8907},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700937,"byte_end":8700943,"line_start":261,"line_end":261,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<CancelReason>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8909},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8701355,"byte_end":8701362,"line_start":267,"line_end":267,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":8908},"children":[],"decl_id":null,"docs":"delete this object, used or not","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8908},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8701014,"byte_end":8701021,"line_start":265,"line_end":265,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"delete this object, used or not\\n\\nUnreferences the frame. This request must be called as soon as its no\\nlonger used.\\n\\nIt can be called at any time by the client. The client will still have\\nto close any FDs it has been given.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":8909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8926},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8703489,"byte_end":8703494,"line_start":328,"line_end":328,"column_start":9,"column_end":14},"name":"Frame","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Event::Frame","value":"Event::Frame { width, height, offset_x, offset_y, buffer_flags, flags, format, mod_high, mod_low, num_objects }","parent":{"krate":0,"index":8925},"children":[],"decl_id":null,"docs":"a frame description","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8937},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8704074,"byte_end":8704080,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"name":"Object","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Event::Object","value":"Event::Object { index, fd, size, offset, stride, plane_index }","parent":{"krate":0,"index":8925},"children":[],"decl_id":null,"docs":"an object description","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8944},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8704962,"byte_end":8704967,"line_start":350,"line_end":350,"column_start":9,"column_end":14},"name":"Ready","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Event::Ready","value":"Event::Ready { tv_sec_hi, tv_sec_lo, tv_nsec }","parent":{"krate":0,"index":8925},"children":[],"decl_id":null,"docs":"indicates frame is available for reading","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8948},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8705544,"byte_end":8705550,"line_start":356,"line_end":356,"column_start":9,"column_end":15},"name":"Cancel","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Event::Cancel","value":"Event::Cancel { reason }","parent":{"krate":0,"index":8925},"children":[],"decl_id":null,"docs":"indicates the frame is no longer valid","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8925},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8703176,"byte_end":8703181,"line_start":326,"line_end":326,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"a frame description\\n\\nMain event supplying the client with information about the frame. If the\\ncapture didn't fail, this event is always emitted first before any other\\nevents.\\n\\nThis event is followed by a number of \\\"object\\\" as specified by the\\n\\\"num_objects\\\" argument.\"]\n    Frame {\n        width: u32,\n        height: u32,\n        offset_x: u32,\n        offset_y: u32,\n        buffer_flags: u32,\n        flags: Flags,\n        format: u32,\n        mod_high: u32,\n        mod_low: u32,\n        num_objects: u32,\n    },\n\n    #[doc =\n      \"an object description\\n\\nEvent which serves to supply the client with the file descriptors\\ncontaining the data for each object.\\n\\nAfter receiving this event, the client must always close the file\\ndescriptor as soon as they're done with it and even if the frame fails.\"]\n    Object {\n        index: u32,\n        fd: ::std::os::unix::io::RawFd,\n        size: u32,\n        offset: u32,\n        stride: u32,\n        plane_index: u32,\n    },\n\n    #[doc =\n      \"indicates frame is available for reading\\n\\nThis event is sent as soon as the frame is presented, indicating it is\\navailable for reading. This event includes the time at which\\npresentation happened at.\\n\\nThe timestamp is expressed as tv_sec_hi, tv_sec_lo, tv_nsec triples,\\neach component being an unsigned 32-bit value. Whole seconds are in\\ntv_sec which is a 64-bit value combined from tv_sec_hi and tv_sec_lo,\\nand the additional fractional part in tv_nsec as nanoseconds. Hence,\\nfor valid timestamps tv_nsec must be in [0, 999999999]. The seconds part\\nmay have an arbitrary offset at start.\\n\\nAfter receiving this event, the client should destroy this object.\"]\n    Ready {\n        tv_sec_hi: u32,\n        tv_sec_lo: u32,\n        tv_nsec: u32,\n    },\n\n    #[doc =\n      \"indicates the frame is no longer valid\\n\\nIf the capture failed or if the frame is no longer valid after the\\n\\\"frame\\\" event has been emitted, this event will be used to inform the\\nclient to scrap the frame.\\n\\nIf the failure is temporary, the client may capture again the same\\nsource. If the failure is permanent, any further attempts to capture the\\nsame source will fail again.\\n\\nAfter receiving this event, the client should destroy this object.\"]\n    Cancel {\n        reason: CancelReason,\n    },\n}","parent":null,"children":[{"krate":0,"index":8926},{"krate":0,"index":8937},{"krate":0,"index":8944},{"krate":0,"index":8948}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8963},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8716788,"byte_end":8716811,"line_start":650,"line_end":650,"column_start":16,"column_end":39},"name":"ZwlrExportDmabufFrameV1","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::ZwlrExportDmabufFrameV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8971},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8717190,"byte_end":8717203,"line_start":660,"line_end":660,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":8972}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8972},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8717570,"byte_end":8717577,"line_start":662,"line_end":662,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":8971},"children":[],"decl_id":null,"docs":"delete this object, used or not","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8975},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8717858,"byte_end":8717875,"line_start":671,"line_end":671,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8976},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8717969,"byte_end":8717984,"line_start":673,"line_end":673,"column_start":15,"column_end":30},"name":"EVT_FRAME_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::EVT_FRAME_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8977},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8718078,"byte_end":8718094,"line_start":675,"line_end":675,"column_start":15,"column_end":31},"name":"EVT_OBJECT_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::EVT_OBJECT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8978},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8718188,"byte_end":8718203,"line_start":677,"line_end":677,"column_start":15,"column_end":30},"name":"EVT_READY_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::EVT_READY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8979},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8718297,"byte_end":8718313,"line_start":679,"line_end":679,"column_start":15,"column_end":31},"name":"EVT_CANCEL_SINCE","qualname":"::wlr::unstable::export_dmabuf::v1::generated::client::zwlr_export_dmabuf_frame_v1::EVT_CANCEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24798,"byte_end":24814,"line_start":55,"line_end":55,"column_start":13,"column_end":29},"name":"foreign_toplevel","qualname":"::wlr::unstable::foreign_toplevel","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":9010}],"decl_id":null,"docs":" List and control opened apps","sig":null,"attributes":[{"value":"! List and control opened apps","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24825,"byte_end":24857,"line_start":56,"line_end":56,"column_start":9,"column_end":41}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24866,"byte_end":24869,"line_start":57,"line_end":57,"column_start":9,"column_end":12}},{"value":"! Use for creating taskbars and docks.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24878,"byte_end":24918,"line_start":58,"line_end":58,"column_start":9,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":9010},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::foreign_toplevel::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":9011},{"krate":0,"index":9012},{"krate":0,"index":9013}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":9048},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_interfaces.rs","byte_start":8718544,"byte_end":8718585,"line_start":5,"line_end":5,"column_start":16,"column_end":57},"name":"zwlr_foreign_toplevel_manager_v1_requests","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::c_interfaces::zwlr_foreign_toplevel_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9052},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_interfaces.rs","byte_start":8718966,"byte_end":8719005,"line_start":12,"line_end":12,"column_start":16,"column_end":55},"name":"zwlr_foreign_toplevel_manager_v1_events","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::c_interfaces::zwlr_foreign_toplevel_manager_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9054},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_interfaces.rs","byte_start":8719470,"byte_end":8719512,"line_start":24,"line_end":24,"column_start":16,"column_end":58},"name":"zwlr_foreign_toplevel_manager_v1_interface","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::c_interfaces::zwlr_foreign_toplevel_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9059},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_interfaces.rs","byte_start":8720322,"byte_end":8720362,"line_start":41,"line_end":41,"column_start":16,"column_end":56},"name":"zwlr_foreign_toplevel_handle_v1_requests","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::c_interfaces::zwlr_foreign_toplevel_handle_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9065},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_interfaces.rs","byte_start":8722366,"byte_end":8722404,"line_start":87,"line_end":87,"column_start":16,"column_end":54},"name":"zwlr_foreign_toplevel_handle_v1_events","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::c_interfaces::zwlr_foreign_toplevel_handle_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9067},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_interfaces.rs","byte_start":8723867,"byte_end":8723908,"line_start":124,"line_end":124,"column_start":16,"column_end":57},"name":"zwlr_foreign_toplevel_handle_v1_interface","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::c_interfaces::zwlr_foreign_toplevel_handle_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9068},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8724618,"byte_end":8724650,"line_start":2,"line_end":2,"column_start":9,"column_end":41},"name":"zwlr_foreign_toplevel_manager_v1","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9069},{"krate":0,"index":9070},{"krate":0,"index":9071},{"krate":0,"index":9072},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":14931},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079},{"krate":0,"index":9080},{"krate":0,"index":9081},{"krate":0,"index":9082},{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9085},{"krate":0,"index":9086},{"krate":0,"index":9089},{"krate":0,"index":9103},{"krate":0,"index":9108},{"krate":0,"index":9121},{"krate":0,"index":9123},{"krate":0,"index":9129},{"krate":0,"index":9131},{"krate":0,"index":9133},{"krate":0,"index":9134},{"krate":0,"index":9135}],"decl_id":null,"docs":"list and control opened apps","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9087},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8725234,"byte_end":8725238,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"Stop","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::Request::Stop","value":"Request::Stop","parent":{"krate":0,"index":9086},"children":[],"decl_id":null,"docs":"stop sending events","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9086},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8724933,"byte_end":8724940,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"stop sending events\\n\\nIndicates the client no longer wishes to receive events for new toplevels.\\nHowever the compositor may emit further toplevel_created events, until\\nthe finished event is emitted.\\n\\nThe client must not send any more requests after this one.\"]\n    Stop,\n}","parent":null,"children":[{"krate":0,"index":9087}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9104},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8727414,"byte_end":8727422,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"name":"Toplevel","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::Event::Toplevel","value":"Event::Toplevel { toplevel }","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"a toplevel has been created","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9106},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8727891,"byte_end":8727899,"line_start":76,"line_end":76,"column_start":9,"column_end":17},"name":"Finished","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::Event::Finished","value":"Event::Finished","parent":{"krate":0,"index":9103},"children":[],"decl_id":null,"docs":"the compositor has finished with the toplevel manager","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9103},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8727026,"byte_end":8727031,"line_start":70,"line_end":70,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"a toplevel has been created\\n\\nThis event is emitted whenever a new toplevel window is created. It\\nis emitted for all toplevels, regardless of the app that has created\\nthem.\\n\\nAll initial details of the toplevel(title, app_id, states, etc.) will\\nbe sent immediately after this event via the corresponding events in\\nzwlr_foreign_toplevel_handle_v1.\"]\n    Toplevel {\n        toplevel: NewProxy<super::zwlr_foreign_toplevel_handle_v1::ZwlrForeignToplevelHandleV1>,\n    },\n\n    #[doc =\n      \"the compositor has finished with the toplevel manager\\n\\nThis event indicates that the compositor is done sending events to the\\nzwlr_foreign_toplevel_manager_v1. The server will destroy the object\\nimmediately after sending this request, so it will become invalid and\\nthe client should free any resources associated with it.\"]\n    Finished,\n}","parent":null,"children":[{"krate":0,"index":9104},{"krate":0,"index":9106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9121},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8730781,"byte_end":8730809,"line_start":161,"line_end":161,"column_start":16,"column_end":44},"name":"ZwlrForeignToplevelManagerV1","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::ZwlrForeignToplevelManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9129},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8731203,"byte_end":8731216,"line_start":171,"line_end":171,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9130},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8731513,"byte_end":8731517,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"stop","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::RequestsTrait::stop","value":"pub fn stop(&Self) -> ()","parent":{"krate":0,"index":9129},"children":[],"decl_id":null,"docs":"stop sending events","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9133},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8731797,"byte_end":8731811,"line_start":182,"line_end":182,"column_start":15,"column_end":29},"name":"REQ_STOP_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::REQ_STOP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9134},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8731905,"byte_end":8731923,"line_start":184,"line_end":184,"column_start":15,"column_end":33},"name":"EVT_TOPLEVEL_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::EVT_TOPLEVEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9135},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8732017,"byte_end":8732035,"line_start":186,"line_end":186,"column_start":15,"column_end":33},"name":"EVT_FINISHED_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_manager_v1::EVT_FINISHED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9136},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8732345,"byte_end":8732376,"line_start":189,"line_end":189,"column_start":9,"column_end":40},"name":"zwlr_foreign_toplevel_handle_v1","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9137},{"krate":0,"index":9138},{"krate":0,"index":9139},{"krate":0,"index":9140},{"krate":0,"index":9141},{"krate":0,"index":9142},{"krate":0,"index":9143},{"krate":0,"index":14959},{"krate":0,"index":9144},{"krate":0,"index":9145},{"krate":0,"index":9146},{"krate":0,"index":9147},{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9152},{"krate":0,"index":9153},{"krate":0,"index":9273},{"krate":0,"index":9290},{"krate":0,"index":9288},{"krate":0,"index":9286},{"krate":0,"index":9283},{"krate":0,"index":9284},{"krate":0,"index":9154},{"krate":0,"index":9291},{"krate":0,"index":9302},{"krate":0,"index":9300},{"krate":0,"index":9298},{"krate":0,"index":9295},{"krate":0,"index":9296},{"krate":0,"index":9157},{"krate":0,"index":9160},{"krate":0,"index":9181},{"krate":0,"index":9202},{"krate":0,"index":9217},{"krate":0,"index":9232},{"krate":0,"index":9234},{"krate":0,"index":9240},{"krate":0,"index":9249},{"krate":0,"index":9258},{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269},{"krate":0,"index":9270},{"krate":0,"index":9271},{"krate":0,"index":9272}],"decl_id":null,"docs":"an opened toplevel","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9274},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8732966,"byte_end":8732975,"line_start":201,"line_end":201,"column_start":9,"column_end":18},"name":"Maximized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::State::Maximized","value":"State::Maximized","parent":{"krate":0,"index":9273},"children":[],"decl_id":null,"docs":"the toplevel is maximized\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9277},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733034,"byte_end":8733043,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"Minimized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::State::Minimized","value":"State::Minimized","parent":{"krate":0,"index":9273},"children":[],"decl_id":null,"docs":"the toplevel is minimized\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9280},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733099,"byte_end":8733108,"line_start":205,"line_end":205,"column_start":9,"column_end":18},"name":"Activated","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::State::Activated","value":"State::Activated","parent":{"krate":0,"index":9273},"children":[],"decl_id":null,"docs":"the toplevel is active\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9273},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8732905,"byte_end":8732910,"line_start":199,"line_end":199,"column_start":14,"column_end":19},"name":"State","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::State","value":"pub enum State {\n\n    #[doc = \"the toplevel is maximized\"]\n    Maximized = ,\n\n    #[doc = \"the toplevel is minimized\"]\n    Minimized = ,\n\n    #[doc = \"the toplevel is active\"]\n    Activated = ,\n}","parent":null,"children":[{"krate":0,"index":9274},{"krate":0,"index":9277},{"krate":0,"index":9280}],"decl_id":null,"docs":"types of states on the toplevel","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8732834,"byte_end":8732846,"line_start":197,"line_end":197,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9155},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733152,"byte_end":8733160,"line_start":208,"line_end":208,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<State>::from_raw","value":"pub fn from_raw(u32) -> Option<State>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9156},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733419,"byte_end":8733425,"line_start":216,"line_end":216,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<State>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9292},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733627,"byte_end":8733643,"line_start":224,"line_end":224,"column_start":9,"column_end":25},"name":"InvalidRectangle","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Error::InvalidRectangle","value":"Error::InvalidRectangle","parent":{"krate":0,"index":9291},"children":[],"decl_id":null,"docs":"the provided rectangle is invalid\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9291},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733558,"byte_end":8733563,"line_start":222,"line_end":222,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Error","value":"pub enum Error {\n\n    #[doc = \"the provided rectangle is invalid\"]\n    InvalidRectangle = ,\n}","parent":null,"children":[{"krate":0,"index":9292}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733487,"byte_end":8733499,"line_start":220,"line_end":220,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9158},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733687,"byte_end":8733695,"line_start":227,"line_end":227,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9159},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733871,"byte_end":8733877,"line_start":233,"line_end":233,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9161},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8734154,"byte_end":8734166,"line_start":239,"line_end":239,"column_start":9,"column_end":21},"name":"SetMaximized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::SetMaximized","value":"Request::SetMaximized","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"requests that the toplevel be maximized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9163},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8734368,"byte_end":8734382,"line_start":241,"line_end":241,"column_start":9,"column_end":23},"name":"UnsetMaximized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::UnsetMaximized","value":"Request::UnsetMaximized","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"requests that the toplevel be unmaximized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9165},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8734580,"byte_end":8734592,"line_start":243,"line_end":243,"column_start":9,"column_end":21},"name":"SetMinimized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::SetMinimized","value":"Request::SetMinimized","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"requests that the toplevel be minimized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9167},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8734794,"byte_end":8734808,"line_start":245,"line_end":245,"column_start":9,"column_end":23},"name":"UnsetMinimized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::UnsetMinimized","value":"Request::UnsetMinimized","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"requests that the toplevel be unminimized","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9169},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8734985,"byte_end":8734993,"line_start":247,"line_end":247,"column_start":9,"column_end":17},"name":"Activate","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::Activate","value":"Request::Activate { seat }","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"activate the toplevel","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9171},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8735460,"byte_end":8735465,"line_start":249,"line_end":249,"column_start":9,"column_end":14},"name":"Close","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::Close","value":"Request::Close","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"request that the toplevel be closed","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9173},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8736088,"byte_end":8736100,"line_start":251,"line_end":251,"column_start":9,"column_end":21},"name":"SetRectangle","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::SetRectangle","value":"Request::SetRectangle { surface, x, y, width, height }","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"the rectangle which represents the toplevel","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9179},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8736638,"byte_end":8736645,"line_start":259,"line_end":259,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":9160},"children":[],"decl_id":null,"docs":"destroy the zwlr_foreign_toplevel_handle_v1 object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9160},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733948,"byte_end":8733955,"line_start":237,"line_end":237,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"requests that the toplevel be maximized\\n\\nRequests that the toplevel be maximized. If the maximized state actually\\nchanges, this will be indicated by the state event.\"]\n    SetMaximized,\n\n    #[doc =\n      \"requests that the toplevel be unmaximized\\n\\nRequests that the toplevel be unmaximized. If the maximized state actually\\nchanges, this will be indicated by the state event.\"]\n    UnsetMaximized,\n\n    #[doc =\n      \"requests that the toplevel be minimized\\n\\nRequests that the toplevel be minimized. If the minimized state actually\\nchanges, this will be indicated by the state event.\"]\n    SetMinimized,\n\n    #[doc =\n      \"requests that the toplevel be unminimized\\n\\nRequests that the toplevel be unminimized. If the minimized state actually\\nchanges, this will be indicated by the state event.\"]\n    UnsetMinimized,\n\n    #[doc =\n      \"activate the toplevel\\n\\nRequest that this toplevel be activated on the given seat.\\nThere is no guarantee the toplevel will be actually activated.\"]\n    Activate {\n        seat: Proxy<super::wl_seat::WlSeat>,\n    },\n\n    #[doc =\n      \"request that the toplevel be closed\\n\\nSend a request to the toplevel to close itself. The compositor would\\ntypically use a shell-specific method to carry out this request, for\\nexample by sending the xdg_toplevel.close event. However, this gives\\nno guarantees the toplevel will actually be destroyed. If and when\\nthis happens, the zwlr_foreign_toplevel_handle_v1.closed event will\\nbe emitted.\"]\n    Close,\n\n    #[doc =\n      \"the rectangle which represents the toplevel\\n\\nThe rectangle of the surface specified in this request corresponds to\\nthe place where the app using this protocol represents the given toplevel.\\nIt can be used by the compositor as a hint for some operations, e.g\\nminimizing. The client is however not required to set this, in which\\ncase the compositor is free to decide some default value.\\n\\nIf the client specifies more than one rectangle, only the last one is\\nconsidered.\\n\\nThe dimensions are given in surface-local coordinates.\\nSetting width=height=0 removes the already-set rectangle.\"]\n    SetRectangle {\n        surface: Proxy<super::wl_surface::WlSurface>,\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"destroy the zwlr_foreign_toplevel_handle_v1 object\\n\\nDestroys the zwlr_foreign_toplevel_handle_v1 object.\\n\\nThis request should be called either when the client does not want to\\nuse the toplevel anymore or after the closed event to finalize the\\ndestruction of the object.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":9161},{"krate":0,"index":9163},{"krate":0,"index":9165},{"krate":0,"index":9167},{"krate":0,"index":9169},{"krate":0,"index":9171},{"krate":0,"index":9173},{"krate":0,"index":9179}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9203},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8743750,"byte_end":8743755,"line_start":458,"line_end":458,"column_start":9,"column_end":14},"name":"Title","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::Title","value":"Event::Title { title }","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"title change","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9205},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8743886,"byte_end":8743891,"line_start":460,"line_end":460,"column_start":9,"column_end":14},"name":"AppId","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::AppId","value":"Event::AppId { app_id }","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"app-id change","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9207},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8744098,"byte_end":8744109,"line_start":462,"line_end":462,"column_start":9,"column_end":20},"name":"OutputEnter","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::OutputEnter","value":"Event::OutputEnter { output }","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"toplevel entered an output","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9209},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8744422,"byte_end":8744433,"line_start":466,"line_end":466,"column_start":9,"column_end":20},"name":"OutputLeave","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::OutputLeave","value":"Event::OutputLeave { output }","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"toplevel left an output","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9211},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8744769,"byte_end":8744774,"line_start":470,"line_end":470,"column_start":9,"column_end":14},"name":"State","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::State","value":"Event::State { state }","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"the toplevel state changed","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9213},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8745087,"byte_end":8745091,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"name":"Done","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::Done","value":"Event::Done","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"all information about the toplevel has been sent","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9215},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8745393,"byte_end":8745399,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"name":"Closed","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event::Closed","value":"Event::Closed","parent":{"krate":0,"index":9202},"children":[],"decl_id":null,"docs":"this toplevel has been destroyed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9202},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8743633,"byte_end":8743638,"line_start":456,"line_end":456,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"title change\\n\\nThis event is emitted whenever the title of the toplevel changes.\"]\n    Title {\n        title: String,\n    },\n\n    #[doc =\n      \"app-id change\\n\\nThis event is emitted whenever the app-id of the toplevel changes.\"]\n    AppId {\n        app_id: String,\n    },\n\n    #[doc =\n      \"toplevel entered an output\\n\\nThis event is emitted whenever the toplevel becomes visible on\\nthe given output. A toplevel may be visible on multiple outputs.\"]\n    OutputEnter {\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n\n    #[doc =\n      \"toplevel left an output\\n\\nThis event is emitted whenever the toplevel stops being visible on\\nthe given output. It is guaranteed that an entered-output event\\nwith the same output has been emitted before this event.\"]\n    OutputLeave {\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n\n    #[doc =\n      \"the toplevel state changed\\n\\nThis event is emitted immediately after the zlw_foreign_toplevel_handle_v1\\nis created and each time the toplevel state changes, either because of a\\ncompositor action or because of a request in this protocol.\"]\n    State {\n        state: Vec<u8>,\n    },\n\n    #[doc =\n      \"all information about the toplevel has been sent\\n\\nThis event is sent after all changes in the toplevel state have been\\nsent.\\n\\nThis allows changes to the zwlr_foreign_toplevel_handle_v1 properties\\nto be seen as atomic, even if they happen via multiple events.\"]\n    Done,\n\n    #[doc =\n      \"this toplevel has been destroyed\\n\\nThis event means the toplevel has been destroyed. It is guaranteed there\\nwon't be any more events for this zwlr_foreign_toplevel_handle_v1. The\\ntoplevel itself becomes inert so any requests will be ignored except the\\ndestroy request.\"]\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":9203},{"krate":0,"index":9205},{"krate":0,"index":9207},{"krate":0,"index":9209},{"krate":0,"index":9211},{"krate":0,"index":9213},{"krate":0,"index":9215}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9232},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8752805,"byte_end":8752832,"line_start":676,"line_end":676,"column_start":16,"column_end":43},"name":"ZwlrForeignToplevelHandleV1","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::ZwlrForeignToplevelHandleV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9240},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8753223,"byte_end":8753236,"line_start":686,"line_end":686,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9241},{"krate":0,"index":9242},{"krate":0,"index":9243},{"krate":0,"index":9244},{"krate":0,"index":9245},{"krate":0,"index":9246},{"krate":0,"index":9247},{"krate":0,"index":9248}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9241},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8753438,"byte_end":8753451,"line_start":688,"line_end":688,"column_start":12,"column_end":25},"name":"set_maximized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::set_maximized","value":"pub fn set_maximized(&Self) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"requests that the toplevel be maximized","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9242},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8753669,"byte_end":8753684,"line_start":690,"line_end":690,"column_start":12,"column_end":27},"name":"unset_maximized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::unset_maximized","value":"pub fn unset_maximized(&Self) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"requests that the toplevel be unmaximized","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9243},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8753898,"byte_end":8753911,"line_start":692,"line_end":692,"column_start":12,"column_end":25},"name":"set_minimized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::set_minimized","value":"pub fn set_minimized(&Self) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"requests that the toplevel be minimized","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9244},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8754129,"byte_end":8754144,"line_start":694,"line_end":694,"column_start":12,"column_end":27},"name":"unset_minimized","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::unset_minimized","value":"pub fn unset_minimized(&Self) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"requests that the toplevel be unminimized","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9245},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8754337,"byte_end":8754345,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"activate","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::activate","value":"pub fn activate(&Self, &Proxy<super::wl_seat::WlSeat>) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"activate the toplevel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9246},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8754826,"byte_end":8754831,"line_start":698,"line_end":698,"column_start":12,"column_end":17},"name":"close","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::close","value":"pub fn close(&Self) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"request that the toplevel be closed","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9247},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8755470,"byte_end":8755483,"line_start":700,"line_end":700,"column_start":12,"column_end":25},"name":"set_rectangle","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::set_rectangle","value":"pub fn set_rectangle(&Self, &Proxy<super::wl_surface::WlSurface>, i32, i32,\n                     i32, i32) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"the rectangle which represents the toplevel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9248},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8756079,"byte_end":8756086,"line_start":709,"line_end":709,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":9240},"children":[],"decl_id":null,"docs":"destroy the zwlr_foreign_toplevel_handle_v1 object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9258},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8757612,"byte_end":8757635,"line_start":759,"line_end":759,"column_start":15,"column_end":38},"name":"REQ_SET_MAXIMIZED_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_SET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9259},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8757731,"byte_end":8757756,"line_start":761,"line_end":761,"column_start":15,"column_end":40},"name":"REQ_UNSET_MAXIMIZED_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_UNSET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9260},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8757852,"byte_end":8757875,"line_start":763,"line_end":763,"column_start":15,"column_end":38},"name":"REQ_SET_MINIMIZED_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_SET_MINIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9261},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8757971,"byte_end":8757996,"line_start":765,"line_end":765,"column_start":15,"column_end":40},"name":"REQ_UNSET_MINIMIZED_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_UNSET_MINIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9262},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758092,"byte_end":8758110,"line_start":767,"line_end":767,"column_start":15,"column_end":33},"name":"REQ_ACTIVATE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_ACTIVATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9263},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758206,"byte_end":8758221,"line_start":769,"line_end":769,"column_start":15,"column_end":30},"name":"REQ_CLOSE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_CLOSE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9264},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758317,"byte_end":8758340,"line_start":771,"line_end":771,"column_start":15,"column_end":38},"name":"REQ_SET_RECTANGLE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_SET_RECTANGLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9265},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758436,"byte_end":8758453,"line_start":773,"line_end":773,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9266},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758547,"byte_end":8758562,"line_start":775,"line_end":775,"column_start":15,"column_end":30},"name":"EVT_TITLE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_TITLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9267},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758656,"byte_end":8758672,"line_start":777,"line_end":777,"column_start":15,"column_end":31},"name":"EVT_APP_ID_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_APP_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9268},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758766,"byte_end":8758788,"line_start":779,"line_end":779,"column_start":15,"column_end":37},"name":"EVT_OUTPUT_ENTER_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_OUTPUT_ENTER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9269},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758882,"byte_end":8758904,"line_start":781,"line_end":781,"column_start":15,"column_end":37},"name":"EVT_OUTPUT_LEAVE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_OUTPUT_LEAVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9270},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8758998,"byte_end":8759013,"line_start":783,"line_end":783,"column_start":15,"column_end":30},"name":"EVT_STATE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_STATE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9271},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8759107,"byte_end":8759121,"line_start":785,"line_end":785,"column_start":15,"column_end":29},"name":"EVT_DONE_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9272},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8759215,"byte_end":8759231,"line_start":787,"line_end":787,"column_start":15,"column_end":31},"name":"EVT_CLOSED_SINCE","qualname":"::wlr::unstable::foreign_toplevel::v1::generated::client::zwlr_foreign_toplevel_handle_v1::EVT_CLOSED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25243,"byte_end":25256,"line_start":72,"line_end":72,"column_start":13,"column_end":26},"name":"gamma_control","qualname":"::wlr::unstable::gamma_control","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":9303}],"decl_id":null,"docs":" Manage gamma tables of outputs.","sig":null,"attributes":[{"value":"! Manage gamma tables of outputs.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25267,"byte_end":25302,"line_start":73,"line_end":73,"column_start":9,"column_end":44}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25311,"byte_end":25314,"line_start":74,"line_end":74,"column_start":9,"column_end":12}},{"value":"! This protocol allows a privileged client to set the gamma tables for outputs.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25323,"byte_end":25404,"line_start":75,"line_end":75,"column_start":9,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":9303},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::gamma_control::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":9304},{"krate":0,"index":9305},{"krate":0,"index":9306}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":9339},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_interfaces.rs","byte_start":8759705,"byte_end":8759743,"line_start":10,"line_end":10,"column_start":16,"column_end":54},"name":"zwlr_gamma_control_manager_v1_requests","qualname":"::wlr::unstable::gamma_control::v1::generated::c_interfaces::zwlr_gamma_control_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9341},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_interfaces.rs","byte_start":8760245,"byte_end":8760284,"line_start":24,"line_end":24,"column_start":16,"column_end":55},"name":"zwlr_gamma_control_manager_v1_interface","qualname":"::wlr::unstable::gamma_control::v1::generated::c_interfaces::zwlr_gamma_control_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9342},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_interfaces.rs","byte_start":8760588,"byte_end":8760618,"line_start":32,"line_end":32,"column_start":16,"column_end":46},"name":"zwlr_gamma_control_v1_requests","qualname":"::wlr::unstable::gamma_control::v1::generated::c_interfaces::zwlr_gamma_control_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9344},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_interfaces.rs","byte_start":8761039,"byte_end":8761067,"line_start":44,"line_end":44,"column_start":16,"column_end":44},"name":"zwlr_gamma_control_v1_events","qualname":"::wlr::unstable::gamma_control::v1::generated::c_interfaces::zwlr_gamma_control_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9346},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_interfaces.rs","byte_start":8761488,"byte_end":8761519,"line_start":56,"line_end":56,"column_start":16,"column_end":47},"name":"zwlr_gamma_control_v1_interface","qualname":"::wlr::unstable::gamma_control::v1::generated::c_interfaces::zwlr_gamma_control_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9347},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8761960,"byte_end":8761989,"line_start":2,"line_end":2,"column_start":9,"column_end":38},"name":"zwlr_gamma_control_manager_v1","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9348},{"krate":0,"index":9349},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352},{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":15025},{"krate":0,"index":9355},{"krate":0,"index":9356},{"krate":0,"index":9357},{"krate":0,"index":9358},{"krate":0,"index":9359},{"krate":0,"index":9360},{"krate":0,"index":9361},{"krate":0,"index":9362},{"krate":0,"index":9363},{"krate":0,"index":9364},{"krate":0,"index":9365},{"krate":0,"index":9371},{"krate":0,"index":9386},{"krate":0,"index":9387},{"krate":0,"index":9400},{"krate":0,"index":9402},{"krate":0,"index":9408},{"krate":0,"index":9412},{"krate":0,"index":9416},{"krate":0,"index":9417}],"decl_id":null,"docs":"manager to create per-output gamma controls","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9366},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8762435,"byte_end":8762450,"line_start":11,"line_end":11,"column_start":9,"column_end":24},"name":"GetGammaControl","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::Request::GetGammaControl","value":"Request::GetGammaControl { id, output }","parent":{"krate":0,"index":9365},"children":[],"decl_id":null,"docs":"get a gamma control for an output","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9369},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8762834,"byte_end":8762841,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":9365},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9365},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8762272,"byte_end":8762279,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"get a gamma control for an output\\n\\nCreate a gamma control that can be used to adjust gamma tables for the\\nprovided output.\"]\n    GetGammaControl {\n        id: Proxy<super::zwlr_gamma_control_v1::ZwlrGammaControlV1>,\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n\n    #[doc =\n      \"destroy the manager\\n\\nAll objects created by the manager will still remain valid, until their\\nappropriate destroy request has been called.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":9366},{"krate":0,"index":9369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9386},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8765736,"byte_end":8765741,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9400},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8767041,"byte_end":8767066,"line_start":141,"line_end":141,"column_start":16,"column_end":41},"name":"ZwlrGammaControlManagerV1","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::ZwlrGammaControlManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9408},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8767451,"byte_end":8767464,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9409},{"krate":0,"index":9411}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9409},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8767623,"byte_end":8767640,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"get_gamma_control","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::RequestsTrait::get_gamma_control","value":"pub fn get_gamma_control<F>(&Self, &Proxy<super::wl_output::WlOutput>, F)\n-> Result<Proxy<super::zwlr_gamma_control_v1::ZwlrGammaControlV1>, ()> where\nF: FnOnce(NewProxy<super::zwlr_gamma_control_v1::ZwlrGammaControlV1>) ->\nProxy<super::zwlr_gamma_control_v1::ZwlrGammaControlV1>","parent":{"krate":0,"index":9408},"children":[],"decl_id":null,"docs":"get a gamma control for an output","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9411},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8768291,"byte_end":8768298,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":9408},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9416},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8769213,"byte_end":8769240,"line_start":188,"line_end":188,"column_start":15,"column_end":42},"name":"REQ_GET_GAMMA_CONTROL_SINCE","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::REQ_GET_GAMMA_CONTROL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9417},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8769336,"byte_end":8769353,"line_start":190,"line_end":190,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9418},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8769909,"byte_end":8769930,"line_start":193,"line_end":193,"column_start":9,"column_end":30},"name":"zwlr_gamma_control_v1","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9419},{"krate":0,"index":9420},{"krate":0,"index":9421},{"krate":0,"index":9422},{"krate":0,"index":9423},{"krate":0,"index":9424},{"krate":0,"index":9425},{"krate":0,"index":15053},{"krate":0,"index":9426},{"krate":0,"index":9427},{"krate":0,"index":9428},{"krate":0,"index":9429},{"krate":0,"index":9430},{"krate":0,"index":9431},{"krate":0,"index":9432},{"krate":0,"index":9433},{"krate":0,"index":9434},{"krate":0,"index":9435},{"krate":0,"index":9495},{"krate":0,"index":9506},{"krate":0,"index":9504},{"krate":0,"index":9502},{"krate":0,"index":9499},{"krate":0,"index":9500},{"krate":0,"index":9436},{"krate":0,"index":9439},{"krate":0,"index":9444},{"krate":0,"index":9459},{"krate":0,"index":9464},{"krate":0,"index":9477},{"krate":0,"index":9479},{"krate":0,"index":9485},{"krate":0,"index":9488},{"krate":0,"index":9491},{"krate":0,"index":9492},{"krate":0,"index":9493},{"krate":0,"index":9494}],"decl_id":null,"docs":"adjust gamma tables for an output","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9496},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770331,"byte_end":8770343,"line_start":204,"line_end":204,"column_start":9,"column_end":21},"name":"InvalidGamma","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Error::InvalidGamma","value":"Error::InvalidGamma","parent":{"krate":0,"index":9495},"children":[],"decl_id":null,"docs":"invalid gamma tables\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9495},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770275,"byte_end":8770280,"line_start":202,"line_end":202,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Error","value":"pub enum Error {\n\n    #[doc = \"invalid gamma tables\"]\n    InvalidGamma = ,\n}","parent":null,"children":[{"krate":0,"index":9496}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770204,"byte_end":8770216,"line_start":200,"line_end":200,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9437},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770387,"byte_end":8770395,"line_start":207,"line_end":207,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9438},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770567,"byte_end":8770573,"line_start":213,"line_end":213,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9440},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8771065,"byte_end":8771073,"line_start":219,"line_end":219,"column_start":9,"column_end":17},"name":"SetGamma","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Request::SetGamma","value":"Request::SetGamma { fd }","parent":{"krate":0,"index":9439},"children":[],"decl_id":null,"docs":"set the gamma table","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9442},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8771342,"byte_end":8771349,"line_start":221,"line_end":221,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":9439},"children":[],"decl_id":null,"docs":"destroy this control","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9439},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770644,"byte_end":8770651,"line_start":217,"line_end":217,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"set the gamma table\\n\\nSet the gamma table. The file descriptor can be memory-mapped to provide\\nthe raw gamma table, which contains successive gamma ramps for the red,\\ngreen and blue channels. Each gamma ramp is an array of 16-byte unsigned\\nintegers which has the same length as the gamma size.\\n\\nThe file descriptor data must have the same length as three times the\\ngamma size.\"]\n    SetGamma {\n        fd: ::std::os::unix::io::RawFd,\n    },\n\n    #[doc =\n      \"destroy this control\\n\\nDestroys the gamma control object. If the object is still valid, this\\nrestores the original gamma tables.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":9440},{"krate":0,"index":9442}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9460},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8774053,"byte_end":8774062,"line_start":301,"line_end":301,"column_start":9,"column_end":18},"name":"GammaSize","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Event::GammaSize","value":"Event::GammaSize { size }","parent":{"krate":0,"index":9459},"children":[],"decl_id":null,"docs":"size of gamma ramps","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9462},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8774530,"byte_end":8774536,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"name":"Failed","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Event::Failed","value":"Event::Failed","parent":{"krate":0,"index":9459},"children":[],"decl_id":null,"docs":"object no longer valid","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9459},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8773880,"byte_end":8773885,"line_start":299,"line_end":299,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"size of gamma ramps\\n\\nAdvertise the size of each gamma ramp.\\n\\nThis event is sent immediately when the gamma control object is created.\"]\n    GammaSize {\n        size: u32,\n    },\n\n    #[doc =\n      \"object no longer valid\\n\\nThis event indicates that the gamma control is no longer valid. This\\ncan happen for a number of reasons, including:\\n- The output doesn't support gamma tables\\n- Setting the gamma tables failed\\n- Another client already has exclusive gamma control for this output\\n- The compositor has transfered gamma control to another client\\n\\nUpon receiving this event, the client should destroy this object.\"]\n    Failed,\n}","parent":null,"children":[{"krate":0,"index":9460},{"krate":0,"index":9462}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9477},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8776994,"byte_end":8777012,"line_start":381,"line_end":381,"column_start":16,"column_end":34},"name":"ZwlrGammaControlV1","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::ZwlrGammaControlV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9485},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8777374,"byte_end":8777387,"line_start":391,"line_end":391,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9486},{"krate":0,"index":9487}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9486},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8777804,"byte_end":8777813,"line_start":393,"line_end":393,"column_start":12,"column_end":21},"name":"set_gamma","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::RequestsTrait::set_gamma","value":"pub fn set_gamma(&Self, ::std::os::unix::io::RawFd) -> ()","parent":{"krate":0,"index":9485},"children":[],"decl_id":null,"docs":"set the gamma table","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9487},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778125,"byte_end":8778132,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":9485},"children":[],"decl_id":null,"docs":"destroy this control","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9491},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778566,"byte_end":8778585,"line_start":408,"line_end":408,"column_start":15,"column_end":34},"name":"REQ_SET_GAMMA_SINCE","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::REQ_SET_GAMMA_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9492},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778681,"byte_end":8778698,"line_start":410,"line_end":410,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9493},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778792,"byte_end":8778812,"line_start":412,"line_end":412,"column_start":15,"column_end":35},"name":"EVT_GAMMA_SIZE_SINCE","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::EVT_GAMMA_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9494},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778906,"byte_end":8778922,"line_start":414,"line_end":414,"column_start":15,"column_end":31},"name":"EVT_FAILED_SINCE","qualname":"::wlr::unstable::gamma_control::v1::generated::client::zwlr_gamma_control_v1::EVT_FAILED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25617,"byte_end":25632,"line_start":87,"line_end":87,"column_start":13,"column_end":28},"name":"input_inhibitor","qualname":"::wlr::unstable::input_inhibitor","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":9507}],"decl_id":null,"docs":" Inhibits input events to other clients\n","sig":null,"attributes":[{"value":"! Inhibits input events to other clients","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25643,"byte_end":25685,"line_start":88,"line_end":88,"column_start":9,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":9507},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::input_inhibitor::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":9508},{"krate":0,"index":9509},{"krate":0,"index":9510}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":9541},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_interfaces.rs","byte_start":8779297,"byte_end":8779335,"line_start":7,"line_end":7,"column_start":16,"column_end":54},"name":"zwlr_input_inhibit_manager_v1_requests","qualname":"::wlr::unstable::input_inhibitor::v1::generated::c_interfaces::zwlr_input_inhibit_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9543},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_interfaces.rs","byte_start":8779596,"byte_end":8779635,"line_start":12,"line_end":12,"column_start":16,"column_end":55},"name":"zwlr_input_inhibit_manager_v1_interface","qualname":"::wlr::unstable::input_inhibitor::v1::generated::c_interfaces::zwlr_input_inhibit_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9544},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_interfaces.rs","byte_start":8779939,"byte_end":8779971,"line_start":20,"line_end":20,"column_start":16,"column_end":48},"name":"zwlr_input_inhibitor_v1_requests","qualname":"::wlr::unstable::input_inhibitor::v1::generated::c_interfaces::zwlr_input_inhibitor_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9546},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_interfaces.rs","byte_start":8780177,"byte_end":8780210,"line_start":25,"line_end":25,"column_start":16,"column_end":49},"name":"zwlr_input_inhibitor_v1_interface","qualname":"::wlr::unstable::input_inhibitor::v1::generated::c_interfaces::zwlr_input_inhibitor_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9547},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8780811,"byte_end":8780840,"line_start":2,"line_end":2,"column_start":9,"column_end":38},"name":"zwlr_input_inhibit_manager_v1","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9548},{"krate":0,"index":9549},{"krate":0,"index":9550},{"krate":0,"index":9551},{"krate":0,"index":9552},{"krate":0,"index":9553},{"krate":0,"index":9554},{"krate":0,"index":15115},{"krate":0,"index":9555},{"krate":0,"index":9556},{"krate":0,"index":9557},{"krate":0,"index":9558},{"krate":0,"index":9559},{"krate":0,"index":9560},{"krate":0,"index":9561},{"krate":0,"index":9562},{"krate":0,"index":9563},{"krate":0,"index":9564},{"krate":0,"index":9676},{"krate":0,"index":9687},{"krate":0,"index":9685},{"krate":0,"index":9683},{"krate":0,"index":9680},{"krate":0,"index":9681},{"krate":0,"index":9565},{"krate":0,"index":9568},{"krate":0,"index":9571},{"krate":0,"index":9585},{"krate":0,"index":9586},{"krate":0,"index":9599},{"krate":0,"index":9601},{"krate":0,"index":9607},{"krate":0,"index":9610},{"krate":0,"index":9613}],"decl_id":null,"docs":"inhibits input events to other clients","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9677},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781275,"byte_end":8781291,"line_start":13,"line_end":13,"column_start":9,"column_end":25},"name":"AlreadyInhibited","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::Error::AlreadyInhibited","value":"Error::AlreadyInhibited","parent":{"krate":0,"index":9676},"children":[],"decl_id":null,"docs":"an input inhibitor is already in use on the compositor\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9676},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781185,"byte_end":8781190,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::Error","value":"pub enum Error {\n\n    #[doc = \"an input inhibitor is already in use on the compositor\"]\n    AlreadyInhibited = ,\n}","parent":null,"children":[{"krate":0,"index":9677}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781114,"byte_end":8781126,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9566},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781335,"byte_end":8781343,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781519,"byte_end":8781525,"line_start":22,"line_end":22,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9569},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781795,"byte_end":8781807,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"name":"GetInhibitor","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::Request::GetInhibitor","value":"Request::GetInhibitor { id }","parent":{"krate":0,"index":9568},"children":[],"decl_id":null,"docs":"inhibit input to other clients","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9568},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781596,"byte_end":8781603,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"inhibit input to other clients\\n\\nActivates the input inhibitor. As long as the inhibitor is active, the\\ncompositor will not send input events to other clients.\"]\n    GetInhibitor {\n        id: Proxy<super::zwlr_input_inhibitor_v1::ZwlrInputInhibitorV1>,\n    },\n}","parent":null,"children":[{"krate":0,"index":9569}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9585},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8784018,"byte_end":8784023,"line_start":93,"line_end":93,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9599},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8785323,"byte_end":8785348,"line_start":136,"line_end":136,"column_start":16,"column_end":41},"name":"ZwlrInputInhibitManagerV1","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::ZwlrInputInhibitManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9607},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8785733,"byte_end":8785746,"line_start":146,"line_end":146,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9608}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9608},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8785941,"byte_end":8785954,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"get_inhibitor","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::RequestsTrait::get_inhibitor","value":"pub fn get_inhibitor<F>(&Self, F)\n-> Result<Proxy<super::zwlr_input_inhibitor_v1::ZwlrInputInhibitorV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwlr_input_inhibitor_v1::ZwlrInputInhibitorV1>) ->\nProxy<super::zwlr_input_inhibitor_v1::ZwlrInputInhibitorV1>","parent":{"krate":0,"index":9607},"children":[],"decl_id":null,"docs":"inhibit input to other clients","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9613},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8786983,"byte_end":8787006,"line_start":174,"line_end":174,"column_start":15,"column_end":38},"name":"REQ_GET_INHIBITOR_SINCE","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibit_manager_v1::REQ_GET_INHIBITOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9614},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8787641,"byte_end":8787664,"line_start":177,"line_end":177,"column_start":9,"column_end":32},"name":"zwlr_input_inhibitor_v1","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9615},{"krate":0,"index":9616},{"krate":0,"index":9617},{"krate":0,"index":9618},{"krate":0,"index":9619},{"krate":0,"index":9620},{"krate":0,"index":9621},{"krate":0,"index":15143},{"krate":0,"index":9622},{"krate":0,"index":9623},{"krate":0,"index":9624},{"krate":0,"index":9625},{"krate":0,"index":9626},{"krate":0,"index":9627},{"krate":0,"index":9628},{"krate":0,"index":9629},{"krate":0,"index":9630},{"krate":0,"index":9631},{"krate":0,"index":9632},{"krate":0,"index":9635},{"krate":0,"index":9649},{"krate":0,"index":9650},{"krate":0,"index":9663},{"krate":0,"index":9665},{"krate":0,"index":9671},{"krate":0,"index":9673},{"krate":0,"index":9675}],"decl_id":null,"docs":"inhibits input to other clients","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9633},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8788160,"byte_end":8788167,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":9632},"children":[],"decl_id":null,"docs":"destroy the input inhibitor object","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9632},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8787947,"byte_end":8787954,"line_start":184,"line_end":184,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the input inhibitor object\\n\\nDestroy the inhibitor and allow other clients to receive input.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":9633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9649},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8789981,"byte_end":8789986,"line_start":245,"line_end":245,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9663},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791286,"byte_end":8791306,"line_start":288,"line_end":288,"column_start":16,"column_end":36},"name":"ZwlrInputInhibitorV1","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::ZwlrInputInhibitorV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9671},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791674,"byte_end":8791687,"line_start":298,"line_end":298,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9672},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791926,"byte_end":8791933,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":9671},"children":[],"decl_id":null,"docs":"destroy the input inhibitor object","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9675},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8792211,"byte_end":8792228,"line_start":309,"line_end":309,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::input_inhibitor::v1::generated::client::zwlr_input_inhibitor_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25838,"byte_end":25849,"line_start":98,"line_end":98,"column_start":13,"column_end":24},"name":"layer_shell","qualname":"::wlr::unstable::layer_shell","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":9688}],"decl_id":null,"docs":" Layered shell protocol\n","sig":null,"attributes":[{"value":"! Layered shell protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25860,"byte_end":25886,"line_start":99,"line_end":99,"column_start":9,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":9688},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::layer_shell::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":9689},{"krate":0,"index":9690},{"krate":0,"index":9691}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":9728},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_interfaces.rs","byte_start":8792936,"byte_end":8792964,"line_start":17,"line_end":17,"column_start":16,"column_end":44},"name":"zwlr_layer_shell_v1_requests","qualname":"::wlr::unstable::layer_shell::v1::generated::c_interfaces::zwlr_layer_shell_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9730},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_interfaces.rs","byte_start":8793228,"byte_end":8793257,"line_start":22,"line_end":22,"column_start":16,"column_end":45},"name":"zwlr_layer_shell_v1_interface","qualname":"::wlr::unstable::layer_shell::v1::generated::c_interfaces::zwlr_layer_shell_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9733},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_interfaces.rs","byte_start":8793689,"byte_end":8793719,"line_start":32,"line_end":32,"column_start":16,"column_end":46},"name":"zwlr_layer_surface_v1_requests","qualname":"::wlr::unstable::layer_shell::v1::generated::c_interfaces::zwlr_layer_surface_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9735},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_interfaces.rs","byte_start":8795363,"byte_end":8795391,"line_start":74,"line_end":74,"column_start":16,"column_end":44},"name":"zwlr_layer_surface_v1_events","qualname":"::wlr::unstable::layer_shell::v1::generated::c_interfaces::zwlr_layer_surface_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":9737},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_interfaces.rs","byte_start":8795813,"byte_end":8795844,"line_start":86,"line_end":86,"column_start":16,"column_end":47},"name":"zwlr_layer_surface_v1_interface","qualname":"::wlr::unstable::layer_shell::v1::generated::c_interfaces::zwlr_layer_surface_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9738},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8796680,"byte_end":8796699,"line_start":2,"line_end":2,"column_start":9,"column_end":28},"name":"zwlr_layer_shell_v1","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9739},{"krate":0,"index":9740},{"krate":0,"index":9741},{"krate":0,"index":9742},{"krate":0,"index":9743},{"krate":0,"index":9744},{"krate":0,"index":9745},{"krate":0,"index":15217},{"krate":0,"index":9746},{"krate":0,"index":9747},{"krate":0,"index":9748},{"krate":0,"index":9749},{"krate":0,"index":9750},{"krate":0,"index":9751},{"krate":0,"index":9752},{"krate":0,"index":9753},{"krate":0,"index":9754},{"krate":0,"index":9755},{"krate":0,"index":9936},{"krate":0,"index":9953},{"krate":0,"index":9951},{"krate":0,"index":9949},{"krate":0,"index":9946},{"krate":0,"index":9947},{"krate":0,"index":9756},{"krate":0,"index":9954},{"krate":0,"index":9974},{"krate":0,"index":9972},{"krate":0,"index":9970},{"krate":0,"index":9967},{"krate":0,"index":9968},{"krate":0,"index":9759},{"krate":0,"index":9762},{"krate":0,"index":9769},{"krate":0,"index":9784},{"krate":0,"index":9785},{"krate":0,"index":9798},{"krate":0,"index":9800},{"krate":0,"index":9806},{"krate":0,"index":9809},{"krate":0,"index":9813}],"decl_id":null,"docs":"create surfaces that are layers of the desktop","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9937},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797107,"byte_end":8797111,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"Role","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Error::Role","value":"Error::Role","parent":{"krate":0,"index":9936},"children":[],"decl_id":null,"docs":"wl_surface has another role\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9940},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797167,"byte_end":8797179,"line_start":15,"line_end":15,"column_start":9,"column_end":21},"name":"InvalidLayer","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Error::InvalidLayer","value":"Error::InvalidLayer","parent":{"krate":0,"index":9936},"children":[],"decl_id":null,"docs":"layer value is invalid\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9943},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797258,"byte_end":8797276,"line_start":17,"line_end":17,"column_start":9,"column_end":27},"name":"AlreadyConstructed","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Error::AlreadyConstructed","value":"Error::AlreadyConstructed","parent":{"krate":0,"index":9936},"children":[],"decl_id":null,"docs":"wl_surface has a buffer attached or committed\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9936},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797044,"byte_end":8797049,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Error","value":"pub enum Error {\n\n    #[doc = \"wl_surface has another role\"]\n    Role = ,\n\n    #[doc = \"layer value is invalid\"]\n    InvalidLayer = ,\n\n    #[doc = \"wl_surface has a buffer attached or committed\"]\n    AlreadyConstructed = ,\n}","parent":null,"children":[{"krate":0,"index":9937},{"krate":0,"index":9940},{"krate":0,"index":9943}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8796973,"byte_end":8796985,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9757},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797320,"byte_end":8797328,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9758},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797594,"byte_end":8797600,"line_start":28,"line_end":28,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9955},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798164,"byte_end":8798174,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"Background","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Layer::Background","value":"Layer::Background","parent":{"krate":0,"index":9954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9958},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798188,"byte_end":8798194,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"Bottom","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Layer::Bottom","value":"Layer::Bottom","parent":{"krate":0,"index":9954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9961},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798208,"byte_end":8798211,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"Top","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Layer::Top","value":"Layer::Top","parent":{"krate":0,"index":9954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9964},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798225,"byte_end":8798232,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"Overlay","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Layer::Overlay","value":"Layer::Overlay","parent":{"krate":0,"index":9954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9954},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798148,"byte_end":8798153,"line_start":35,"line_end":35,"column_start":14,"column_end":19},"name":"Layer","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Layer","value":"pub enum Layer { Background = , Bottom = , Top = , Overlay = , }","parent":null,"children":[{"krate":0,"index":9955},{"krate":0,"index":9958},{"krate":0,"index":9961},{"krate":0,"index":9964}],"decl_id":null,"docs":"available layers for surfaces","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798077,"byte_end":8798089,"line_start":33,"line_end":33,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9760},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798276,"byte_end":8798284,"line_start":42,"line_end":42,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Layer>::from_raw","value":"pub fn from_raw(u32) -> Option<Layer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9761},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798578,"byte_end":8798584,"line_start":51,"line_end":51,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Layer>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9763},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8799386,"byte_end":8799401,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"name":"GetLayerSurface","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Request::GetLayerSurface","value":"Request::GetLayerSurface { id, surface, output, layer, namespace }","parent":{"krate":0,"index":9762},"children":[],"decl_id":null,"docs":"create a layer_surface from a surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9762},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798655,"byte_end":8798662,"line_start":55,"line_end":55,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"create a layer_surface from a surface\\n\\nCreate a layer surface for an existing surface. This assigns the role of\\nlayer_surface, or raises a protocol error if another role is already\\nassigned.\\n\\nCreating a layer surface from a wl_surface which has a buffer attached\\nor committed is a client error, and any attempts by a client to attach\\nor manipulate a buffer prior to the first layer_surface.configure call\\nmust also be treated as errors.\\n\\nYou may pass NULL for output to allow the compositor to decide which\\noutput to use. Generally this will be the one that the user most\\nrecently interacted with.\\n\\nClients can specify a namespace that defines the purpose of the layer\\nsurface.\"]\n    GetLayerSurface {\n        id: Proxy<super::zwlr_layer_surface_v1::ZwlrLayerSurfaceV1>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n        output: Option<Proxy<super::wl_output::WlOutput>>,\n        layer: Layer,\n        namespace: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":9763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9784},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8803120,"byte_end":8803125,"line_start":159,"line_end":159,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9798},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8804425,"byte_end":8804441,"line_start":202,"line_end":202,"column_start":16,"column_end":32},"name":"ZwlrLayerShellV1","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::ZwlrLayerShellV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9806},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8804797,"byte_end":8804810,"line_start":212,"line_end":212,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9807},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8805537,"byte_end":8805554,"line_start":214,"line_end":214,"column_start":12,"column_end":29},"name":"get_layer_surface","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::RequestsTrait::get_layer_surface","value":"pub fn get_layer_surface<F>(&Self, &Proxy<super::wl_surface::WlSurface>,\n                            Option<&Proxy<super::wl_output::WlOutput>>, Layer,\n                            String, F)\n-> Result<Proxy<super::zwlr_layer_surface_v1::ZwlrLayerSurfaceV1>, ()> where\nF: FnOnce(NewProxy<super::zwlr_layer_surface_v1::ZwlrLayerSurfaceV1>) ->\nProxy<super::zwlr_layer_surface_v1::ZwlrLayerSurfaceV1>","parent":{"krate":0,"index":9806},"children":[],"decl_id":null,"docs":"create a layer_surface from a surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9813},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8807078,"byte_end":8807105,"line_start":252,"line_end":252,"column_start":15,"column_end":42},"name":"REQ_GET_LAYER_SURFACE_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_shell_v1::REQ_GET_LAYER_SURFACE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":9814},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8807512,"byte_end":8807533,"line_start":255,"line_end":255,"column_start":9,"column_end":30},"name":"zwlr_layer_surface_v1","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":9815},{"krate":0,"index":9816},{"krate":0,"index":9817},{"krate":0,"index":9818},{"krate":0,"index":9819},{"krate":0,"index":9820},{"krate":0,"index":9821},{"krate":0,"index":15245},{"krate":0,"index":9822},{"krate":0,"index":9823},{"krate":0,"index":9824},{"krate":0,"index":9825},{"krate":0,"index":9826},{"krate":0,"index":9827},{"krate":0,"index":9828},{"krate":0,"index":9829},{"krate":0,"index":9830},{"krate":0,"index":9831},{"krate":0,"index":9976},{"krate":0,"index":9993},{"krate":0,"index":9991},{"krate":0,"index":9989},{"krate":0,"index":9986},{"krate":0,"index":9987},{"krate":0,"index":9832},{"krate":0,"index":9994},{"krate":0,"index":10016},{"krate":0,"index":10012},{"krate":0,"index":10013},{"krate":0,"index":10009},{"krate":0,"index":10010},{"krate":0,"index":10007},{"krate":0,"index":10001},{"krate":0,"index":9999},{"krate":0,"index":9996},{"krate":0,"index":10017},{"krate":0,"index":10025},{"krate":0,"index":10027},{"krate":0,"index":10029},{"krate":0,"index":10031},{"krate":0,"index":10033},{"krate":0,"index":10043},{"krate":0,"index":10046},{"krate":0,"index":10048},{"krate":0,"index":10051},{"krate":0,"index":10053},{"krate":0,"index":10056},{"krate":0,"index":10058},{"krate":0,"index":10061},{"krate":0,"index":10063},{"krate":0,"index":10066},{"krate":0,"index":10069},{"krate":0,"index":9835},{"krate":0,"index":9838},{"krate":0,"index":9859},{"krate":0,"index":9880},{"krate":0,"index":9887},{"krate":0,"index":9900},{"krate":0,"index":9902},{"krate":0,"index":9908},{"krate":0,"index":9917},{"krate":0,"index":9926},{"krate":0,"index":9927},{"krate":0,"index":9928},{"krate":0,"index":9929},{"krate":0,"index":9930},{"krate":0,"index":9931},{"krate":0,"index":9932},{"krate":0,"index":9933},{"krate":0,"index":9934},{"krate":0,"index":9935}],"decl_id":null,"docs":"layer metadata interface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9977},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8807947,"byte_end":8807966,"line_start":266,"line_end":266,"column_start":9,"column_end":28},"name":"InvalidSurfaceState","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Error::InvalidSurfaceState","value":"Error::InvalidSurfaceState","parent":{"krate":0,"index":9976},"children":[],"decl_id":null,"docs":"provided surface state is invalid\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9980},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808015,"byte_end":8808026,"line_start":268,"line_end":268,"column_start":9,"column_end":20},"name":"InvalidSize","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Error::InvalidSize","value":"Error::InvalidSize","parent":{"krate":0,"index":9976},"children":[],"decl_id":null,"docs":"size is invalid\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9983},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808086,"byte_end":8808099,"line_start":270,"line_end":270,"column_start":9,"column_end":22},"name":"InvalidAnchor","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Error::InvalidAnchor","value":"Error::InvalidAnchor","parent":{"krate":0,"index":9976},"children":[],"decl_id":null,"docs":"anchor bitfield is invalid\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9976},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8807878,"byte_end":8807883,"line_start":264,"line_end":264,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Error","value":"pub enum Error {\n\n    #[doc = \"provided surface state is invalid\"]\n    InvalidSurfaceState = ,\n\n    #[doc = \"size is invalid\"]\n    InvalidSize = ,\n\n    #[doc = \"anchor bitfield is invalid\"]\n    InvalidAnchor = ,\n}","parent":null,"children":[{"krate":0,"index":9977},{"krate":0,"index":9980},{"krate":0,"index":9983}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8807807,"byte_end":8807819,"line_start":262,"line_end":262,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":9833},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808143,"byte_end":8808151,"line_start":273,"line_end":273,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9834},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808426,"byte_end":8808432,"line_start":281,"line_end":281,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9994},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808517,"byte_end":8808523,"line_start":285,"line_end":285,"column_start":28,"column_end":34},"name":"Anchor","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Anchor","value":"Anchor {  }","parent":null,"children":[{"krate":0,"index":9995}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10034},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808589,"byte_end":8808592,"line_start":285,"line_end":285,"column_start":100,"column_end":103},"name":"Top","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Anchor::Top","value":"Anchor","parent":{"krate":0,"index":10033},"children":[],"decl_id":null,"docs":"the top edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10035},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808659,"byte_end":8808665,"line_start":285,"line_end":285,"column_start":170,"column_end":176},"name":"Bottom","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Anchor::Bottom","value":"Anchor","parent":{"krate":0,"index":10033},"children":[],"decl_id":null,"docs":"the bottom edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10036},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808730,"byte_end":8808734,"line_start":285,"line_end":285,"column_start":241,"column_end":245},"name":"Left","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Anchor::Left","value":"Anchor","parent":{"krate":0,"index":10033},"children":[],"decl_id":null,"docs":"the left edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10037},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808800,"byte_end":8808805,"line_start":285,"line_end":285,"column_start":311,"column_end":316},"name":"Right","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Anchor::Right","value":"Anchor","parent":{"krate":0,"index":10033},"children":[],"decl_id":null,"docs":"the right edge of the anchor rectangle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9836},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808849,"byte_end":8808857,"line_start":287,"line_end":287,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Anchor>::from_raw","value":"pub fn from_raw(u32) -> Option<Anchor>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9837},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808959,"byte_end":8808965,"line_start":290,"line_end":290,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Anchor>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9839},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8809554,"byte_end":8809561,"line_start":296,"line_end":296,"column_start":9,"column_end":16},"name":"SetSize","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::SetSize","value":"Request::SetSize { width, height }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"sets the size of the surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9842},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8810067,"byte_end":8810076,"line_start":298,"line_end":298,"column_start":9,"column_end":18},"name":"SetAnchor","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::SetAnchor","value":"Request::SetAnchor { anchor }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"configures the anchor point of the surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9844},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8811514,"byte_end":8811530,"line_start":300,"line_end":300,"column_start":9,"column_end":25},"name":"SetExclusiveZone","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::SetExclusiveZone","value":"Request::SetExclusiveZone { zone }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"configures the exclusive geometry of this surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9846},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8811900,"byte_end":8811909,"line_start":302,"line_end":302,"column_start":9,"column_end":18},"name":"SetMargin","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::SetMargin","value":"Request::SetMargin { top, right, bottom, left }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"sets a margin from the anchor point","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9851},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8812618,"byte_end":8812642,"line_start":309,"line_end":309,"column_start":9,"column_end":33},"name":"SetKeyboardInteractivity","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::SetKeyboardInteractivity","value":"Request::SetKeyboardInteractivity { keyboard_interactivity }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"requests keyboard events","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9853},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8813090,"byte_end":8813098,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"name":"GetPopup","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::GetPopup","value":"Request::GetPopup { popup }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"assign this layer_surface as an xdg_popup parent","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9855},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8813943,"byte_end":8813955,"line_start":315,"line_end":315,"column_start":9,"column_end":21},"name":"AckConfigure","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::AckConfigure","value":"Request::AckConfigure { serial }","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9857},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8814144,"byte_end":8814151,"line_start":317,"line_end":317,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":9838},"children":[],"decl_id":null,"docs":"destroy the layer_surface","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9838},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8809035,"byte_end":8809042,"line_start":294,"line_end":294,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"sets the size of the surface\\n\\nSets the size of the surface in surface-local coordinates. The\\ncompositor will display the surface centered with respect to its\\nanchors.\\n\\nIf you pass 0 for either value, the compositor will assign it and\\ninform you of the assignment in the configure event. You must set your\\nanchor to opposite edges in the dimensions you omit; not doing so is a\\nprotocol error. Both values are 0 by default.\\n\\nSize is double-buffered, see wl_surface.commit.\"]\n    SetSize {\n        width: u32,\n        height: u32,\n    },\n\n    #[doc =\n      \"configures the anchor point of the surface\\n\\nRequests that the compositor anchor the surface to the specified edges\\nand corners. If two orthogonal edges are specified (e.g. 'top' and\\n'left'), then the anchor point will be the intersection of the edges\\n(e.g. the top left corner of the output); otherwise the anchor point\\nwill be centered on that edge, or in the center if none is specified.\\n\\nAnchor is double-buffered, see wl_surface.commit.\"]\n    SetAnchor {\n        anchor: Anchor,\n    },\n\n    #[doc =\n      \"configures the exclusive geometry of this surface\\n\\nRequests that the compositor avoids occluding an area of the surface\\nwith other surfaces. The compositor's use of this information is\\nimplementation-dependent - do not assume that this region will not\\nactually be occluded.\\n\\nA positive value is only meaningful if the surface is anchored to an\\nedge, rather than a corner. The zone is the number of surface-local\\ncoordinates from the edge that is considered exclusive.\\n\\nSurfaces that do not wish to have an exclusive zone may instead specify\\nhow they should interact with surfaces that do. If set to zero, the\\nsurface indicates that it would like to be moved to avoid occluding\\nsurfaces with a positive exclusive zone. If set to -1, the surface\\nindicates that it would not like to be moved to accommodate for other\\nsurfaces, and the compositor should extend it all the way to the edges\\nit is anchored to.\\n\\nFor example, a panel might set its exclusive zone to 10, so that\\nmaximized shell surfaces are not shown on top of it. A notification\\nmight set its exclusive zone to 0, so that it is moved to avoid\\noccluding the panel, but shell surfaces are shown underneath it. A\\nwallpaper or lock screen might set their exclusive zone to -1, so that\\nthey stretch below or over the panel.\\n\\nThe default value is 0.\\n\\nExclusive zone is double-buffered, see wl_surface.commit.\"]\n    SetExclusiveZone {\n        zone: i32,\n    },\n\n    #[doc =\n      \"sets a margin from the anchor point\\n\\nRequests that the surface be placed some distance away from the anchor\\npoint on the output, in surface-local coordinates. Setting this value\\nfor edges you are not anchored to has no effect.\\n\\nThe exclusive zone includes the margin.\\n\\nMargin is double-buffered, see wl_surface.commit.\"]\n    SetMargin {\n        top: i32,\n        right: i32,\n        bottom: i32,\n        left: i32,\n    },\n\n    #[doc =\n      \"requests keyboard events\\n\\nSet to 1 to request that the seat send keyboard events to this layer\\nsurface. For layers below the shell surface layer, the seat will use\\nnormal focus semantics. For layers above the shell surface layers, the\\nseat will always give exclusive keyboard focus to the top-most layer\\nwhich has keyboard interactivity set to true.\\n\\nLayer surfaces receive pointer, touch, and tablet events normally. If\\nyou do not want to receive them, set the input region on your surface\\nto an empty region.\\n\\nEvents is double-buffered, see wl_surface.commit.\"]\n    SetKeyboardInteractivity {\n        keyboard_interactivity: u32,\n    },\n\n    #[doc =\n      \"assign this layer_surface as an xdg_popup parent\\n\\nThis assigns an xdg_popup's parent to this layer_surface.  This popup\\nshould have been created via xdg_surface::get_popup with the parent set\\nto NULL, and this request must be invoked before committing the popup's\\ninitial state.\\n\\nSee the documentation of xdg_popup for more details about what an\\nxdg_popup is and how it is used.\"]\n    GetPopup {\n        popup: Proxy<super::xdg_popup::XdgPopup>,\n    },\n\n    #[doc =\n      \"ack a configure event\\n\\nWhen a configure event is received, if a client commits the\\nsurface in response to the configure event, then the client\\nmust make an ack_configure request sometime before the commit\\nrequest, passing along the serial of the configure event.\\n\\nIf the client receives multiple configure events before it\\ncan respond to one, it only has to ack the last configure event.\\n\\nA client is not required to commit immediately after sending\\nan ack_configure request - it may even ack_configure several times\\nbefore its next surface commit.\\n\\nA client may send multiple ack_configure requests before committing, but\\nonly the last request sent before a commit indicates which configure\\nevent the client really is responding to.\"]\n    AckConfigure {\n        serial: u32,\n    },\n\n    #[doc =\n      \"destroy the layer_surface\\n\\nThis request destroys the layer surface.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":9839},{"krate":0,"index":9842},{"krate":0,"index":9844},{"krate":0,"index":9846},{"krate":0,"index":9851},{"krate":0,"index":9853},{"krate":0,"index":9855},{"krate":0,"index":9857}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9881},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8822765,"byte_end":8822774,"line_start":521,"line_end":521,"column_start":9,"column_end":18},"name":"Configure","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Event::Configure","value":"Event::Configure { serial, width, height }","parent":{"krate":0,"index":9880},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9885},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8823249,"byte_end":8823255,"line_start":527,"line_end":527,"column_start":9,"column_end":15},"name":"Closed","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Event::Closed","value":"Event::Closed","parent":{"krate":0,"index":9880},"children":[],"decl_id":null,"docs":"surface should be closed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9880},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8821841,"byte_end":8821846,"line_start":519,"line_end":519,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThe configure event asks the client to resize its surface.\\n\\nClients should arrange their surface for the new states, and then send\\nan ack_configure request with the serial sent in this configure event at\\nsome point before committing the new surface.\\n\\nThe client is free to dismiss all but the last configure event it\\nreceived.\\n\\nThe width and height arguments specify the size of the window in\\nsurface-local coordinates.\\n\\nThe size is a hint, in the sense that the client is free to ignore it if\\nit doesn't resize, pick a smaller size (to satisfy aspect ratio or\\nresize in steps of NxM pixels). If the client picks a smaller size and\\nis anchored to two opposite anchors (e.g. 'top' and 'bottom'), the\\nsurface will be centered on this axis.\\n\\nIf the width or height arguments are zero, it means the client should\\ndecide its own window dimension.\"]\n    Configure {\n        serial: u32,\n        width: u32,\n        height: u32,\n    },\n\n    #[doc =\n      \"surface should be closed\\n\\nThe closed event is sent by the compositor when the surface will no\\nlonger be shown. The output may have been destroyed or the user may\\nhave asked for it to be removed. Further changes to the surface will be\\nignored. The client should destroy the resource after receiving this\\nevent, and create a new surface if they so choose.\"]\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":9881},{"krate":0,"index":9885}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9900},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8826558,"byte_end":8826576,"line_start":627,"line_end":627,"column_start":16,"column_end":34},"name":"ZwlrLayerSurfaceV1","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::ZwlrLayerSurfaceV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9908},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8826938,"byte_end":8826951,"line_start":637,"line_end":637,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":9909},{"krate":0,"index":9910},{"krate":0,"index":9911},{"krate":0,"index":9912},{"krate":0,"index":9913},{"krate":0,"index":9914},{"krate":0,"index":9915},{"krate":0,"index":9916}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9909},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8827466,"byte_end":8827474,"line_start":639,"line_end":639,"column_start":12,"column_end":20},"name":"set_size","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::set_size","value":"pub fn set_size(&Self, u32, u32) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"sets the size of the surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9910},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8827993,"byte_end":8828003,"line_start":641,"line_end":641,"column_start":12,"column_end":22},"name":"set_anchor","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::set_anchor","value":"pub fn set_anchor(&Self, Anchor) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"configures the anchor point of the surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9911},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8829454,"byte_end":8829472,"line_start":643,"line_end":643,"column_start":12,"column_end":30},"name":"set_exclusive_zone","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::set_exclusive_zone","value":"pub fn set_exclusive_zone(&Self, i32) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"configures the exclusive geometry of this surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8829855,"byte_end":8829865,"line_start":645,"line_end":645,"column_start":12,"column_end":22},"name":"set_margin","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::set_margin","value":"pub fn set_margin(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"sets a margin from the anchor point","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9913},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8830530,"byte_end":8830556,"line_start":647,"line_end":647,"column_start":12,"column_end":38},"name":"set_keyboard_interactivity","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::set_keyboard_interactivity","value":"pub fn set_keyboard_interactivity(&Self, u32) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"requests keyboard events","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9914},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8831017,"byte_end":8831026,"line_start":649,"line_end":649,"column_start":12,"column_end":21},"name":"get_popup","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::get_popup","value":"pub fn get_popup(&Self, &Proxy<super::xdg_popup::XdgPopup>) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"assign this layer_surface as an xdg_popup parent","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9915},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8831864,"byte_end":8831877,"line_start":651,"line_end":651,"column_start":12,"column_end":25},"name":"ack_configure","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::ack_configure","value":"pub fn ack_configure(&Self, u32) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9916},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8832109,"byte_end":8832116,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"destroy the layer_surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9926},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8833837,"byte_end":8833855,"line_start":702,"line_end":702,"column_start":15,"column_end":33},"name":"REQ_SET_SIZE_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_SET_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9927},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8833951,"byte_end":8833971,"line_start":704,"line_end":704,"column_start":15,"column_end":35},"name":"REQ_SET_ANCHOR_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_SET_ANCHOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9928},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834067,"byte_end":8834095,"line_start":706,"line_end":706,"column_start":15,"column_end":43},"name":"REQ_SET_EXCLUSIVE_ZONE_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_SET_EXCLUSIVE_ZONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9929},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834191,"byte_end":8834211,"line_start":708,"line_end":708,"column_start":15,"column_end":35},"name":"REQ_SET_MARGIN_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_SET_MARGIN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9930},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834307,"byte_end":8834343,"line_start":710,"line_end":710,"column_start":15,"column_end":51},"name":"REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9931},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834439,"byte_end":8834458,"line_start":712,"line_end":712,"column_start":15,"column_end":34},"name":"REQ_GET_POPUP_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_GET_POPUP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9932},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834554,"byte_end":8834577,"line_start":714,"line_end":714,"column_start":15,"column_end":38},"name":"REQ_ACK_CONFIGURE_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_ACK_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9933},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834673,"byte_end":8834690,"line_start":716,"line_end":716,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9934},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834784,"byte_end":8834803,"line_start":718,"line_end":718,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9935},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8834897,"byte_end":8834913,"line_start":720,"line_end":720,"column_start":15,"column_end":31},"name":"EVT_CLOSED_SINCE","qualname":"::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::EVT_CLOSED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26222,"byte_end":26232,"line_start":114,"line_end":114,"column_start":13,"column_end":23},"name":"screencopy","qualname":"::wlr::unstable::screencopy","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","parent":null,"children":[{"krate":0,"index":10095}],"decl_id":null,"docs":" Screen content capturing on client buffers","sig":null,"attributes":[{"value":"! Screen content capturing on client buffers","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26243,"byte_end":26289,"line_start":115,"line_end":115,"column_start":9,"column_end":55}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26298,"byte_end":26301,"line_start":116,"line_end":116,"column_start":9,"column_end":12}},{"value":"! This protocol allows clients to ask the compositor to copy part of the","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26310,"byte_end":26384,"line_start":117,"line_end":117,"column_start":9,"column_end":83}},{"value":"! screen content to a client buffer.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26393,"byte_end":26431,"line_start":118,"line_end":118,"column_start":9,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":10095},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"v1","qualname":"::wlr::unstable::screencopy::v1","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","parent":null,"children":[{"krate":0,"index":10096},{"krate":0,"index":10097},{"krate":0,"index":10098}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/protocol_macro.rs","byte_start":6361,"byte_end":6383,"line_start":106,"line_end":106,"column_start":13,"column_end":35}}]},{"kind":"Static","id":{"krate":0,"index":10135},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_interfaces.rs","byte_start":8835958,"byte_end":8835993,"line_start":25,"line_end":25,"column_start":16,"column_end":51},"name":"zwlr_screencopy_manager_v1_requests","qualname":"::wlr::unstable::screencopy::v1::generated::c_interfaces::zwlr_screencopy_manager_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10137},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_interfaces.rs","byte_start":8836750,"byte_end":8836786,"line_start":44,"line_end":44,"column_start":16,"column_end":52},"name":"zwlr_screencopy_manager_v1_interface","qualname":"::wlr::unstable::screencopy::v1::generated::c_interfaces::zwlr_screencopy_manager_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10140},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_interfaces.rs","byte_start":8837230,"byte_end":8837263,"line_start":54,"line_end":54,"column_start":16,"column_end":49},"name":"zwlr_screencopy_frame_v1_requests","qualname":"::wlr::unstable::screencopy::v1::generated::c_interfaces::zwlr_screencopy_frame_v1_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10142},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_interfaces.rs","byte_start":8837713,"byte_end":8837744,"line_start":66,"line_end":66,"column_start":16,"column_end":47},"name":"zwlr_screencopy_frame_v1_events","qualname":"::wlr::unstable::screencopy::v1::generated::c_interfaces::zwlr_screencopy_frame_v1_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10144},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_interfaces.rs","byte_start":8838542,"byte_end":8838576,"line_start":88,"line_end":88,"column_start":16,"column_end":50},"name":"zwlr_screencopy_frame_v1_interface","qualname":"::wlr::unstable::screencopy::v1::generated::c_interfaces::zwlr_screencopy_frame_v1_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10145},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8839033,"byte_end":8839059,"line_start":2,"line_end":2,"column_start":9,"column_end":35},"name":"zwlr_screencopy_manager_v1","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10146},{"krate":0,"index":10147},{"krate":0,"index":10148},{"krate":0,"index":10149},{"krate":0,"index":10150},{"krate":0,"index":10151},{"krate":0,"index":10152},{"krate":0,"index":15315},{"krate":0,"index":10153},{"krate":0,"index":10154},{"krate":0,"index":10155},{"krate":0,"index":10156},{"krate":0,"index":10157},{"krate":0,"index":10158},{"krate":0,"index":10159},{"krate":0,"index":10160},{"krate":0,"index":10161},{"krate":0,"index":10162},{"krate":0,"index":10163},{"krate":0,"index":10178},{"krate":0,"index":10194},{"krate":0,"index":10195},{"krate":0,"index":10208},{"krate":0,"index":10210},{"krate":0,"index":10216},{"krate":0,"index":10222},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":10230}],"decl_id":null,"docs":"manager to inform clients and begin capturing","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10164},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8839444,"byte_end":8839457,"line_start":11,"line_end":11,"column_start":9,"column_end":22},"name":"CaptureOutput","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::Request::CaptureOutput","value":"Request::CaptureOutput { frame, overlay_cursor, output }","parent":{"krate":0,"index":10163},"children":[],"decl_id":null,"docs":"capture an output","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10168},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8839881,"byte_end":8839900,"line_start":17,"line_end":17,"column_start":9,"column_end":28},"name":"CaptureOutputRegion","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::Request::CaptureOutputRegion","value":"Request::CaptureOutputRegion { frame, overlay_cursor, output, x, y, width, height }","parent":{"krate":0,"index":10163},"children":[],"decl_id":null,"docs":"capture an output's region","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10176},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8840415,"byte_end":8840422,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":10163},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10163},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8839342,"byte_end":8839349,"line_start":9,"line_end":9,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"capture an output\\n\\nCapture the next frame of an entire output.\"]\n    CaptureOutput {\n        frame: Proxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>,\n        overlay_cursor: i32,\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n\n    #[doc =\n      \"capture an output's region\\n\\nCapture the next frame of an output's region.\\n\\nThe region is given in output logical coordinates, see\\nxdg_output.logical_size. The region will be clipped to the output's\\nextents.\"]\n    CaptureOutputRegion {\n        frame: Proxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>,\n        overlay_cursor: i32,\n        output: Proxy<super::wl_output::WlOutput>,\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"destroy the manager\\n\\nAll objects created by the manager will still remain valid, until their\\nappropriate destroy request has been called.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":10164},{"krate":0,"index":10168},{"krate":0,"index":10176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10194},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8846058,"byte_end":8846063,"line_start":183,"line_end":183,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10208},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8847363,"byte_end":8847386,"line_start":226,"line_end":226,"column_start":16,"column_end":39},"name":"ZwlrScreencopyManagerV1","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::ZwlrScreencopyManagerV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10216},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8847763,"byte_end":8847776,"line_start":236,"line_end":236,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":10217},{"krate":0,"index":10219},{"krate":0,"index":10221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10217},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8847874,"byte_end":8847888,"line_start":238,"line_end":238,"column_start":12,"column_end":26},"name":"capture_output","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::RequestsTrait::capture_output","value":"pub fn capture_output<F>(&Self, i32, &Proxy<super::wl_output::WlOutput>, F)\n-> Result<Proxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>) ->\nProxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>","parent":{"krate":0,"index":10216},"children":[],"decl_id":null,"docs":"capture an output","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10219},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8848558,"byte_end":8848579,"line_start":249,"line_end":249,"column_start":12,"column_end":33},"name":"capture_output_region","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::RequestsTrait::capture_output_region","value":"pub fn capture_output_region<F>(&Self, i32,\n                                &Proxy<super::wl_output::WlOutput>, i32, i32,\n                                i32, i32, F)\n-> Result<Proxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>, ()>\nwhere\nF: FnOnce(NewProxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>) ->\nProxy<super::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1>","parent":{"krate":0,"index":10216},"children":[],"decl_id":null,"docs":"capture an output's region","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10221},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8849370,"byte_end":8849377,"line_start":264,"line_end":264,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":10216},"children":[],"decl_id":null,"docs":"destroy the manager","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10228},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8851324,"byte_end":8851348,"line_start":317,"line_end":317,"column_start":15,"column_end":39},"name":"REQ_CAPTURE_OUTPUT_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::REQ_CAPTURE_OUTPUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10229},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8851444,"byte_end":8851475,"line_start":319,"line_end":319,"column_start":15,"column_end":46},"name":"REQ_CAPTURE_OUTPUT_REGION_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::REQ_CAPTURE_OUTPUT_REGION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10230},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8851571,"byte_end":8851588,"line_start":321,"line_end":321,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_manager_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10231},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852104,"byte_end":8852128,"line_start":324,"line_end":324,"column_start":9,"column_end":33},"name":"zwlr_screencopy_frame_v1","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10232},{"krate":0,"index":10233},{"krate":0,"index":10234},{"krate":0,"index":10235},{"krate":0,"index":10236},{"krate":0,"index":10237},{"krate":0,"index":10238},{"krate":0,"index":15343},{"krate":0,"index":10239},{"krate":0,"index":10240},{"krate":0,"index":10241},{"krate":0,"index":10242},{"krate":0,"index":10243},{"krate":0,"index":10244},{"krate":0,"index":10245},{"krate":0,"index":10246},{"krate":0,"index":10247},{"krate":0,"index":10248},{"krate":0,"index":10322},{"krate":0,"index":10336},{"krate":0,"index":10334},{"krate":0,"index":10332},{"krate":0,"index":10329},{"krate":0,"index":10330},{"krate":0,"index":10249},{"krate":0,"index":10337},{"krate":0,"index":10359},{"krate":0,"index":10355},{"krate":0,"index":10356},{"krate":0,"index":10352},{"krate":0,"index":10353},{"krate":0,"index":10350},{"krate":0,"index":10344},{"krate":0,"index":10342},{"krate":0,"index":10339},{"krate":0,"index":10360},{"krate":0,"index":10365},{"krate":0,"index":10367},{"krate":0,"index":10369},{"krate":0,"index":10371},{"krate":0,"index":10373},{"krate":0,"index":10380},{"krate":0,"index":10383},{"krate":0,"index":10385},{"krate":0,"index":10388},{"krate":0,"index":10390},{"krate":0,"index":10393},{"krate":0,"index":10395},{"krate":0,"index":10398},{"krate":0,"index":10400},{"krate":0,"index":10403},{"krate":0,"index":10406},{"krate":0,"index":10252},{"krate":0,"index":10255},{"krate":0,"index":10260},{"krate":0,"index":10275},{"krate":0,"index":10289},{"krate":0,"index":10302},{"krate":0,"index":10304},{"krate":0,"index":10310},{"krate":0,"index":10313},{"krate":0,"index":10316},{"krate":0,"index":10317},{"krate":0,"index":10318},{"krate":0,"index":10319},{"krate":0,"index":10320},{"krate":0,"index":10321}],"decl_id":null,"docs":"a frame ready for copy","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10323},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852561,"byte_end":8852572,"line_start":335,"line_end":335,"column_start":9,"column_end":20},"name":"AlreadyUsed","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Error::AlreadyUsed","value":"Error::AlreadyUsed","parent":{"krate":0,"index":10322},"children":[],"decl_id":null,"docs":"the object has already been used to copy a wl_buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10326},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852635,"byte_end":8852648,"line_start":337,"line_end":337,"column_start":9,"column_end":22},"name":"InvalidBuffer","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Error::InvalidBuffer","value":"Error::InvalidBuffer","parent":{"krate":0,"index":10322},"children":[],"decl_id":null,"docs":"buffer attributes are invalid\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10322},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852473,"byte_end":8852478,"line_start":333,"line_end":333,"column_start":14,"column_end":19},"name":"Error","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Error","value":"pub enum Error {\n\n    #[doc = \"the object has already been used to copy a wl_buffer\"]\n    AlreadyUsed = ,\n\n    #[doc = \"buffer attributes are invalid\"]\n    InvalidBuffer = ,\n}","parent":null,"children":[{"krate":0,"index":10323},{"krate":0,"index":10326}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852402,"byte_end":8852414,"line_start":331,"line_end":331,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10250},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852692,"byte_end":8852700,"line_start":340,"line_end":340,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10251},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852920,"byte_end":8852926,"line_start":347,"line_end":347,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10337},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853011,"byte_end":8853016,"line_start":351,"line_end":351,"column_start":28,"column_end":33},"name":"Flags","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":10338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10374},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853069,"byte_end":8853076,"line_start":351,"line_end":351,"column_start":86,"column_end":93},"name":"YInvert","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Flags::YInvert","value":"Flags","parent":{"krate":0,"index":10373},"children":[],"decl_id":null,"docs":"contents are y-inverted\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10253},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853119,"byte_end":8853127,"line_start":353,"line_end":353,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Flags>::from_raw","value":"pub fn from_raw(u32) -> Option<Flags>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10254},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853227,"byte_end":8853233,"line_start":356,"line_end":356,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Flags>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10256},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853647,"byte_end":8853651,"line_start":362,"line_end":362,"column_start":9,"column_end":13},"name":"Copy","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Request::Copy","value":"Request::Copy { buffer }","parent":{"krate":0,"index":10255},"children":[],"decl_id":null,"docs":"copy the frame","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10258},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853928,"byte_end":8853935,"line_start":366,"line_end":366,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":10255},"children":[],"decl_id":null,"docs":"delete this object, used or not","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10255},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853303,"byte_end":8853310,"line_start":360,"line_end":360,"column_start":14,"column_end":21},"name":"Request","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Request","value":"pub enum Request {\n\n    #[doc =\n      \"copy the frame\\n\\nCopy the frame to the supplied buffer. The buffer must have a the\\ncorrect size, see zwlr_screencopy_frame_v1.buffer. The buffer needs to\\nhave a supported format.\\n\\nIf the frame is successfully copied, a \\\"flags\\\" and a \\\"ready\\\" events are\\nsent. Otherwise, a \\\"failed\\\" event is sent.\"]\n    Copy {\n        buffer: Proxy<super::wl_buffer::WlBuffer>,\n    },\n\n    #[doc =\n      \"delete this object, used or not\\n\\nDestroys the frame. This request can be sent at any time by the client.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n}","parent":null,"children":[{"krate":0,"index":10256},{"krate":0,"index":10258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10276},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8856760,"byte_end":8856766,"line_start":446,"line_end":446,"column_start":9,"column_end":15},"name":"Buffer","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Event::Buffer","value":"Event::Buffer { format, width, height, stride }","parent":{"krate":0,"index":10275},"children":[],"decl_id":null,"docs":"buffer information","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10281},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8857006,"byte_end":8857011,"line_start":453,"line_end":453,"column_start":9,"column_end":14},"name":"Flags","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Event::Flags","value":"Event::Flags { flags }","parent":{"krate":0,"index":10275},"children":[],"decl_id":null,"docs":"frame flags","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10283},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8857711,"byte_end":8857716,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"name":"Ready","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Event::Ready","value":"Event::Ready { tv_sec_hi, tv_sec_lo, tv_nsec }","parent":{"krate":0,"index":10275},"children":[],"decl_id":null,"docs":"indicates frame is available for reading","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10287},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8857992,"byte_end":8857998,"line_start":461,"line_end":461,"column_start":9,"column_end":15},"name":"Failed","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Event::Failed","value":"Event::Failed","parent":{"krate":0,"index":10275},"children":[],"decl_id":null,"docs":"frame copy failed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10275},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8856496,"byte_end":8856501,"line_start":444,"line_end":444,"column_start":14,"column_end":19},"name":"Event","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Event","value":"pub enum Event {\n\n    #[doc =\n      \"buffer information\\n\\nProvides information about the frame's buffer. This event is sent once\\nas soon as the frame is created.\\n\\nThe client should then create a buffer with the provided attributes, and\\nsend a \\\"copy\\\" request.\"]\n    Buffer {\n        format: u32,\n        width: u32,\n        height: u32,\n        stride: u32,\n    },\n\n    #[doc =\n      \"frame flags\\n\\nProvides flags about the frame. This event is sent once before the\\n\\\"ready\\\" event.\"]\n    Flags {\n        flags: Flags,\n    },\n\n    #[doc =\n      \"indicates frame is available for reading\\n\\nCalled as soon as the frame is copied, indicating it is available\\nfor reading. This event includes the time at which presentation happened\\nat.\\n\\nThe timestamp is expressed as tv_sec_hi, tv_sec_lo, tv_nsec triples,\\neach component being an unsigned 32-bit value. Whole seconds are in\\ntv_sec which is a 64-bit value combined from tv_sec_hi and tv_sec_lo,\\nand the additional fractional part in tv_nsec as nanoseconds. Hence,\\nfor valid timestamps tv_nsec must be in [0, 999999999]. The seconds part\\nmay have an arbitrary offset at start.\\n\\nAfter receiving this event, the client should destroy the object.\"]\n    Ready {\n        tv_sec_hi: u32,\n        tv_sec_lo: u32,\n        tv_nsec: u32,\n    },\n\n    #[doc =\n      \"frame copy failed\\n\\nThis event indicates that the attempted frame copy has failed.\\n\\nAfter receiving this event, the client should destroy the object.\"]\n    Failed,\n}","parent":null,"children":[{"krate":0,"index":10276},{"krate":0,"index":10281},{"krate":0,"index":10283},{"krate":0,"index":10287}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10302},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8864274,"byte_end":8864295,"line_start":638,"line_end":638,"column_start":16,"column_end":37},"name":"ZwlrScreencopyFrameV1","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::ZwlrScreencopyFrameV1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10310},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8864666,"byte_end":8864679,"line_start":648,"line_end":648,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":10311},{"krate":0,"index":10312}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10311},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8865019,"byte_end":8865023,"line_start":650,"line_end":650,"column_start":12,"column_end":16},"name":"copy","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::RequestsTrait::copy","value":"pub fn copy(&Self, &Proxy<super::wl_buffer::WlBuffer>) -> ()","parent":{"krate":0,"index":10310},"children":[],"decl_id":null,"docs":"copy the frame","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10312},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8865323,"byte_end":8865330,"line_start":652,"line_end":652,"column_start":12,"column_end":19},"name":"destroy","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":10310},"children":[],"decl_id":null,"docs":"delete this object, used or not","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10316},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8865815,"byte_end":8865829,"line_start":667,"line_end":667,"column_start":15,"column_end":29},"name":"REQ_COPY_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::REQ_COPY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10317},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8865925,"byte_end":8865942,"line_start":669,"line_end":669,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10318},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8866036,"byte_end":8866052,"line_start":671,"line_end":671,"column_start":15,"column_end":31},"name":"EVT_BUFFER_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::EVT_BUFFER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10319},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8866146,"byte_end":8866161,"line_start":673,"line_end":673,"column_start":15,"column_end":30},"name":"EVT_FLAGS_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::EVT_FLAGS_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10320},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8866255,"byte_end":8866270,"line_start":675,"line_end":675,"column_start":15,"column_end":30},"name":"EVT_READY_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::EVT_READY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10321},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8866364,"byte_end":8866380,"line_start":677,"line_end":677,"column_start":15,"column_end":31},"name":"EVT_FAILED_SINCE","qualname":"::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::EVT_FAILED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":26726,"byte_end":26743,"line_start":3,"line_end":3,"column_start":9,"column_end":26},"name":"presentation_time","qualname":"::stable::presentation_time","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","parent":null,"children":[{"krate":0,"index":10423},{"krate":0,"index":10424},{"krate":0,"index":10425}],"decl_id":null,"docs":" Presentation time protocol","sig":null,"attributes":[{"value":"! Presentation time protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":26750,"byte_end":26780,"line_start":4,"line_end":4,"column_start":5,"column_end":35}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":26785,"byte_end":26788,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"! Allows precise feedback on presentation timing for example for smooth video playback.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":26793,"byte_end":26882,"line_start":6,"line_end":6,"column_start":5,"column_end":94}}]},{"kind":"Static","id":{"krate":0,"index":10460},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_interfaces.rs","byte_start":8867054,"byte_end":8867078,"line_start":17,"line_end":17,"column_start":16,"column_end":40},"name":"wp_presentation_requests","qualname":"::stable::presentation_time::generated::c_interfaces::wp_presentation_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10462},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_interfaces.rs","byte_start":8867528,"byte_end":8867550,"line_start":29,"line_end":29,"column_start":16,"column_end":38},"name":"wp_presentation_events","qualname":"::stable::presentation_time::generated::c_interfaces::wp_presentation_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10464},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_interfaces.rs","byte_start":8867758,"byte_end":8867783,"line_start":34,"line_end":34,"column_start":16,"column_end":41},"name":"wp_presentation_interface","qualname":"::stable::presentation_time::generated::c_interfaces::wp_presentation_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10467},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_interfaces.rs","byte_start":8868228,"byte_end":8868259,"line_start":44,"line_end":44,"column_start":16,"column_end":47},"name":"wp_presentation_feedback_events","qualname":"::stable::presentation_time::generated::c_interfaces::wp_presentation_feedback_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10469},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_interfaces.rs","byte_start":8868921,"byte_end":8868955,"line_start":61,"line_end":61,"column_start":16,"column_end":50},"name":"wp_presentation_feedback_interface","qualname":"::stable::presentation_time::generated::c_interfaces::wp_presentation_feedback_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10470},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870175,"byte_end":8870190,"line_start":2,"line_end":2,"column_start":9,"column_end":24},"name":"wp_presentation","qualname":"::stable::presentation_time::generated::client::wp_presentation","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10471},{"krate":0,"index":10472},{"krate":0,"index":10473},{"krate":0,"index":10474},{"krate":0,"index":10475},{"krate":0,"index":10476},{"krate":0,"index":10477},{"krate":0,"index":15413},{"krate":0,"index":10478},{"krate":0,"index":10479},{"krate":0,"index":10480},{"krate":0,"index":10481},{"krate":0,"index":10482},{"krate":0,"index":10483},{"krate":0,"index":10484},{"krate":0,"index":10485},{"krate":0,"index":10486},{"krate":0,"index":10487},{"krate":0,"index":10621},{"krate":0,"index":10635},{"krate":0,"index":10633},{"krate":0,"index":10631},{"krate":0,"index":10628},{"krate":0,"index":10629},{"krate":0,"index":10488},{"krate":0,"index":10491},{"krate":0,"index":10497},{"krate":0,"index":10512},{"krate":0,"index":10515},{"krate":0,"index":10528},{"krate":0,"index":10530},{"krate":0,"index":10536},{"krate":0,"index":10540},{"krate":0,"index":10544},{"krate":0,"index":10545},{"krate":0,"index":10546}],"decl_id":null,"docs":"timed presentation related wl_surface requests","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10622},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870729,"byte_end":8870745,"line_start":14,"line_end":14,"column_start":9,"column_end":25},"name":"InvalidTimestamp","qualname":"::stable::presentation_time::generated::client::wp_presentation::Error::InvalidTimestamp","value":"Error::InvalidTimestamp","parent":{"krate":0,"index":10621},"children":[],"decl_id":null,"docs":"invalid value in tv_nsec\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10625},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870791,"byte_end":8870802,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"name":"InvalidFlag","qualname":"::stable::presentation_time::generated::client::wp_presentation::Error::InvalidFlag","value":"Error::InvalidFlag","parent":{"krate":0,"index":10621},"children":[],"decl_id":null,"docs":"invalid flag\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10621},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870669,"byte_end":8870674,"line_start":12,"line_end":12,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::presentation_time::generated::client::wp_presentation::Error","value":"pub enum Error {\n\n    #[doc = \"invalid value in tv_nsec\"]\n    InvalidTimestamp = ,\n\n    #[doc = \"invalid flag\"]\n    InvalidFlag = ,\n}","parent":null,"children":[{"krate":0,"index":10622},{"krate":0,"index":10625}],"decl_id":null,"docs":"fatal presentation errors","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870598,"byte_end":8870610,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10489},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870846,"byte_end":8870854,"line_start":19,"line_end":19,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10490},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8871077,"byte_end":8871083,"line_start":26,"line_end":26,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10492},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8871448,"byte_end":8871455,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::presentation_time::generated::client::wp_presentation::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":10491},"children":[],"decl_id":null,"docs":"unbind from the presentation interface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10494},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8871932,"byte_end":8871940,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"Feedback","qualname":"::stable::presentation_time::generated::client::wp_presentation::Request::Feedback","value":"Request::Feedback { surface, callback }","parent":{"krate":0,"index":10491},"children":[],"decl_id":null,"docs":"request presentation feedback information","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10491},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8871154,"byte_end":8871161,"line_start":30,"line_end":30,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::presentation_time::generated::client::wp_presentation::Request","value":"pub enum Request {\n\n    #[doc =\n      \"unbind from the presentation interface\\n\\nInforms the server that the client will no longer be using\\nthis protocol object. Existing objects created by this object\\nare not affected.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"request presentation feedback information\\n\\nRequest presentation feedback for the current content submission\\non the given surface. This creates a new presentation_feedback\\nobject, which will deliver the feedback information once. If\\nmultiple presentation_feedback objects are created for the same\\nsubmission, they will all deliver the same information.\\n\\nFor details on what information is returned, see the\\npresentation_feedback interface.\"]\n    Feedback {\n        surface: Proxy<super::wl_surface::WlSurface>,\n        callback: Proxy<super::wp_presentation_feedback::WpPresentationFeedback>,\n    },\n}","parent":null,"children":[{"krate":0,"index":10492},{"krate":0,"index":10494}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10513},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8876474,"byte_end":8876481,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"name":"ClockId","qualname":"::stable::presentation_time::generated::client::wp_presentation::Event::ClockId","value":"Event::ClockId { clk_id }","parent":{"krate":0,"index":10512},"children":[],"decl_id":null,"docs":"clock ID for timestamps","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10512},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8875067,"byte_end":8875072,"line_start":122,"line_end":122,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::presentation_time::generated::client::wp_presentation::Event","value":"pub enum Event {\n\n    #[doc =\n      \"clock ID for timestamps\\n\\nThis event tells the client in which clock domain the\\ncompositor interprets the timestamps used by the presentation\\nextension. This clock is called the presentation clock.\\n\\nThe compositor sends this event when the client binds to the\\npresentation interface. The presentation clock does not change\\nduring the lifetime of the client connection.\\n\\nThe clock identifier is platform dependent. On Linux/glibc,\\nthe identifier value is one of the clockid_t values accepted\\nby clock_gettime(). clock_gettime() is defined by\\nPOSIX.1-2001.\\n\\nTimestamps in this clock domain are expressed as tv_sec_hi,\\ntv_sec_lo, tv_nsec triples, each component being an unsigned\\n32-bit value. Whole seconds are in tv_sec which is a 64-bit\\nvalue combined from tv_sec_hi and tv_sec_lo, and the\\nadditional fractional part in tv_nsec as nanoseconds. Hence,\\nfor valid timestamps tv_nsec must be in [0, 999999999].\\n\\nNote that clock_id applies only to the presentation clock,\\nand implies nothing about e.g. the timestamps used in the\\nWayland core protocol input events.\\n\\nCompositors should prefer a clock which does not jump and is\\nnot slewed e.g. by NTP. The absolute value of the clock is\\nirrelevant. Precision of one millisecond or better is\\nrecommended. Clients must be able to query the current clock\\nvalue directly, not by asking the compositor.\"]\n    ClockId {\n        clk_id: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":10513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10528},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8878658,"byte_end":8878672,"line_start":192,"line_end":192,"column_start":16,"column_end":30},"name":"WpPresentation","qualname":"::stable::presentation_time::generated::client::wp_presentation::WpPresentation","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10536},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8879018,"byte_end":8879031,"line_start":202,"line_end":202,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::presentation_time::generated::client::wp_presentation::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":10537},{"krate":0,"index":10538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10537},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8879351,"byte_end":8879358,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::presentation_time::generated::client::wp_presentation::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":10536},"children":[],"decl_id":null,"docs":"unbind from the presentation interface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10538},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8879851,"byte_end":8879859,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"feedback","qualname":"::stable::presentation_time::generated::client::wp_presentation::RequestsTrait::feedback","value":"pub fn feedback<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::wp_presentation_feedback::WpPresentationFeedback>, ()>\nwhere\nF: FnOnce(NewProxy<super::wp_presentation_feedback::WpPresentationFeedback>)\n-> Proxy<super::wp_presentation_feedback::WpPresentationFeedback>","parent":{"krate":0,"index":10536},"children":[],"decl_id":null,"docs":"request presentation feedback information","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10544},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8881196,"byte_end":8881213,"line_start":241,"line_end":241,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::presentation_time::generated::client::wp_presentation::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10545},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8881309,"byte_end":8881327,"line_start":243,"line_end":243,"column_start":15,"column_end":33},"name":"REQ_FEEDBACK_SINCE","qualname":"::stable::presentation_time::generated::client::wp_presentation::REQ_FEEDBACK_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10546},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8881421,"byte_end":8881439,"line_start":245,"line_end":245,"column_start":15,"column_end":33},"name":"EVT_CLOCK_ID_SINCE","qualname":"::stable::presentation_time::generated::client::wp_presentation::EVT_CLOCK_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10547},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8882083,"byte_end":8882107,"line_start":248,"line_end":248,"column_start":9,"column_end":33},"name":"wp_presentation_feedback","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10548},{"krate":0,"index":10549},{"krate":0,"index":10550},{"krate":0,"index":10551},{"krate":0,"index":10552},{"krate":0,"index":10553},{"krate":0,"index":10554},{"krate":0,"index":15441},{"krate":0,"index":10555},{"krate":0,"index":10556},{"krate":0,"index":10557},{"krate":0,"index":10558},{"krate":0,"index":10559},{"krate":0,"index":10560},{"krate":0,"index":10561},{"krate":0,"index":10562},{"krate":0,"index":10563},{"krate":0,"index":10564},{"krate":0,"index":10636},{"krate":0,"index":10656},{"krate":0,"index":10654},{"krate":0,"index":10652},{"krate":0,"index":10649},{"krate":0,"index":10650},{"krate":0,"index":10565},{"krate":0,"index":10568},{"krate":0,"index":10569},{"krate":0,"index":10582},{"krate":0,"index":10595},{"krate":0,"index":10608},{"krate":0,"index":10610},{"krate":0,"index":10616},{"krate":0,"index":10617},{"krate":0,"index":10618},{"krate":0,"index":10619},{"krate":0,"index":10620}],"decl_id":null,"docs":"presentation time feedback event","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10637},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8883914,"byte_end":8883919,"line_start":260,"line_end":260,"column_start":9,"column_end":14},"name":"Vsync","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Kind::Vsync","value":"Kind::Vsync","parent":{"krate":0,"index":10636},"children":[],"decl_id":null,"docs":"presentation was vsync'd\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10640},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8883997,"byte_end":8884004,"line_start":262,"line_end":262,"column_start":9,"column_end":16},"name":"HwClock","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Kind::HwClock","value":"Kind::HwClock","parent":{"krate":0,"index":10636},"children":[],"decl_id":null,"docs":"hardware provided the presentation timestamp\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10643},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884086,"byte_end":8884098,"line_start":264,"line_end":264,"column_start":9,"column_end":21},"name":"HwCompletion","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Kind::HwCompletion","value":"Kind::HwCompletion","parent":{"krate":0,"index":10636},"children":[],"decl_id":null,"docs":"hardware signalled the start of the presentation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10646},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884163,"byte_end":8884171,"line_start":266,"line_end":266,"column_start":9,"column_end":17},"name":"ZeroCopy","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Kind::ZeroCopy","value":"Kind::ZeroCopy","parent":{"krate":0,"index":10636},"children":[],"decl_id":null,"docs":"presentation was done zero-copy\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10636},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8883855,"byte_end":8883859,"line_start":258,"line_end":258,"column_start":14,"column_end":18},"name":"Kind","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Kind","value":"pub enum Kind {\n\n    #[doc = \"presentation was vsync'd\"]\n    Vsync = ,\n\n    #[doc = \"hardware provided the presentation timestamp\"]\n    HwClock = ,\n\n    #[doc = \"hardware signalled the start of the presentation\"]\n    HwCompletion = ,\n\n    #[doc = \"presentation was done zero-copy\"]\n    ZeroCopy = ,\n}","parent":null,"children":[{"krate":0,"index":10637},{"krate":0,"index":10640},{"krate":0,"index":10643},{"krate":0,"index":10646}],"decl_id":null,"docs":"bitmask of flags in presented event","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8883784,"byte_end":8883796,"line_start":256,"line_end":256,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10566},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884214,"byte_end":8884222,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Kind>::from_raw","value":"pub fn from_raw(u32) -> Option<Kind>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10567},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884517,"byte_end":8884523,"line_start":278,"line_end":278,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Kind>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10568},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884594,"byte_end":8884601,"line_start":282,"line_end":282,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Request","value":"pub enum Request { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10583},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8886284,"byte_end":8886294,"line_start":323,"line_end":323,"column_start":9,"column_end":19},"name":"SyncOutput","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Event::SyncOutput","value":"Event::SyncOutput { output }","parent":{"krate":0,"index":10582},"children":[],"decl_id":null,"docs":"presentation synchronized to this output","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10585},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8888400,"byte_end":8888409,"line_start":327,"line_end":327,"column_start":9,"column_end":18},"name":"Presented","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Event::Presented","value":"Event::Presented { tv_sec_hi, tv_sec_lo, tv_nsec, refresh, seq_hi, seq_lo, flags }","parent":{"krate":0,"index":10582},"children":[],"decl_id":null,"docs":"the content update was displayed","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10593},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8888724,"byte_end":8888733,"line_start":337,"line_end":337,"column_start":9,"column_end":18},"name":"Discarded","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Event::Discarded","value":"Event::Discarded","parent":{"krate":0,"index":10582},"children":[],"decl_id":null,"docs":"the content update was not displayed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10582},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8885805,"byte_end":8885810,"line_start":321,"line_end":321,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::Event","value":"pub enum Event {\n\n    #[doc =\n      \"presentation synchronized to this output\\n\\nAs presentation can be synchronized to only one output at a\\ntime, this event tells which output it was. This event is only\\nsent prior to the presented event.\\n\\nAs clients may bind to the same global wl_output multiple\\ntimes, this event is sent for each bound instance that matches\\nthe synchronized output. If a client has not bound to the\\nright wl_output global at all, this event is not sent.\"]\n    SyncOutput {\n        output: Proxy<super::wl_output::WlOutput>,\n    },\n\n    #[doc =\n      \"the content update was displayed\\n\\nThe associated content update was displayed to the user at the\\nindicated time (tv_sec_hi/lo, tv_nsec). For the interpretation of\\nthe timestamp, see presentation.clock_id event.\\n\\nThe timestamp corresponds to the time when the content update\\nturned into light the first time on the surface's main output.\\nCompositors may approximate this from the framebuffer flip\\ncompletion events from the system, and the latency of the\\nphysical display path if known.\\n\\nThis event is preceded by all related sync_output events\\ntelling which output's refresh cycle the feedback corresponds\\nto, i.e. the main output for the surface. Compositors are\\nrecommended to choose the output containing the largest part\\nof the wl_surface, or keeping the output they previously\\nchose. Having a stable presentation output association helps\\nclients predict future output refreshes (vblank).\\n\\nThe 'refresh' argument gives the compositor's prediction of how\\nmany nanoseconds after tv_sec, tv_nsec the very next output\\nrefresh may occur. This is to further aid clients in\\npredicting future refreshes, i.e., estimating the timestamps\\ntargeting the next few vblanks. If such prediction cannot\\nusefully be done, the argument is zero.\\n\\nIf the output does not have a constant refresh rate, explicit\\nvideo mode switches excluded, then the refresh argument must\\nbe zero.\\n\\nThe 64-bit value combined from seq_hi and seq_lo is the value\\nof the output's vertical retrace counter when the content\\nupdate was first scanned out to the display. This value must\\nbe compatible with the definition of MSC in\\nGLX_OML_sync_control specification. Note, that if the display\\npath has a non-zero latency, the time instant specified by\\nthis counter may differ from the timestamp's.\\n\\nIf the output does not have a concept of vertical retrace or a\\nrefresh cycle, or the output device is self-refreshing without\\na way to query the refresh count, then the arguments seq_hi\\nand seq_lo must be zero.\"]\n    Presented {\n        tv_sec_hi: u32,\n        tv_sec_lo: u32,\n        tv_nsec: u32,\n        refresh: u32,\n        seq_hi: u32,\n        seq_lo: u32,\n        flags: u32,\n    },\n\n    #[doc =\n      \"the content update was not displayed\\n\\nThe content update was never displayed to the user.\"]\n    Discarded,\n}","parent":null,"children":[{"krate":0,"index":10583},{"krate":0,"index":10585},{"krate":0,"index":10593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10608},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8894612,"byte_end":8894634,"line_start":499,"line_end":499,"column_start":16,"column_end":38},"name":"WpPresentationFeedback","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::WpPresentationFeedback","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10616},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8895006,"byte_end":8895019,"line_start":509,"line_end":509,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::RequestsTrait","value":"RequestsTrait","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10618},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8895163,"byte_end":8895184,"line_start":512,"line_end":512,"column_start":15,"column_end":36},"name":"EVT_SYNC_OUTPUT_SINCE","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::EVT_SYNC_OUTPUT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10619},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8895278,"byte_end":8895297,"line_start":514,"line_end":514,"column_start":15,"column_end":34},"name":"EVT_PRESENTED_SINCE","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::EVT_PRESENTED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10620},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8895391,"byte_end":8895410,"line_start":516,"line_end":516,"column_start":15,"column_end":34},"name":"EVT_DISCARDED_SINCE","qualname":"::stable::presentation_time::generated::client::wp_presentation_feedback::EVT_DISCARDED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":40},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27079,"byte_end":27088,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"xdg_shell","qualname":"::stable::xdg_shell","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","parent":null,"children":[{"krate":0,"index":10657},{"krate":0,"index":10658},{"krate":0,"index":10659}],"decl_id":null,"docs":" XDG Shell protocol","sig":null,"attributes":[{"value":"! XDG Shell protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27095,"byte_end":27117,"line_start":19,"line_end":19,"column_start":5,"column_end":27}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27122,"byte_end":27125,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"! Exposes the `xdg_wm_base` global, which deprecates and replace `wl_shell`.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27130,"byte_end":27208,"line_start":21,"line_end":21,"column_start":5,"column_end":83}}]},{"kind":"Static","id":{"krate":0,"index":10698},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8896117,"byte_end":8896137,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"xdg_wm_base_requests","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_wm_base_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10700},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8897018,"byte_end":8897036,"line_start":38,"line_end":38,"column_start":16,"column_end":34},"name":"xdg_wm_base_events","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_wm_base_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10702},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8897240,"byte_end":8897261,"line_start":43,"line_end":43,"column_start":16,"column_end":37},"name":"xdg_wm_base_interface","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_wm_base_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10703},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8897543,"byte_end":8897566,"line_start":51,"line_end":51,"column_start":16,"column_end":39},"name":"xdg_positioner_requests","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_positioner_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10705},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8898977,"byte_end":8899001,"line_start":88,"line_end":88,"column_start":16,"column_end":40},"name":"xdg_positioner_interface","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_positioner_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10710},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8899687,"byte_end":8899707,"line_start":103,"line_end":103,"column_start":16,"column_end":36},"name":"xdg_surface_requests","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_surface_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10712},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8900782,"byte_end":8900800,"line_start":130,"line_end":130,"column_start":16,"column_end":34},"name":"xdg_surface_events","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_surface_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10714},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8901009,"byte_end":8901030,"line_start":135,"line_end":135,"column_start":16,"column_end":37},"name":"xdg_surface_interface","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_surface_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10725},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8902234,"byte_end":8902255,"line_start":162,"line_end":162,"column_start":16,"column_end":37},"name":"xdg_toplevel_requests","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_toplevel_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10727},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8905160,"byte_end":8905179,"line_start":234,"line_end":234,"column_start":16,"column_end":35},"name":"xdg_toplevel_events","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_toplevel_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10729},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8905600,"byte_end":8905622,"line_start":246,"line_end":246,"column_start":16,"column_end":38},"name":"xdg_toplevel_interface","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_toplevel_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10732},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8906076,"byte_end":8906094,"line_start":258,"line_end":258,"column_start":16,"column_end":34},"name":"xdg_popup_requests","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_popup_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10734},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8906530,"byte_end":8906546,"line_start":270,"line_end":270,"column_start":16,"column_end":32},"name":"xdg_popup_events","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_popup_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":10736},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_interfaces.rs","byte_start":8906973,"byte_end":8906992,"line_start":282,"line_end":282,"column_start":16,"column_end":35},"name":"xdg_popup_interface","qualname":"::stable::xdg_shell::generated::c_interfaces::xdg_popup_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10737},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8907644,"byte_end":8907655,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"name":"xdg_wm_base","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10738},{"krate":0,"index":10739},{"krate":0,"index":10740},{"krate":0,"index":10741},{"krate":0,"index":10742},{"krate":0,"index":10743},{"krate":0,"index":10744},{"krate":0,"index":15515},{"krate":0,"index":10745},{"krate":0,"index":10746},{"krate":0,"index":10747},{"krate":0,"index":10748},{"krate":0,"index":10749},{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10752},{"krate":0,"index":10753},{"krate":0,"index":10754},{"krate":0,"index":11293},{"krate":0,"index":11319},{"krate":0,"index":11317},{"krate":0,"index":11315},{"krate":0,"index":11312},{"krate":0,"index":11313},{"krate":0,"index":10755},{"krate":0,"index":10758},{"krate":0,"index":10768},{"krate":0,"index":10785},{"krate":0,"index":10788},{"krate":0,"index":10801},{"krate":0,"index":10803},{"krate":0,"index":10809},{"krate":0,"index":10816},{"krate":0,"index":10823},{"krate":0,"index":10824},{"krate":0,"index":10825},{"krate":0,"index":10826},{"krate":0,"index":10827}],"decl_id":null,"docs":"create desktop-style surfaces","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11294},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908069,"byte_end":8908073,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"Role","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error::Role","value":"Error::Role","parent":{"krate":0,"index":11293},"children":[],"decl_id":null,"docs":"given wl_surface has another role\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11297},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908148,"byte_end":8908163,"line_start":15,"line_end":15,"column_start":9,"column_end":24},"name":"DefunctSurfaces","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error::DefunctSurfaces","value":"Error::DefunctSurfaces","parent":{"krate":0,"index":11293},"children":[],"decl_id":null,"docs":"xdg_wm_base was destroyed before children\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11300},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908251,"byte_end":8908269,"line_start":17,"line_end":17,"column_start":9,"column_end":27},"name":"NotTheTopmostPopup","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error::NotTheTopmostPopup","value":"Error::NotTheTopmostPopup","parent":{"krate":0,"index":11293},"children":[],"decl_id":null,"docs":"the client tried to map or destroy a non-topmost popup\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11303},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908355,"byte_end":8908373,"line_start":19,"line_end":19,"column_start":9,"column_end":27},"name":"InvalidPopupParent","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error::InvalidPopupParent","value":"Error::InvalidPopupParent","parent":{"krate":0,"index":11293},"children":[],"decl_id":null,"docs":"the client specified an invalid popup parent surface\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11306},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908451,"byte_end":8908470,"line_start":21,"line_end":21,"column_start":9,"column_end":28},"name":"InvalidSurfaceState","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error::InvalidSurfaceState","value":"Error::InvalidSurfaceState","parent":{"krate":0,"index":11293},"children":[],"decl_id":null,"docs":"the client provided an invalid surface state\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11309},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908545,"byte_end":8908562,"line_start":23,"line_end":23,"column_start":9,"column_end":26},"name":"InvalidPositioner","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error::InvalidPositioner","value":"Error::InvalidPositioner","parent":{"krate":0,"index":11293},"children":[],"decl_id":null,"docs":"the client provided an invalid positioner\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11293},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908000,"byte_end":8908005,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Error","value":"pub enum Error {\n\n    #[doc = \"given wl_surface has another role\"]\n    Role = ,\n\n    #[doc = \"xdg_wm_base was destroyed before children\"]\n    DefunctSurfaces = ,\n\n    #[doc = \"the client tried to map or destroy a non-topmost popup\"]\n    NotTheTopmostPopup = ,\n\n    #[doc = \"the client specified an invalid popup parent surface\"]\n    InvalidPopupParent = ,\n\n    #[doc = \"the client provided an invalid surface state\"]\n    InvalidSurfaceState = ,\n\n    #[doc = \"the client provided an invalid positioner\"]\n    InvalidPositioner = ,\n}","parent":null,"children":[{"krate":0,"index":11294},{"krate":0,"index":11297},{"krate":0,"index":11300},{"krate":0,"index":11303},{"krate":0,"index":11306},{"krate":0,"index":11309}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8907929,"byte_end":8907941,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10756},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908606,"byte_end":8908614,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10757},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8909045,"byte_end":8909051,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10759},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8909461,"byte_end":8909468,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":10758},"children":[],"decl_id":null,"docs":"destroy xdg_wm_base","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10761},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8909708,"byte_end":8909724,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"CreatePositioner","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Request::CreatePositioner","value":"Request::CreatePositioner { id }","parent":{"krate":0,"index":10758},"children":[],"decl_id":null,"docs":"create a positioner object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10763},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8910418,"byte_end":8910431,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"name":"GetXdgSurface","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Request::GetXdgSurface","value":"Request::GetXdgSurface { id, surface }","parent":{"krate":0,"index":10758},"children":[],"decl_id":null,"docs":"create a shell surface from a surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10766},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8910735,"byte_end":8910739,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"Pong","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Request::Pong","value":"Request::Pong { serial }","parent":{"krate":0,"index":10758},"children":[],"decl_id":null,"docs":"respond to a ping event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10758},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8909122,"byte_end":8909129,"line_start":41,"line_end":41,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy xdg_wm_base\\n\\nDestroy this xdg_wm_base object.\\n\\nDestroying a bound xdg_wm_base object while there are surfaces\\nstill alive created by this xdg_wm_base object instance is illegal\\nand will result in a protocol error.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"create a positioner object\\n\\nCreate a positioner object. A positioner object is used to position\\nsurfaces relative to some parent surface. See the interface description\\nand xdg_surface.get_popup for details.\"]\n    CreatePositioner {\n        id: Proxy<super::xdg_positioner::XdgPositioner>,\n    },\n\n    #[doc =\n      \"create a shell surface from a surface\\n\\nThis creates an xdg_surface for the given surface. While xdg_surface\\nitself is not a role, the corresponding surface may only be assigned\\na role extending xdg_surface, such as xdg_toplevel or xdg_popup.\\n\\nThis creates an xdg_surface for the given surface. An xdg_surface is\\nused as basis to define a role to a given surface, such as xdg_toplevel\\nor xdg_popup. It also manages functionality shared between xdg_surface\\nbased surface roles.\\n\\nSee the documentation of xdg_surface for more details about what an\\nxdg_surface is and how it is used.\"]\n    GetXdgSurface {\n        id: Proxy<super::xdg_surface::XdgSurface>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n\n    #[doc =\n      \"respond to a ping event\\n\\nA client must respond to a ping event with a pong request or\\nthe client may be deemed unresponsive. See xdg_wm_base.ping.\"]\n    Pong {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":10759},{"krate":0,"index":10761},{"krate":0,"index":10763},{"krate":0,"index":10766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10786},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8915871,"byte_end":8915875,"line_start":177,"line_end":177,"column_start":9,"column_end":13},"name":"Ping","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Event::Ping","value":"Event::Ping { serial }","parent":{"krate":0,"index":10785},"children":[],"decl_id":null,"docs":"check if the client is alive","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10785},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8915236,"byte_end":8915241,"line_start":175,"line_end":175,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::Event","value":"pub enum Event {\n\n    #[doc =\n      \"check if the client is alive\\n\\nThe ping event asks the client if it's still alive. Pass the\\nserial specified in the event back to the compositor by sending\\na \\\"pong\\\" request back with the specified serial. See xdg_wm_base.ping.\\n\\nCompositors can use this to determine if the client is still\\nalive. It's unspecified what will happen if the client doesn't\\nrespond to the ping request, or in what timeframe. Clients should\\ntry to respond in a reasonable amount of time.\\n\\nA compositor is free to ping in any way it wants, but a client must\\nalways respond to any xdg_wm_base object it created.\"]\n    Ping {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":10786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10801},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8918039,"byte_end":8918048,"line_start":245,"line_end":245,"column_start":16,"column_end":25},"name":"XdgWmBase","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::XdgWmBase","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8918381,"byte_end":8918394,"line_start":255,"line_end":255,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":10810},{"krate":0,"index":10811},{"krate":0,"index":10813},{"krate":0,"index":10815}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10810},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8918759,"byte_end":8918766,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":10809},"children":[],"decl_id":null,"docs":"destroy xdg_wm_base","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10811},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8919022,"byte_end":8919039,"line_start":259,"line_end":259,"column_start":12,"column_end":29},"name":"create_positioner","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::RequestsTrait::create_positioner","value":"pub fn create_positioner<F>(&Self, F)\n-> Result<Proxy<super::xdg_positioner::XdgPositioner>, ()> where\nF: FnOnce(NewProxy<super::xdg_positioner::XdgPositioner>) ->\nProxy<super::xdg_positioner::XdgPositioner>","parent":{"krate":0,"index":10809},"children":[],"decl_id":null,"docs":"create a positioner object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10813},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8919945,"byte_end":8919960,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"get_xdg_surface","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::RequestsTrait::get_xdg_surface","value":"pub fn get_xdg_surface<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::xdg_surface::XdgSurface>, ()> where\nF: FnOnce(NewProxy<super::xdg_surface::XdgSurface>) ->\nProxy<super::xdg_surface::XdgSurface>","parent":{"krate":0,"index":10809},"children":[],"decl_id":null,"docs":"create a shell surface from a surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10815},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8920465,"byte_end":8920469,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"pong","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::RequestsTrait::pong","value":"pub fn pong(&Self, u32) -> ()","parent":{"krate":0,"index":10809},"children":[],"decl_id":null,"docs":"respond to a ping event","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10823},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8921967,"byte_end":8921984,"line_start":321,"line_end":321,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10824},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8922080,"byte_end":8922107,"line_start":323,"line_end":323,"column_start":15,"column_end":42},"name":"REQ_CREATE_POSITIONER_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::REQ_CREATE_POSITIONER_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10825},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8922203,"byte_end":8922228,"line_start":325,"line_end":325,"column_start":15,"column_end":40},"name":"REQ_GET_XDG_SURFACE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::REQ_GET_XDG_SURFACE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10826},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8922324,"byte_end":8922338,"line_start":327,"line_end":327,"column_start":15,"column_end":29},"name":"REQ_PONG_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::REQ_PONG_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10827},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8922432,"byte_end":8922446,"line_start":329,"line_end":329,"column_start":15,"column_end":29},"name":"EVT_PING_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_wm_base::EVT_PING_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10828},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8923592,"byte_end":8923606,"line_start":332,"line_end":332,"column_start":9,"column_end":23},"name":"xdg_positioner","qualname":"::stable::xdg_shell::generated::client::xdg_positioner","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10829},{"krate":0,"index":10830},{"krate":0,"index":10831},{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834},{"krate":0,"index":10835},{"krate":0,"index":15543},{"krate":0,"index":10836},{"krate":0,"index":10837},{"krate":0,"index":10838},{"krate":0,"index":10839},{"krate":0,"index":10840},{"krate":0,"index":10841},{"krate":0,"index":10842},{"krate":0,"index":10843},{"krate":0,"index":10844},{"krate":0,"index":10845},{"krate":0,"index":11320},{"krate":0,"index":11331},{"krate":0,"index":11329},{"krate":0,"index":11327},{"krate":0,"index":11324},{"krate":0,"index":11325},{"krate":0,"index":10846},{"krate":0,"index":11332},{"krate":0,"index":11367},{"krate":0,"index":11365},{"krate":0,"index":11363},{"krate":0,"index":11360},{"krate":0,"index":11361},{"krate":0,"index":10849},{"krate":0,"index":11368},{"krate":0,"index":11403},{"krate":0,"index":11401},{"krate":0,"index":11399},{"krate":0,"index":11396},{"krate":0,"index":11397},{"krate":0,"index":10852},{"krate":0,"index":11404},{"krate":0,"index":11426},{"krate":0,"index":11422},{"krate":0,"index":11423},{"krate":0,"index":11419},{"krate":0,"index":11420},{"krate":0,"index":11417},{"krate":0,"index":11411},{"krate":0,"index":11409},{"krate":0,"index":11406},{"krate":0,"index":11427},{"krate":0,"index":11438},{"krate":0,"index":11440},{"krate":0,"index":11442},{"krate":0,"index":11444},{"krate":0,"index":11446},{"krate":0,"index":11459},{"krate":0,"index":11462},{"krate":0,"index":11464},{"krate":0,"index":11467},{"krate":0,"index":11469},{"krate":0,"index":11472},{"krate":0,"index":11474},{"krate":0,"index":11477},{"krate":0,"index":11479},{"krate":0,"index":11482},{"krate":0,"index":11485},{"krate":0,"index":10855},{"krate":0,"index":10858},{"krate":0,"index":10878},{"krate":0,"index":10898},{"krate":0,"index":10899},{"krate":0,"index":10912},{"krate":0,"index":10914},{"krate":0,"index":10920},{"krate":0,"index":10928},{"krate":0,"index":10936},{"krate":0,"index":10937},{"krate":0,"index":10938},{"krate":0,"index":10939},{"krate":0,"index":10940},{"krate":0,"index":10941},{"krate":0,"index":10942}],"decl_id":null,"docs":"child surface positioner","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11321},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924009,"byte_end":8924021,"line_start":343,"line_end":343,"column_start":9,"column_end":21},"name":"InvalidInput","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Error::InvalidInput","value":"Error::InvalidInput","parent":{"krate":0,"index":11320},"children":[],"decl_id":null,"docs":"invalid input provided\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11320},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8923951,"byte_end":8923956,"line_start":341,"line_end":341,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Error","value":"pub enum Error {\n\n    #[doc = \"invalid input provided\"]\n    InvalidInput = ,\n}","parent":null,"children":[{"krate":0,"index":11321}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8923880,"byte_end":8923892,"line_start":339,"line_end":339,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10847},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924065,"byte_end":8924073,"line_start":346,"line_end":346,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10848},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924245,"byte_end":8924251,"line_start":352,"line_end":352,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11333},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924401,"byte_end":8924405,"line_start":359,"line_end":359,"column_start":9,"column_end":13},"name":"None","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::None","value":"Anchor::None","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11336},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924419,"byte_end":8924422,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"name":"Top","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::Top","value":"Anchor::Top","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11339},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924436,"byte_end":8924442,"line_start":361,"line_end":361,"column_start":9,"column_end":15},"name":"Bottom","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::Bottom","value":"Anchor::Bottom","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11342},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924456,"byte_end":8924460,"line_start":362,"line_end":362,"column_start":9,"column_end":13},"name":"Left","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::Left","value":"Anchor::Left","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11345},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924474,"byte_end":8924479,"line_start":363,"line_end":363,"column_start":9,"column_end":14},"name":"Right","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::Right","value":"Anchor::Right","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11348},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924493,"byte_end":8924500,"line_start":364,"line_end":364,"column_start":9,"column_end":16},"name":"TopLeft","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::TopLeft","value":"Anchor::TopLeft","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11351},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924514,"byte_end":8924524,"line_start":365,"line_end":365,"column_start":9,"column_end":19},"name":"BottomLeft","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::BottomLeft","value":"Anchor::BottomLeft","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11354},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924538,"byte_end":8924546,"line_start":366,"line_end":366,"column_start":9,"column_end":17},"name":"TopRight","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::TopRight","value":"Anchor::TopRight","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11357},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924560,"byte_end":8924571,"line_start":367,"line_end":367,"column_start":9,"column_end":20},"name":"BottomRight","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor::BottomRight","value":"Anchor::BottomRight","parent":{"krate":0,"index":11332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11332},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924384,"byte_end":8924390,"line_start":358,"line_end":358,"column_start":14,"column_end":20},"name":"Anchor","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Anchor","value":"pub enum Anchor {\n    None = ,\n    Top = ,\n    Bottom = ,\n    Left = ,\n    Right = ,\n    TopLeft = ,\n    BottomLeft = ,\n    TopRight = ,\n    BottomRight = ,\n}","parent":null,"children":[{"krate":0,"index":11333},{"krate":0,"index":11336},{"krate":0,"index":11339},{"krate":0,"index":11342},{"krate":0,"index":11345},{"krate":0,"index":11348},{"krate":0,"index":11351},{"krate":0,"index":11354},{"krate":0,"index":11357}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924313,"byte_end":8924325,"line_start":356,"line_end":356,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10850},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924616,"byte_end":8924624,"line_start":370,"line_end":370,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Anchor>::from_raw","value":"pub fn from_raw(u32) -> Option<Anchor>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10851},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925140,"byte_end":8925146,"line_start":384,"line_end":384,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Anchor>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11369},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925297,"byte_end":8925301,"line_start":391,"line_end":391,"column_start":9,"column_end":13},"name":"None","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::None","value":"Gravity::None","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11372},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925315,"byte_end":8925318,"line_start":392,"line_end":392,"column_start":9,"column_end":12},"name":"Top","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::Top","value":"Gravity::Top","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11375},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925332,"byte_end":8925338,"line_start":393,"line_end":393,"column_start":9,"column_end":15},"name":"Bottom","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::Bottom","value":"Gravity::Bottom","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11378},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925352,"byte_end":8925356,"line_start":394,"line_end":394,"column_start":9,"column_end":13},"name":"Left","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::Left","value":"Gravity::Left","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11381},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925370,"byte_end":8925375,"line_start":395,"line_end":395,"column_start":9,"column_end":14},"name":"Right","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::Right","value":"Gravity::Right","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11384},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925389,"byte_end":8925396,"line_start":396,"line_end":396,"column_start":9,"column_end":16},"name":"TopLeft","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::TopLeft","value":"Gravity::TopLeft","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11387},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925410,"byte_end":8925420,"line_start":397,"line_end":397,"column_start":9,"column_end":19},"name":"BottomLeft","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::BottomLeft","value":"Gravity::BottomLeft","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11390},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925434,"byte_end":8925442,"line_start":398,"line_end":398,"column_start":9,"column_end":17},"name":"TopRight","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::TopRight","value":"Gravity::TopRight","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11393},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925456,"byte_end":8925467,"line_start":399,"line_end":399,"column_start":9,"column_end":20},"name":"BottomRight","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity::BottomRight","value":"Gravity::BottomRight","parent":{"krate":0,"index":11368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11368},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925279,"byte_end":8925286,"line_start":390,"line_end":390,"column_start":14,"column_end":21},"name":"Gravity","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Gravity","value":"pub enum Gravity {\n    None = ,\n    Top = ,\n    Bottom = ,\n    Left = ,\n    Right = ,\n    TopLeft = ,\n    BottomLeft = ,\n    TopRight = ,\n    BottomRight = ,\n}","parent":null,"children":[{"krate":0,"index":11369},{"krate":0,"index":11372},{"krate":0,"index":11375},{"krate":0,"index":11378},{"krate":0,"index":11381},{"krate":0,"index":11384},{"krate":0,"index":11387},{"krate":0,"index":11390},{"krate":0,"index":11393}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925208,"byte_end":8925220,"line_start":388,"line_end":388,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10853},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925513,"byte_end":8925521,"line_start":402,"line_end":402,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Gravity>::from_raw","value":"pub fn from_raw(u32) -> Option<Gravity>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10854},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8926047,"byte_end":8926053,"line_start":416,"line_end":416,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Gravity>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11404},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8926743,"byte_end":8926763,"line_start":420,"line_end":420,"column_start":633,"column_end":653},"name":"ConstraintAdjustment","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment","value":"ConstraintAdjustment {  }","parent":null,"children":[{"krate":0,"index":11405}],"decl_id":null,"docs":"constraint adjustments","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11447},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8926968,"byte_end":8926972,"line_start":420,"line_end":420,"column_start":858,"column_end":862},"name":"None","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::None","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"don't move the child surface when constrained","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11448},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8927554,"byte_end":8927560,"line_start":420,"line_end":420,"column_start":1444,"column_end":1450},"name":"SlideX","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::SlideX","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"move along the x axis until unconstrained","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11449},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8928142,"byte_end":8928148,"line_start":420,"line_end":420,"column_start":2032,"column_end":2038},"name":"SlideY","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::SlideY","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"move along the y axis until unconstrained","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11450},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8928629,"byte_end":8928634,"line_start":420,"line_end":420,"column_start":2519,"column_end":2524},"name":"FlipX","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::FlipX","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"invert the anchor and gravity on the x axis","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11451},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929258,"byte_end":8929263,"line_start":420,"line_end":420,"column_start":3148,"column_end":3153},"name":"FlipY","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::FlipY","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"invert the anchor and gravity on the y axis","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11452},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929398,"byte_end":8929405,"line_start":420,"line_end":420,"column_start":3288,"column_end":3295},"name":"ResizeX","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::ResizeX","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"horizontally resize the surface","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11453},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929536,"byte_end":8929543,"line_start":420,"line_end":420,"column_start":3426,"column_end":3433},"name":"ResizeY","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment::ResizeY","value":"ConstraintAdjustment","parent":{"krate":0,"index":11446},"children":[],"decl_id":null,"docs":"vertically resize the surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10856},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929602,"byte_end":8929610,"line_start":422,"line_end":422,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ConstraintAdjustment>::from_raw","value":"pub fn from_raw(u32) -> Option<ConstraintAdjustment>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10857},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929740,"byte_end":8929746,"line_start":425,"line_end":425,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ConstraintAdjustment>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10859},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8930034,"byte_end":8930041,"line_start":431,"line_end":431,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"destroy the xdg_positioner object","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10861},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8930393,"byte_end":8930400,"line_start":433,"line_end":433,"column_start":9,"column_end":16},"name":"SetSize","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::SetSize","value":"Request::SetSize { width, height }","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"set the size of the to-be positioned rectangle","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10864},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8930981,"byte_end":8930994,"line_start":435,"line_end":435,"column_start":9,"column_end":22},"name":"SetAnchorRect","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::SetAnchorRect","value":"Request::SetAnchorRect { x, y, width, height }","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"set the anchor rectangle within the parent surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10869},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8931573,"byte_end":8931582,"line_start":442,"line_end":442,"column_start":9,"column_end":18},"name":"SetAnchor","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::SetAnchor","value":"Request::SetAnchor { anchor }","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"set anchor rectangle anchor","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10871},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8932024,"byte_end":8932034,"line_start":444,"line_end":444,"column_start":9,"column_end":19},"name":"SetGravity","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::SetGravity","value":"Request::SetGravity { gravity }","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"set child surface gravity","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10873},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8932796,"byte_end":8932819,"line_start":446,"line_end":446,"column_start":9,"column_end":32},"name":"SetConstraintAdjustment","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::SetConstraintAdjustment","value":"Request::SetConstraintAdjustment { constraint_adjustment }","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"set the adjustment to be done when constrained","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10875},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8933565,"byte_end":8933574,"line_start":448,"line_end":448,"column_start":9,"column_end":18},"name":"SetOffset","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request::SetOffset","value":"Request::SetOffset { x, y }","parent":{"krate":0,"index":10858},"children":[],"decl_id":null,"docs":"set surface position offset","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10858},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929816,"byte_end":8929823,"line_start":429,"line_end":429,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_positioner object\\n\\nNotify the compositor that the xdg_positioner will no longer be used.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the size of the to-be positioned rectangle\\n\\nSet the size of the surface that is to be positioned with the positioner\\nobject. The size is in surface-local coordinates and corresponds to the\\nwindow geometry. See xdg_surface.set_window_geometry.\\n\\nIf a zero or negative size is set the invalid_input error is raised.\"]\n    SetSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"set the anchor rectangle within the parent surface\\n\\nSpecify the anchor rectangle within the parent surface that the child\\nsurface will be placed relative to. The rectangle is relative to the\\nwindow geometry as defined by xdg_surface.set_window_geometry of the\\nparent surface.\\n\\nWhen the xdg_positioner object is used to position a child surface, the\\nanchor rectangle may not extend outside the window geometry of the\\npositioned child's parent surface.\\n\\nIf a negative size is set the invalid_input error is raised.\"]\n    SetAnchorRect {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"set anchor rectangle anchor\\n\\nDefines the anchor point for the anchor rectangle. The specified anchor\\nis used derive an anchor point that the child surface will be\\npositioned relative to. If a corner anchor is set (e.g. 'top_left' or\\n'bottom_right'), the anchor point will be at the specified corner;\\notherwise, the derived anchor point will be centered on the specified\\nedge, or in the center of the anchor rectangle if no edge is specified.\"]\n    SetAnchor {\n        anchor: Anchor,\n    },\n\n    #[doc =\n      \"set child surface gravity\\n\\nDefines in what direction a surface should be positioned, relative to\\nthe anchor point of the parent surface. If a corner gravity is\\nspecified (e.g. 'bottom_right' or 'top_left'), then the child surface\\nwill be placed towards the specified gravity; otherwise, the child\\nsurface will be centered over the anchor point on any axis that had no\\ngravity specified.\"]\n    SetGravity {\n        gravity: Gravity,\n    },\n\n    #[doc =\n      \"set the adjustment to be done when constrained\\n\\nSpecify how the window should be positioned if the originally intended\\nposition caused the surface to be constrained, meaning at least\\npartially outside positioning boundaries set by the compositor. The\\nadjustment is set by constructing a bitmask describing the adjustment to\\nbe made when the surface is constrained on that axis.\\n\\nIf no bit for one axis is set, the compositor will assume that the child\\nsurface should not change its position on that axis when constrained.\\n\\nIf more than one bit for one axis is set, the order of how adjustments\\nare applied is specified in the corresponding adjustment descriptions.\\n\\nThe default adjustment is none.\"]\n    SetConstraintAdjustment {\n        constraint_adjustment: u32,\n    },\n\n    #[doc =\n      \"set surface position offset\\n\\nSpecify the surface position offset relative to the position of the\\nanchor on the anchor rectangle and the anchor on the surface. For\\nexample if the anchor of the anchor rectangle is at (x, y), the surface\\nhas the gravity bottom|right, and the offset is (ox, oy), the calculated\\nsurface position will be (x + ox, y + oy). The offset position of the\\nsurface is the one used for constraint testing. See\\nset_constraint_adjustment.\\n\\nAn example use case is placing a popup menu on top of a user interface\\nelement, while aligning the user interface element of the parent surface\\nwith some user interface element placed somewhere in the popup surface.\"]\n    SetOffset {\n        x: i32,\n        y: i32,\n    },\n}","parent":null,"children":[{"krate":0,"index":10859},{"krate":0,"index":10861},{"krate":0,"index":10864},{"krate":0,"index":10869},{"krate":0,"index":10871},{"krate":0,"index":10873},{"krate":0,"index":10875}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10898},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8940640,"byte_end":8940645,"line_start":635,"line_end":635,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10912},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8941945,"byte_end":8941958,"line_start":678,"line_end":678,"column_start":16,"column_end":29},"name":"XdgPositioner","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::XdgPositioner","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10920},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8942301,"byte_end":8942314,"line_start":688,"line_end":688,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":10921},{"krate":0,"index":10922},{"krate":0,"index":10923},{"krate":0,"index":10924},{"krate":0,"index":10925},{"krate":0,"index":10926},{"krate":0,"index":10927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10921},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8942558,"byte_end":8942565,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"destroy the xdg_positioner object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10922},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8942933,"byte_end":8942941,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"set_size","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::set_size","value":"pub fn set_size(&Self, i32, i32) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"set the size of the to-be positioned rectangle","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10923},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8943535,"byte_end":8943550,"line_start":694,"line_end":694,"column_start":12,"column_end":27},"name":"set_anchor_rect","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::set_anchor_rect","value":"pub fn set_anchor_rect(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"set the anchor rectangle within the parent surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10924},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8944085,"byte_end":8944095,"line_start":696,"line_end":696,"column_start":12,"column_end":22},"name":"set_anchor","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::set_anchor","value":"pub fn set_anchor(&Self, Anchor) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"set anchor rectangle anchor","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10925},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8944550,"byte_end":8944561,"line_start":698,"line_end":698,"column_start":12,"column_end":23},"name":"set_gravity","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::set_gravity","value":"pub fn set_gravity(&Self, Gravity) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"set child surface gravity","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10926},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8945336,"byte_end":8945361,"line_start":700,"line_end":700,"column_start":12,"column_end":37},"name":"set_constraint_adjustment","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::set_constraint_adjustment","value":"pub fn set_constraint_adjustment(&Self, u32) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"set the adjustment to be done when constrained","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10927},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8946120,"byte_end":8946130,"line_start":702,"line_end":702,"column_start":12,"column_end":22},"name":"set_offset","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::RequestsTrait::set_offset","value":"pub fn set_offset(&Self, i32, i32) -> ()","parent":{"krate":0,"index":10920},"children":[],"decl_id":null,"docs":"set surface position offset","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10936},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8947632,"byte_end":8947649,"line_start":745,"line_end":745,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10937},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8947745,"byte_end":8947763,"line_start":747,"line_end":747,"column_start":15,"column_end":33},"name":"REQ_SET_SIZE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_SET_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10938},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8947859,"byte_end":8947884,"line_start":749,"line_end":749,"column_start":15,"column_end":40},"name":"REQ_SET_ANCHOR_RECT_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_SET_ANCHOR_RECT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10939},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8947980,"byte_end":8948000,"line_start":751,"line_end":751,"column_start":15,"column_end":35},"name":"REQ_SET_ANCHOR_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_SET_ANCHOR_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10940},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8948096,"byte_end":8948117,"line_start":753,"line_end":753,"column_start":15,"column_end":36},"name":"REQ_SET_GRAVITY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_SET_GRAVITY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10941},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8948213,"byte_end":8948248,"line_start":755,"line_end":755,"column_start":15,"column_end":50},"name":"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10942},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8948344,"byte_end":8948364,"line_start":757,"line_end":757,"column_start":15,"column_end":35},"name":"REQ_SET_OFFSET_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_positioner::REQ_SET_OFFSET_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10943},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950264,"byte_end":8950275,"line_start":760,"line_end":760,"column_start":9,"column_end":20},"name":"xdg_surface","qualname":"::stable::xdg_shell::generated::client::xdg_surface","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","parent":null,"children":[{"krate":0,"index":10944},{"krate":0,"index":10945},{"krate":0,"index":10946},{"krate":0,"index":10947},{"krate":0,"index":10948},{"krate":0,"index":10949},{"krate":0,"index":10950},{"krate":0,"index":15571},{"krate":0,"index":10951},{"krate":0,"index":10952},{"krate":0,"index":10953},{"krate":0,"index":10954},{"krate":0,"index":10955},{"krate":0,"index":10956},{"krate":0,"index":10957},{"krate":0,"index":10958},{"krate":0,"index":10959},{"krate":0,"index":10960},{"krate":0,"index":11520},{"krate":0,"index":11537},{"krate":0,"index":11535},{"krate":0,"index":11533},{"krate":0,"index":11530},{"krate":0,"index":11531},{"krate":0,"index":10961},{"krate":0,"index":10964},{"krate":0,"index":10980},{"krate":0,"index":10999},{"krate":0,"index":11002},{"krate":0,"index":11015},{"krate":0,"index":11017},{"krate":0,"index":11023},{"krate":0,"index":11031},{"krate":0,"index":11040},{"krate":0,"index":11041},{"krate":0,"index":11042},{"krate":0,"index":11043},{"krate":0,"index":11044},{"krate":0,"index":11045}],"decl_id":null,"docs":"desktop user interface surface base interface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11521},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950636,"byte_end":8950650,"line_start":770,"line_end":770,"column_start":9,"column_end":23},"name":"NotConstructed","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Error::NotConstructed","value":"Error::NotConstructed","parent":{"krate":0,"index":11520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11524},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950664,"byte_end":8950682,"line_start":771,"line_end":771,"column_start":9,"column_end":27},"name":"AlreadyConstructed","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Error::AlreadyConstructed","value":"Error::AlreadyConstructed","parent":{"krate":0,"index":11520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11527},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950696,"byte_end":8950714,"line_start":772,"line_end":772,"column_start":9,"column_end":27},"name":"UnconfiguredBuffer","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Error::UnconfiguredBuffer","value":"Error::UnconfiguredBuffer","parent":{"krate":0,"index":11520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11520},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950620,"byte_end":8950625,"line_start":769,"line_end":769,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Error","value":"pub enum Error {\n    NotConstructed = ,\n    AlreadyConstructed = ,\n    UnconfiguredBuffer = ,\n}","parent":null,"children":[{"krate":0,"index":11521},{"krate":0,"index":11524},{"krate":0,"index":11527}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950549,"byte_end":8950561,"line_start":767,"line_end":767,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":10962},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950758,"byte_end":8950766,"line_start":775,"line_end":775,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10963},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8951048,"byte_end":8951054,"line_start":783,"line_end":783,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10965},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8951376,"byte_end":8951383,"line_start":789,"line_end":789,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":10964},"children":[],"decl_id":null,"docs":"destroy the xdg_surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10967},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8951683,"byte_end":8951694,"line_start":791,"line_end":791,"column_start":9,"column_end":20},"name":"GetToplevel","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Request::GetToplevel","value":"Request::GetToplevel { id }","parent":{"krate":0,"index":10964},"children":[],"decl_id":null,"docs":"assign the xdg_toplevel surface role","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10969},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8952182,"byte_end":8952190,"line_start":795,"line_end":795,"column_start":9,"column_end":17},"name":"GetPopup","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Request::GetPopup","value":"Request::GetPopup { id, parent, positioner }","parent":{"krate":0,"index":10964},"children":[],"decl_id":null,"docs":"assign the xdg_popup surface role","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10973},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8953901,"byte_end":8953918,"line_start":801,"line_end":801,"column_start":9,"column_end":26},"name":"SetWindowGeometry","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Request::SetWindowGeometry","value":"Request::SetWindowGeometry { x, y, width, height }","parent":{"krate":0,"index":10964},"children":[],"decl_id":null,"docs":"set the new window geometry","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10978},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8954992,"byte_end":8955004,"line_start":808,"line_end":808,"column_start":9,"column_end":21},"name":"AckConfigure","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Request::AckConfigure","value":"Request::AckConfigure { serial }","parent":{"krate":0,"index":10964},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10964},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8951125,"byte_end":8951132,"line_start":787,"line_end":787,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_surface\\n\\nDestroy the xdg_surface object. An xdg_surface must only be destroyed\\nafter its role object has been destroyed.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"assign the xdg_toplevel surface role\\n\\nThis creates an xdg_toplevel object for the given xdg_surface and gives\\nthe associated wl_surface the xdg_toplevel role.\\n\\nSee the documentation of xdg_toplevel for more details about what an\\nxdg_toplevel is and how it is used.\"]\n    GetToplevel {\n        id: Proxy<super::xdg_toplevel::XdgToplevel>,\n    },\n\n    #[doc =\n      \"assign the xdg_popup surface role\\n\\nThis creates an xdg_popup object for the given xdg_surface and gives\\nthe associated wl_surface the xdg_popup role.\\n\\nIf null is passed as a parent, a parent surface must be specified using\\nsome other protocol, before committing the initial state.\\n\\nSee the documentation of xdg_popup for more details about what an\\nxdg_popup is and how it is used.\"]\n    GetPopup {\n        id: Proxy<super::xdg_popup::XdgPopup>,\n        parent: Option<Proxy<super::xdg_surface::XdgSurface>>,\n        positioner: Proxy<super::xdg_positioner::XdgPositioner>,\n    },\n\n    #[doc =\n      \"set the new window geometry\\n\\nThe window geometry of a surface is its \\\"visible bounds\\\" from the\\nuser's perspective. Client-side decorations often have invisible\\nportions like drop-shadows which should be ignored for the\\npurposes of aligning, placing and constraining windows.\\n\\nThe window geometry is double buffered, and will be applied at the\\ntime wl_surface.commit of the corresponding wl_surface is called.\\n\\nWhen maintaining a position, the compositor should treat the (x, y)\\ncoordinate of the window geometry as the top left corner of the window.\\nA client changing the (x, y) window geometry coordinate should in\\ngeneral not alter the position of the window.\\n\\nOnce the window geometry of the surface is set, it is not possible to\\nunset it, and it will remain the same until set_window_geometry is\\ncalled again, even if a new subsurface or buffer is attached.\\n\\nIf never set, the value is the full bounds of the surface,\\nincluding any subsurfaces. This updates dynamically on every\\ncommit. This unset is meant for extremely simple clients.\\n\\nThe arguments are given in the surface-local coordinate space of\\nthe wl_surface associated with this xdg_surface.\\n\\nThe width and height must be greater than zero. Setting an invalid size\\nwill raise an error. When applied, the effective window geometry will be\\nthe set window geometry clamped to the bounding rectangle of the\\ncombined geometry of the surface of the xdg_surface and the associated\\nsubsurfaces.\"]\n    SetWindowGeometry {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"ack a configure event\\n\\nWhen a configure event is received, if a client commits the\\nsurface in response to the configure event, then the client\\nmust make an ack_configure request sometime before the commit\\nrequest, passing along the serial of the configure event.\\n\\nFor instance, for toplevel surfaces the compositor might use this\\ninformation to move a surface to the top left only when the client has\\ndrawn itself for the maximized or fullscreen state.\\n\\nIf the client receives multiple configure events before it\\ncan respond to one, it only has to ack the last configure event.\\n\\nA client is not required to commit immediately after sending\\nan ack_configure request - it may even ack_configure several times\\nbefore its next surface commit.\\n\\nA client may send multiple ack_configure requests before committing, but\\nonly the last request sent before a commit indicates which configure\\nevent the client really is responding to.\"]\n    AckConfigure {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":10965},{"krate":0,"index":10967},{"krate":0,"index":10969},{"krate":0,"index":10973},{"krate":0,"index":10978}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11000},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8962379,"byte_end":8962388,"line_start":987,"line_end":987,"column_start":9,"column_end":18},"name":"Configure","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Event::Configure","value":"Event::Configure { serial }","parent":{"krate":0,"index":10999},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10999},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8961443,"byte_end":8961448,"line_start":985,"line_end":985,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::xdg_shell::generated::client::xdg_surface::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThe configure event marks the end of a configure sequence. A configure\\nsequence is a set of one or more events configuring the state of the\\nxdg_surface, including the final xdg_surface.configure event.\\n\\nWhere applicable, xdg_surface surface roles will during a configure\\nsequence extend this event as a latched state sent as events before the\\nxdg_surface.configure event. Such events should be considered to make up\\na set of atomically applied configuration states, where the\\nxdg_surface.configure commits the accumulated state.\\n\\nClients should arrange their surface for the new states, and then send\\nan ack_configure request with the serial sent in this configure event at\\nsome point before committing the new surface.\\n\\nIf the client receives multiple configure events before it can respond\\nto one, it is free to discard all but the last event it received.\"]\n    Configure {\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":11000}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11015},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8964572,"byte_end":8964582,"line_start":1055,"line_end":1055,"column_start":16,"column_end":26},"name":"XdgSurface","qualname":"::stable::xdg_shell::generated::client::xdg_surface::XdgSurface","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11023},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8964916,"byte_end":8964929,"line_start":1065,"line_end":1065,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::xdg_shell::generated::client::xdg_surface::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":11024},{"krate":0,"index":11025},{"krate":0,"index":11027},{"krate":0,"index":11029},{"krate":0,"index":11030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11024},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8965206,"byte_end":8965213,"line_start":1067,"line_end":1067,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::xdg_shell::generated::client::xdg_surface::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":11023},"children":[],"decl_id":null,"docs":"destroy the xdg_surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11025},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8965529,"byte_end":8965541,"line_start":1069,"line_end":1069,"column_start":12,"column_end":24},"name":"get_toplevel","qualname":"::stable::xdg_shell::generated::client::xdg_surface::RequestsTrait::get_toplevel","value":"pub fn get_toplevel<F>(&Self, F)\n-> Result<Proxy<super::xdg_toplevel::XdgToplevel>, ()> where\nF: FnOnce(NewProxy<super::xdg_toplevel::XdgToplevel>) ->\nProxy<super::xdg_toplevel::XdgToplevel>","parent":{"krate":0,"index":11023},"children":[],"decl_id":null,"docs":"assign the xdg_toplevel surface role","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11027},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8966233,"byte_end":8966242,"line_start":1078,"line_end":1078,"column_start":12,"column_end":21},"name":"get_popup","qualname":"::stable::xdg_shell::generated::client::xdg_surface::RequestsTrait::get_popup","value":"pub fn get_popup<F>(&Self, Option<&Proxy<super::xdg_surface::XdgSurface>>,\n                    &Proxy<super::xdg_positioner::XdgPositioner>, F)\n-> Result<Proxy<super::xdg_popup::XdgPopup>, ()> where\nF: FnOnce(NewProxy<super::xdg_popup::XdgPopup>) ->\nProxy<super::xdg_popup::XdgPopup>","parent":{"krate":0,"index":11023},"children":[],"decl_id":null,"docs":"assign the xdg_popup surface role","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11029},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8968116,"byte_end":8968135,"line_start":1087,"line_end":1087,"column_start":12,"column_end":31},"name":"set_window_geometry","qualname":"::stable::xdg_shell::generated::client::xdg_surface::RequestsTrait::set_window_geometry","value":"pub fn set_window_geometry(&Self, i32, i32, i32, i32) -> ()","parent":{"krate":0,"index":11023},"children":[],"decl_id":null,"docs":"set the new window geometry","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11030},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8969165,"byte_end":8969178,"line_start":1089,"line_end":1089,"column_start":12,"column_end":25},"name":"ack_configure","qualname":"::stable::xdg_shell::generated::client::xdg_surface::RequestsTrait::ack_configure","value":"pub fn ack_configure(&Self, u32) -> ()","parent":{"krate":0,"index":11023},"children":[],"decl_id":null,"docs":"ack a configure event","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11040},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8971051,"byte_end":8971068,"line_start":1141,"line_end":1141,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_surface::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11041},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8971164,"byte_end":8971186,"line_start":1143,"line_end":1143,"column_start":15,"column_end":37},"name":"REQ_GET_TOPLEVEL_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_surface::REQ_GET_TOPLEVEL_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11042},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8971282,"byte_end":8971301,"line_start":1145,"line_end":1145,"column_start":15,"column_end":34},"name":"REQ_GET_POPUP_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_surface::REQ_GET_POPUP_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11043},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8971397,"byte_end":8971426,"line_start":1147,"line_end":1147,"column_start":15,"column_end":44},"name":"REQ_SET_WINDOW_GEOMETRY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_surface::REQ_SET_WINDOW_GEOMETRY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11044},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8971522,"byte_end":8971545,"line_start":1149,"line_end":1149,"column_start":15,"column_end":38},"name":"REQ_ACK_CONFIGURE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_surface::REQ_ACK_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11045},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8971639,"byte_end":8971658,"line_start":1151,"line_end":1151,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_surface::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11046},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972377,"byte_end":8972389,"line_start":1154,"line_end":1154,"column_start":9,"column_end":21},"name":"xdg_toplevel","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","parent":null,"children":[{"krate":0,"index":11047},{"krate":0,"index":11048},{"krate":0,"index":11049},{"krate":0,"index":11050},{"krate":0,"index":11051},{"krate":0,"index":11052},{"krate":0,"index":11053},{"krate":0,"index":15599},{"krate":0,"index":11054},{"krate":0,"index":11055},{"krate":0,"index":11056},{"krate":0,"index":11057},{"krate":0,"index":11058},{"krate":0,"index":11059},{"krate":0,"index":11060},{"krate":0,"index":11061},{"krate":0,"index":11062},{"krate":0,"index":11063},{"krate":0,"index":11539},{"krate":0,"index":11574},{"krate":0,"index":11572},{"krate":0,"index":11570},{"krate":0,"index":11567},{"krate":0,"index":11568},{"krate":0,"index":11064},{"krate":0,"index":11575},{"krate":0,"index":11607},{"krate":0,"index":11605},{"krate":0,"index":11603},{"krate":0,"index":11600},{"krate":0,"index":11601},{"krate":0,"index":11067},{"krate":0,"index":11070},{"krate":0,"index":11107},{"krate":0,"index":11136},{"krate":0,"index":11143},{"krate":0,"index":11156},{"krate":0,"index":11158},{"krate":0,"index":11164},{"krate":0,"index":11179},{"krate":0,"index":11196},{"krate":0,"index":11197},{"krate":0,"index":11198},{"krate":0,"index":11199},{"krate":0,"index":11200},{"krate":0,"index":11201},{"krate":0,"index":11202},{"krate":0,"index":11203},{"krate":0,"index":11204},{"krate":0,"index":11205},{"krate":0,"index":11206},{"krate":0,"index":11207},{"krate":0,"index":11208},{"krate":0,"index":11209},{"krate":0,"index":11210},{"krate":0,"index":11211}],"decl_id":null,"docs":"toplevel surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11540},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972897,"byte_end":8972901,"line_start":1165,"line_end":1165,"column_start":9,"column_end":13},"name":"None","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::None","value":"ResizeEdge::None","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11543},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972915,"byte_end":8972918,"line_start":1166,"line_end":1166,"column_start":9,"column_end":12},"name":"Top","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::Top","value":"ResizeEdge::Top","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11546},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972932,"byte_end":8972938,"line_start":1167,"line_end":1167,"column_start":9,"column_end":15},"name":"Bottom","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::Bottom","value":"ResizeEdge::Bottom","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11549},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972952,"byte_end":8972956,"line_start":1168,"line_end":1168,"column_start":9,"column_end":13},"name":"Left","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::Left","value":"ResizeEdge::Left","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11552},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972970,"byte_end":8972977,"line_start":1169,"line_end":1169,"column_start":9,"column_end":16},"name":"TopLeft","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::TopLeft","value":"ResizeEdge::TopLeft","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11555},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972991,"byte_end":8973001,"line_start":1170,"line_end":1170,"column_start":9,"column_end":19},"name":"BottomLeft","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::BottomLeft","value":"ResizeEdge::BottomLeft","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11558},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973015,"byte_end":8973020,"line_start":1171,"line_end":1171,"column_start":9,"column_end":14},"name":"Right","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::Right","value":"ResizeEdge::Right","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11561},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973034,"byte_end":8973042,"line_start":1172,"line_end":1172,"column_start":9,"column_end":17},"name":"TopRight","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::TopRight","value":"ResizeEdge::TopRight","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11564},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973056,"byte_end":8973067,"line_start":1173,"line_end":1173,"column_start":9,"column_end":20},"name":"BottomRight","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge::BottomRight","value":"ResizeEdge::BottomRight","parent":{"krate":0,"index":11539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11539},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972876,"byte_end":8972886,"line_start":1164,"line_end":1164,"column_start":14,"column_end":24},"name":"ResizeEdge","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::ResizeEdge","value":"pub enum ResizeEdge {\n    None = ,\n    Top = ,\n    Bottom = ,\n    Left = ,\n    TopLeft = ,\n    BottomLeft = ,\n    Right = ,\n    TopRight = ,\n    BottomRight = ,\n}","parent":null,"children":[{"krate":0,"index":11540},{"krate":0,"index":11543},{"krate":0,"index":11546},{"krate":0,"index":11549},{"krate":0,"index":11552},{"krate":0,"index":11555},{"krate":0,"index":11558},{"krate":0,"index":11561},{"krate":0,"index":11564}],"decl_id":null,"docs":"edge values for resizing","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8972805,"byte_end":8972817,"line_start":1162,"line_end":1162,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":11065},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973117,"byte_end":8973125,"line_start":1176,"line_end":1176,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ResizeEdge>::from_raw","value":"pub fn from_raw(u32) -> Option<ResizeEdge>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11066},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973682,"byte_end":8973688,"line_start":1190,"line_end":1190,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ResizeEdge>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11576},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8974466,"byte_end":8974475,"line_start":1199,"line_end":1199,"column_start":9,"column_end":18},"name":"Maximized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::Maximized","value":"State::Maximized","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is maximized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11579},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8974828,"byte_end":8974838,"line_start":1201,"line_end":1201,"column_start":9,"column_end":19},"name":"Fullscreen","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::Fullscreen","value":"State::Fullscreen","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is fullscreen","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11582},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8975132,"byte_end":8975140,"line_start":1203,"line_end":1203,"column_start":9,"column_end":17},"name":"Resizing","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::Resizing","value":"State::Resizing","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is being resized","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11585},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8975360,"byte_end":8975369,"line_start":1205,"line_end":1205,"column_start":9,"column_end":18},"name":"Activated","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::Activated","value":"State::Activated","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is now activated","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11588},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8975552,"byte_end":8975561,"line_start":1207,"line_end":1207,"column_start":9,"column_end":18},"name":"TiledLeft","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::TiledLeft","value":"State::TiledLeft","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is tiled","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11591},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8975745,"byte_end":8975755,"line_start":1209,"line_end":1209,"column_start":9,"column_end":19},"name":"TiledRight","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::TiledRight","value":"State::TiledRight","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is tiled","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11594},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8975937,"byte_end":8975945,"line_start":1211,"line_end":1211,"column_start":9,"column_end":17},"name":"TiledTop","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::TiledTop","value":"State::TiledTop","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is tiled","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11597},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8976130,"byte_end":8976141,"line_start":1213,"line_end":1213,"column_start":9,"column_end":20},"name":"TiledBottom","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State::TiledBottom","value":"State::TiledBottom","parent":{"krate":0,"index":11575},"children":[],"decl_id":null,"docs":"the surface is tiled","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11575},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8974199,"byte_end":8974204,"line_start":1197,"line_end":1197,"column_start":14,"column_end":19},"name":"State","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::State","value":"pub enum State {\n\n    #[doc =\n      \"the surface is maximized\\n\\nThe surface is maximized. The window geometry specified in the configure\\nevent must be obeyed by the client.\\n\\nThe client should draw without shadow or other\\ndecoration outside of the window geometry.\"]\n    Maximized = ,\n\n    #[doc =\n      \"the surface is fullscreen\\n\\nThe surface is fullscreen. The window geometry specified in the\\nconfigure event is a maximum; the client cannot resize beyond it. For\\na surface to cover the whole fullscreened area, the geometry\\ndimensions must be obeyed by the client. For more details, see\\nxdg_toplevel.set_fullscreen.\"]\n    Fullscreen = ,\n\n    #[doc =\n      \"the surface is being resized\\n\\nThe surface is being resized. The window geometry specified in the\\nconfigure event is a maximum; the client cannot resize beyond it.\\nClients that have aspect ratio or cell sizing configuration can use\\na smaller size, however.\"]\n    Resizing = ,\n\n    #[doc =\n      \"the surface is now activated\\n\\nClient window decorations should be painted as if the window is\\nactive. Do not assume this means that the window actually has\\nkeyboard or pointer focus.\"]\n    Activated = ,\n\n    #[doc =\n      \"the surface is tiled\\n\\nThe window is currently in a tiled layout and the left edge is\\nconsidered to be adjacent to another part of the tiling grid.\"]\n    TiledLeft = ,\n\n    #[doc =\n      \"the surface is tiled\\n\\nThe window is currently in a tiled layout and the right edge is\\nconsidered to be adjacent to another part of the tiling grid.\"]\n    TiledRight = ,\n\n    #[doc =\n      \"the surface is tiled\\n\\nThe window is currently in a tiled layout and the top edge is\\nconsidered to be adjacent to another part of the tiling grid.\"]\n    TiledTop = ,\n\n    #[doc =\n      \"the surface is tiled\\n\\nThe window is currently in a tiled layout and the bottom edge is\\nconsidered to be adjacent to another part of the tiling grid.\"]\n    TiledBottom = ,\n}","parent":null,"children":[{"krate":0,"index":11576},{"krate":0,"index":11579},{"krate":0,"index":11582},{"krate":0,"index":11585},{"krate":0,"index":11588},{"krate":0,"index":11591},{"krate":0,"index":11594},{"krate":0,"index":11597}],"decl_id":null,"docs":"types of state on the surface","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8974128,"byte_end":8974140,"line_start":1195,"line_end":1195,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":11068},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8976185,"byte_end":8976193,"line_start":1216,"line_end":1216,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<State>::from_raw","value":"pub fn from_raw(u32) -> Option<State>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11069},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8976679,"byte_end":8976685,"line_start":1229,"line_end":1229,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<State>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11071},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8977020,"byte_end":8977027,"line_start":1235,"line_end":1235,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"destroy the xdg_toplevel","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11073},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8977805,"byte_end":8977814,"line_start":1237,"line_end":1237,"column_start":9,"column_end":18},"name":"SetParent","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetParent","value":"Request::SetParent { parent }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set the parent of this surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11075},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8978162,"byte_end":8978170,"line_start":1241,"line_end":1241,"column_start":9,"column_end":17},"name":"SetTitle","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetTitle","value":"Request::SetTitle { title }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set surface title","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11077},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8979109,"byte_end":8979117,"line_start":1243,"line_end":1243,"column_start":9,"column_end":17},"name":"SetAppId","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetAppId","value":"Request::SetAppId { app_id }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set application ID","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11079},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8979738,"byte_end":8979752,"line_start":1245,"line_end":1245,"column_start":9,"column_end":23},"name":"ShowWindowMenu","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::ShowWindowMenu","value":"Request::ShowWindowMenu { seat, serial, x, y }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"show the window menu","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11084},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8980691,"byte_end":8980695,"line_start":1252,"line_end":1252,"column_start":9,"column_end":13},"name":"Move","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::Move","value":"Request::Move { seat, serial }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"start an interactive move","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11087},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8982299,"byte_end":8982305,"line_start":1257,"line_end":1257,"column_start":9,"column_end":15},"name":"Resize","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::Resize","value":"Request::Resize { seat, serial, edges }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"start an interactive resize","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11091},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8983792,"byte_end":8983802,"line_start":1263,"line_end":1263,"column_start":9,"column_end":19},"name":"SetMaxSize","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetMaxSize","value":"Request::SetMaxSize { width, height }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set the maximum size","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11094},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8985206,"byte_end":8985216,"line_start":1265,"line_end":1265,"column_start":9,"column_end":19},"name":"SetMinSize","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetMinSize","value":"Request::SetMinSize { width, height }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set the minimum size","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11097},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8986165,"byte_end":8986177,"line_start":1267,"line_end":1267,"column_start":9,"column_end":21},"name":"SetMaximized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetMaximized","value":"Request::SetMaximized","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"maximize the window","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11099},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8987257,"byte_end":8987271,"line_start":1269,"line_end":1269,"column_start":9,"column_end":23},"name":"UnsetMaximized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::UnsetMaximized","value":"Request::UnsetMaximized","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"unmaximize the window","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11101},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8988521,"byte_end":8988534,"line_start":1271,"line_end":1271,"column_start":9,"column_end":22},"name":"SetFullscreen","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetFullscreen","value":"Request::SetFullscreen { output }","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set the window as fullscreen on an output","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11103},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8989409,"byte_end":8989424,"line_start":1275,"line_end":1275,"column_start":9,"column_end":24},"name":"UnsetFullscreen","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::UnsetFullscreen","value":"Request::UnsetFullscreen","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"unset the window as fullscreen","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11105},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8989883,"byte_end":8989895,"line_start":1277,"line_end":1277,"column_start":9,"column_end":21},"name":"SetMinimized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request::SetMinimized","value":"Request::SetMinimized","parent":{"krate":0,"index":11070},"children":[],"decl_id":null,"docs":"set the window as minimized","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11070},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8976756,"byte_end":8976763,"line_start":1233,"line_end":1233,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Request","value":"pub enum Request {\n\n    #[doc =\n      \"destroy the xdg_toplevel\\n\\nThis request destroys the role surface and unmaps the surface;\\nsee \\\"Unmapping\\\" behavior in interface section for details.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the parent of this surface\\n\\nSet the \\\"parent\\\" of this surface. This surface should be stacked\\nabove the parent surface and all other ancestor surfaces.\\n\\nParent windows should be set on dialogs, toolboxes, or other\\n\\\"auxiliary\\\" surfaces, so that the parent is raised when the dialog\\nis raised.\\n\\nSetting a null parent for a child window removes any parent-child\\nrelationship for the child. Setting a null parent for a window which\\ncurrently has no parent is a no-op.\\n\\nIf the parent is unmapped then its children are managed as\\nthough the parent of the now-unmapped parent has become the\\nparent of this surface. If no parent exists for the now-unmapped\\nparent then the children are managed as though they have no\\nparent surface.\"]\n    SetParent {\n        parent: Option<Proxy<super::xdg_toplevel::XdgToplevel>>,\n    },\n\n    #[doc =\n      \"set surface title\\n\\nSet a short title for the surface.\\n\\nThis string may be used to identify the surface in a task bar,\\nwindow list, or other user interface elements provided by the\\ncompositor.\\n\\nThe string must be encoded in UTF-8.\"]\n    SetTitle {\n        title: String,\n    },\n\n    #[doc =\n      \"set application ID\\n\\nSet an application identifier for the surface.\\n\\nThe app ID identifies the general class of applications to which\\nthe surface belongs. The compositor can use this to group multiple\\nsurfaces together, or to determine how to launch a new application.\\n\\nFor D-Bus activatable applications, the app ID is used as the D-Bus\\nservice name.\\n\\nThe compositor shell will try to group application surfaces together\\nby their app ID. As a best practice, it is suggested to select app\\nID's that match the basename of the application's .desktop file.\\nFor example, \\\"org.freedesktop.FooViewer\\\" where the .desktop file is\\n\\\"org.freedesktop.FooViewer.desktop\\\".\\n\\nSee the desktop-entry specification [0] for more details on\\napplication identifiers and how they relate to well-known D-Bus\\nnames and .desktop files.\\n\\n[0] http://standards.freedesktop.org/desktop-entry-spec/\"]\n    SetAppId {\n        app_id: String,\n    },\n\n    #[doc =\n      \"show the window menu\\n\\nClients implementing client-side decorations might want to show\\na context menu when right-clicking on the decorations, giving the\\nuser a menu that they can use to maximize or minimize the window.\\n\\nThis request asks the compositor to pop up such a window menu at\\nthe given position, relative to the local surface coordinates of\\nthe parent surface. There are no guarantees as to what menu items\\nthe window menu contains.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event.\"]\n    ShowWindowMenu {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        x: i32,\n        y: i32,\n    },\n\n    #[doc =\n      \"start an interactive move\\n\\nStart an interactive, user-driven move of the surface.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event. The passed\\nserial is used to determine the type of interactive move (touch,\\npointer, etc).\\n\\nThe server may ignore move requests depending on the state of\\nthe surface (e.g. fullscreen or maximized), or if the passed serial\\nis no longer valid.\\n\\nIf triggered, the surface will lose the focus of the device\\n(wl_pointer, wl_touch, etc) used for the move. It is up to the\\ncompositor to visually indicate that the move is taking place, such as\\nupdating a pointer cursor, during the move. There is no guarantee\\nthat the device focus will return when the move is completed.\"]\n    Move {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n    },\n\n    #[doc =\n      \"start an interactive resize\\n\\nStart a user-driven, interactive resize of the surface.\\n\\nThis request must be used in response to some sort of user action\\nlike a button press, key press, or touch down event. The passed\\nserial is used to determine the type of interactive resize (touch,\\npointer, etc).\\n\\nThe server may ignore resize requests depending on the state of\\nthe surface (e.g. fullscreen or maximized).\\n\\nIf triggered, the client will receive configure events with the\\n\\\"resize\\\" state enum value and the expected sizes. See the \\\"resize\\\"\\nenum value for more details about what is required. The client\\nmust also acknowledge configure events using \\\"ack_configure\\\". After\\nthe resize is completed, the client will receive another \\\"configure\\\"\\nevent without the resize state.\\n\\nIf triggered, the surface also will lose the focus of the device\\n(wl_pointer, wl_touch, etc) used for the resize. It is up to the\\ncompositor to visually indicate that the resize is taking place,\\nsuch as updating a pointer cursor, during the resize. There is no\\nguarantee that the device focus will return when the resize is\\ncompleted.\\n\\nThe edges parameter specifies how the surface should be resized,\\nand is one of the values of the resize_edge enum. The compositor\\nmay use this information to update the surface position for\\nexample when dragging the top left corner. The compositor may also\\nuse this information to adapt its behavior, e.g. choose an\\nappropriate cursor image.\"]\n    Resize {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n        edges: u32,\n    },\n\n    #[doc =\n      \"set the maximum size\\n\\nSet a maximum size for the window.\\n\\nThe client can specify a maximum size so that the compositor does\\nnot try to configure the window beyond this size.\\n\\nThe width and height arguments are in window geometry coordinates.\\nSee xdg_surface.set_window_geometry.\\n\\nValues set in this way are double-buffered. They will get applied\\non the next commit.\\n\\nThe compositor can use this information to allow or disallow\\ndifferent states like maximize or fullscreen and draw accurate\\nanimations.\\n\\nSimilarly, a tiling window manager may use this information to\\nplace and resize client windows in a more effective way.\\n\\nThe client should not rely on the compositor to obey the maximum\\nsize. The compositor may decide to ignore the values set by the\\nclient and request a larger size.\\n\\nIf never set, or a value of zero in the request, means that the\\nclient has no expected maximum size in the given dimension.\\nAs a result, a client wishing to reset the maximum size\\nto an unspecified state can use zero for width and height in the\\nrequest.\\n\\nRequesting a maximum size to be smaller than the minimum size of\\na surface is illegal and will result in a protocol error.\\n\\nThe width and height must be greater than or equal to zero. Using\\nstrictly negative values for width and height will result in a\\nprotocol error.\"]\n    SetMaxSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"set the minimum size\\n\\nSet a minimum size for the window.\\n\\nThe client can specify a minimum size so that the compositor does\\nnot try to configure the window below this size.\\n\\nThe width and height arguments are in window geometry coordinates.\\nSee xdg_surface.set_window_geometry.\\n\\nValues set in this way are double-buffered. They will get applied\\non the next commit.\\n\\nThe compositor can use this information to allow or disallow\\ndifferent states like maximize or fullscreen and draw accurate\\nanimations.\\n\\nSimilarly, a tiling window manager may use this information to\\nplace and resize client windows in a more effective way.\\n\\nThe client should not rely on the compositor to obey the minimum\\nsize. The compositor may decide to ignore the values set by the\\nclient and request a smaller size.\\n\\nIf never set, or a value of zero in the request, means that the\\nclient has no expected minimum size in the given dimension.\\nAs a result, a client wishing to reset the minimum size\\nto an unspecified state can use zero for width and height in the\\nrequest.\\n\\nRequesting a minimum size to be larger than the maximum size of\\na surface is illegal and will result in a protocol error.\\n\\nThe width and height must be greater than or equal to zero. Using\\nstrictly negative values for width and height will result in a\\nprotocol error.\"]\n    SetMinSize {\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"maximize the window\\n\\nMaximize the surface.\\n\\nAfter requesting that the surface should be maximized, the compositor\\nwill respond by emitting a configure event. Whether this configure\\nactually sets the window maximized is subject to compositor policies.\\nThe client must then update its content, drawing in the configured\\nstate. The client must also acknowledge the configure when committing\\nthe new content (see ack_configure).\\n\\nIt is up to the compositor to decide how and where to maximize the\\nsurface, for example which output and what region of the screen should\\nbe used.\\n\\nIf the surface was already maximized, the compositor will still emit\\na configure event with the \\\"maximized\\\" state.\\n\\nIf the surface is in a fullscreen state, this request has no direct\\neffect. It may alter the state the surface is returned to when\\nunmaximized unless overridden by the compositor.\"]\n    SetMaximized,\n\n    #[doc =\n      \"unmaximize the window\\n\\nUnmaximize the surface.\\n\\nAfter requesting that the surface should be unmaximized, the compositor\\nwill respond by emitting a configure event. Whether this actually\\nun-maximizes the window is subject to compositor policies.\\nIf available and applicable, the compositor will include the window\\ngeometry dimensions the window had prior to being maximized in the\\nconfigure event. The client must then update its content, drawing it in\\nthe configured state. The client must also acknowledge the configure\\nwhen committing the new content (see ack_configure).\\n\\nIt is up to the compositor to position the surface after it was\\nunmaximized; usually the position the surface had before maximizing, if\\napplicable.\\n\\nIf the surface was already not maximized, the compositor will still\\nemit a configure event without the \\\"maximized\\\" state.\\n\\nIf the surface is in a fullscreen state, this request has no direct\\neffect. It may alter the state the surface is returned to when\\nunmaximized unless overridden by the compositor.\"]\n    UnsetMaximized,\n\n    #[doc =\n      \"set the window as fullscreen on an output\\n\\nMake the surface fullscreen.\\n\\nAfter requesting that the surface should be fullscreened, the\\ncompositor will respond by emitting a configure event. Whether the\\nclient is actually put into a fullscreen state is subject to compositor\\npolicies. The client must also acknowledge the configure when\\ncommitting the new content (see ack_configure).\\n\\nThe output passed by the request indicates the client's preference as\\nto which display it should be set fullscreen on. If this value is NULL,\\nit's up to the compositor to choose which display will be used to map\\nthis surface.\\n\\nIf the surface doesn't cover the whole output, the compositor will\\nposition the surface in the center of the output and compensate with\\nwith border fill covering the rest of the output. The content of the\\nborder fill is undefined, but should be assumed to be in some way that\\nattempts to blend into the surrounding area (e.g. solid black).\\n\\nIf the fullscreened surface is not opaque, the compositor must make\\nsure that other screen content not part of the same surface tree (made\\nup of subsurfaces, popups or similarly coupled surfaces) are not\\nvisible below the fullscreened surface.\"]\n    SetFullscreen {\n        output: Option<Proxy<super::wl_output::WlOutput>>,\n    },\n\n    #[doc =\n      \"unset the window as fullscreen\\n\\nMake the surface no longer fullscreen.\\n\\nAfter requesting that the surface should be unfullscreened, the\\ncompositor will respond by emitting a configure event.\\nWhether this actually removes the fullscreen state of the client is\\nsubject to compositor policies.\\n\\nMaking a surface unfullscreen sets states for the surface based on the following:\\n* the state(s) it may have had before becoming fullscreen\\n* any state(s) decided by the compositor\\n* any state(s) requested by the client while the surface was fullscreen\\n\\nThe compositor may include the previous window geometry dimensions in\\nthe configure event, if applicable.\\n\\nThe client must also acknowledge the configure when committing the new\\ncontent (see ack_configure).\"]\n    UnsetFullscreen,\n\n    #[doc =\n      \"set the window as minimized\\n\\nRequest that the compositor minimize your surface. There is no\\nway to know if the surface is currently minimized, nor is there\\nany way to unset minimization on this surface.\\n\\nIf you are looking to throttle redrawing when minimized, please\\ninstead use the wl_surface.frame event for this, as this will\\nalso work with live previews on windows in Alt-Tab, Expose or\\nsimilar compositor features.\"]\n    SetMinimized,\n}","parent":null,"children":[{"krate":0,"index":11071},{"krate":0,"index":11073},{"krate":0,"index":11075},{"krate":0,"index":11077},{"krate":0,"index":11079},{"krate":0,"index":11084},{"krate":0,"index":11087},{"krate":0,"index":11091},{"krate":0,"index":11094},{"krate":0,"index":11097},{"krate":0,"index":11099},{"krate":0,"index":11101},{"krate":0,"index":11103},{"krate":0,"index":11105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11137},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9003191,"byte_end":9003200,"line_start":1589,"line_end":1589,"column_start":9,"column_end":18},"name":"Configure","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Event::Configure","value":"Event::Configure { width, height, states }","parent":{"krate":0,"index":11136},"children":[],"decl_id":null,"docs":"suggest a surface change","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11141},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9003736,"byte_end":9003741,"line_start":1595,"line_end":1595,"column_start":9,"column_end":14},"name":"Close","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Event::Close","value":"Event::Close","parent":{"krate":0,"index":11136},"children":[],"decl_id":null,"docs":"surface wants to be closed","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11136},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9002243,"byte_end":9002248,"line_start":1587,"line_end":1587,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::Event","value":"pub enum Event {\n\n    #[doc =\n      \"suggest a surface change\\n\\nThis configure event asks the client to resize its toplevel surface or\\nto change its state. The configured state should not be applied\\nimmediately. See xdg_surface.configure for details.\\n\\nThe width and height arguments specify a hint to the window\\nabout how its surface should be resized in window geometry\\ncoordinates. See set_window_geometry.\\n\\nIf the width or height arguments are zero, it means the client\\nshould decide its own window dimension. This may happen when the\\ncompositor needs to configure the state of the surface but doesn't\\nhave any information about any previous or expected dimension.\\n\\nThe states listed in the event specify how the width/height\\narguments should be interpreted, and possibly how it should be\\ndrawn.\\n\\nClients must send an ack_configure in response to this event. See\\nxdg_surface.configure and xdg_surface.ack_configure for details.\"]\n    Configure {\n        width: i32,\n        height: i32,\n        states: Vec<u8>,\n    },\n\n    #[doc =\n      \"surface wants to be closed\\n\\nThe close event is sent by the compositor when the user\\nwants the surface to be closed. This should be equivalent to\\nthe user clicking the close button in client-side decorations,\\nif your application has any.\\n\\nThis is only a request that the user intends to close the\\nwindow. The client may choose to ignore this request, or show\\na dialog to ask the user to save their data, etc.\"]\n    Close,\n}","parent":null,"children":[{"krate":0,"index":11137},{"krate":0,"index":11141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11156},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9007247,"byte_end":9007258,"line_start":1699,"line_end":1699,"column_start":16,"column_end":27},"name":"XdgToplevel","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::XdgToplevel","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11164},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9007595,"byte_end":9007608,"line_start":1709,"line_end":1709,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":11165},{"krate":0,"index":11166},{"krate":0,"index":11167},{"krate":0,"index":11168},{"krate":0,"index":11169},{"krate":0,"index":11170},{"krate":0,"index":11171},{"krate":0,"index":11172},{"krate":0,"index":11173},{"krate":0,"index":11174},{"krate":0,"index":11175},{"krate":0,"index":11176},{"krate":0,"index":11177},{"krate":0,"index":11178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11165},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9007898,"byte_end":9007905,"line_start":1711,"line_end":1711,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"destroy the xdg_toplevel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11166},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9008699,"byte_end":9008709,"line_start":1713,"line_end":1713,"column_start":12,"column_end":22},"name":"set_parent","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_parent","value":"pub fn set_parent(&Self, Option<&Proxy<super::xdg_toplevel::XdgToplevel>>)\n-> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set the parent of this surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11167},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9009050,"byte_end":9009059,"line_start":1715,"line_end":1715,"column_start":12,"column_end":21},"name":"set_title","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_title","value":"pub fn set_title(&Self, String) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set surface title","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11168},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9010011,"byte_end":9010021,"line_start":1717,"line_end":1717,"column_start":12,"column_end":22},"name":"set_app_id","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_app_id","value":"pub fn set_app_id(&Self, String) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set application ID","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11169},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9010655,"byte_end":9010671,"line_start":1719,"line_end":1719,"column_start":12,"column_end":28},"name":"show_window_menu","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::show_window_menu","value":"pub fn show_window_menu(&Self, &Proxy<super::wl_seat::WlSeat>, u32, i32, i32)\n-> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"show the window menu","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11170},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9011638,"byte_end":9011643,"line_start":1727,"line_end":1727,"column_start":12,"column_end":17},"name":"_move","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::_move","value":"pub fn _move(&Self, &Proxy<super::wl_seat::WlSeat>, u32) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"start an interactive move","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11171},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9013228,"byte_end":9013234,"line_start":1729,"line_end":1729,"column_start":12,"column_end":18},"name":"resize","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::resize","value":"pub fn resize(&Self, &Proxy<super::wl_seat::WlSeat>, u32, u32) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"start an interactive resize","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11172},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9014690,"byte_end":9014702,"line_start":1731,"line_end":1731,"column_start":12,"column_end":24},"name":"set_max_size","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_max_size","value":"pub fn set_max_size(&Self, i32, i32) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set the maximum size","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11173},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9016119,"byte_end":9016131,"line_start":1733,"line_end":1733,"column_start":12,"column_end":24},"name":"set_min_size","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_min_size","value":"pub fn set_min_size(&Self, i32, i32) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set the minimum size","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11174},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9017093,"byte_end":9017106,"line_start":1735,"line_end":1735,"column_start":12,"column_end":25},"name":"set_maximized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_maximized","value":"pub fn set_maximized(&Self) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"maximize the window","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11175},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9018202,"byte_end":9018217,"line_start":1737,"line_end":1737,"column_start":12,"column_end":27},"name":"unset_maximized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::unset_maximized","value":"pub fn unset_maximized(&Self) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"unmaximize the window","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11176},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9019483,"byte_end":9019497,"line_start":1739,"line_end":1739,"column_start":12,"column_end":26},"name":"set_fullscreen","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_fullscreen","value":"pub fn set_fullscreen(&Self, Option<&Proxy<super::wl_output::WlOutput>>) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set the window as fullscreen on an output","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11177},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9020365,"byte_end":9020381,"line_start":1741,"line_end":1741,"column_start":12,"column_end":28},"name":"unset_fullscreen","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::unset_fullscreen","value":"pub fn unset_fullscreen(&Self) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"unset the window as fullscreen","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11178},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9020856,"byte_end":9020869,"line_start":1743,"line_end":1743,"column_start":12,"column_end":25},"name":"set_minimized","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::RequestsTrait::set_minimized","value":"pub fn set_minimized(&Self) -> ()","parent":{"krate":0,"index":11164},"children":[],"decl_id":null,"docs":"set the window as minimized","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11196},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9023793,"byte_end":9023810,"line_start":1832,"line_end":1832,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11197},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9023906,"byte_end":9023926,"line_start":1834,"line_end":1834,"column_start":15,"column_end":35},"name":"REQ_SET_PARENT_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_PARENT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11198},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024022,"byte_end":9024041,"line_start":1836,"line_end":1836,"column_start":15,"column_end":34},"name":"REQ_SET_TITLE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_TITLE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11199},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024137,"byte_end":9024157,"line_start":1838,"line_end":1838,"column_start":15,"column_end":35},"name":"REQ_SET_APP_ID_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_APP_ID_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11200},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024253,"byte_end":9024279,"line_start":1840,"line_end":1840,"column_start":15,"column_end":41},"name":"REQ_SHOW_WINDOW_MENU_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SHOW_WINDOW_MENU_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11201},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024375,"byte_end":9024389,"line_start":1842,"line_end":1842,"column_start":15,"column_end":29},"name":"REQ_MOVE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_MOVE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11202},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024485,"byte_end":9024501,"line_start":1844,"line_end":1844,"column_start":15,"column_end":31},"name":"REQ_RESIZE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_RESIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11203},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024597,"byte_end":9024619,"line_start":1846,"line_end":1846,"column_start":15,"column_end":37},"name":"REQ_SET_MAX_SIZE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_MAX_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11204},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024715,"byte_end":9024737,"line_start":1848,"line_end":1848,"column_start":15,"column_end":37},"name":"REQ_SET_MIN_SIZE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_MIN_SIZE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11205},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024833,"byte_end":9024856,"line_start":1850,"line_end":1850,"column_start":15,"column_end":38},"name":"REQ_SET_MAXIMIZED_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11206},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9024952,"byte_end":9024977,"line_start":1852,"line_end":1852,"column_start":15,"column_end":40},"name":"REQ_UNSET_MAXIMIZED_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_UNSET_MAXIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11207},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9025073,"byte_end":9025097,"line_start":1854,"line_end":1854,"column_start":15,"column_end":39},"name":"REQ_SET_FULLSCREEN_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_FULLSCREEN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11208},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9025193,"byte_end":9025219,"line_start":1856,"line_end":1856,"column_start":15,"column_end":41},"name":"REQ_UNSET_FULLSCREEN_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_UNSET_FULLSCREEN_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11209},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9025315,"byte_end":9025338,"line_start":1858,"line_end":1858,"column_start":15,"column_end":38},"name":"REQ_SET_MINIMIZED_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::REQ_SET_MINIMIZED_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11210},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9025432,"byte_end":9025451,"line_start":1860,"line_end":1860,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11211},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9025545,"byte_end":9025560,"line_start":1862,"line_end":1862,"column_start":15,"column_end":30},"name":"EVT_CLOSE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_toplevel::EVT_CLOSE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11212},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9026956,"byte_end":9026965,"line_start":1865,"line_end":1865,"column_start":9,"column_end":18},"name":"xdg_popup","qualname":"::stable::xdg_shell::generated::client::xdg_popup","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","parent":null,"children":[{"krate":0,"index":11213},{"krate":0,"index":11214},{"krate":0,"index":11215},{"krate":0,"index":11216},{"krate":0,"index":11217},{"krate":0,"index":11218},{"krate":0,"index":11219},{"krate":0,"index":15627},{"krate":0,"index":11220},{"krate":0,"index":11221},{"krate":0,"index":11222},{"krate":0,"index":11223},{"krate":0,"index":11224},{"krate":0,"index":11225},{"krate":0,"index":11226},{"krate":0,"index":11227},{"krate":0,"index":11228},{"krate":0,"index":11229},{"krate":0,"index":11610},{"krate":0,"index":11621},{"krate":0,"index":11619},{"krate":0,"index":11617},{"krate":0,"index":11614},{"krate":0,"index":11615},{"krate":0,"index":11230},{"krate":0,"index":11233},{"krate":0,"index":11239},{"krate":0,"index":11254},{"krate":0,"index":11262},{"krate":0,"index":11275},{"krate":0,"index":11277},{"krate":0,"index":11283},{"krate":0,"index":11286},{"krate":0,"index":11289},{"krate":0,"index":11290},{"krate":0,"index":11291},{"krate":0,"index":11292}],"decl_id":null,"docs":"short-lived, popup surfaces for menus","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11611},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027378,"byte_end":9027389,"line_start":1876,"line_end":1876,"column_start":9,"column_end":20},"name":"InvalidGrab","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Error::InvalidGrab","value":"Error::InvalidGrab","parent":{"krate":0,"index":11610},"children":[],"decl_id":null,"docs":"tried to grab after being mapped\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11610},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027310,"byte_end":9027315,"line_start":1874,"line_end":1874,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Error","value":"pub enum Error {\n\n    #[doc = \"tried to grab after being mapped\"]\n    InvalidGrab = ,\n}","parent":null,"children":[{"krate":0,"index":11611}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027239,"byte_end":9027251,"line_start":1872,"line_end":1872,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":11231},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027433,"byte_end":9027441,"line_start":1879,"line_end":1879,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11232},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027612,"byte_end":9027618,"line_start":1885,"line_end":1885,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11234},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9028034,"byte_end":9028041,"line_start":1891,"line_end":1891,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":11233},"children":[],"decl_id":null,"docs":"remove xdg_popup interface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11236},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9030078,"byte_end":9030082,"line_start":1893,"line_end":1893,"column_start":9,"column_end":13},"name":"Grab","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Request::Grab","value":"Request::Grab { seat, serial }","parent":{"krate":0,"index":11233},"children":[],"decl_id":null,"docs":"make the popup take an explicit grab","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11233},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027689,"byte_end":9027696,"line_start":1889,"line_end":1889,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Request","value":"pub enum Request {\n\n    #[doc =\n      \"remove xdg_popup interface\\n\\nThis destroys the popup. Explicitly destroying the xdg_popup\\nobject will also dismiss the popup, and unmap the surface.\\n\\nIf this xdg_popup is not the \\\"topmost\\\" popup, a protocol error\\nwill be sent.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"make the popup take an explicit grab\\n\\nThis request makes the created popup take an explicit grab. An explicit\\ngrab will be dismissed when the user dismisses the popup, or when the\\nclient destroys the xdg_popup. This can be done by the user clicking\\noutside the surface, using the keyboard, or even locking the screen\\nthrough closing the lid or a timeout.\\n\\nIf the compositor denies the grab, the popup will be immediately\\ndismissed.\\n\\nThis request must be used in response to some sort of user action like a\\nbutton press, key press, or touch down event. The serial number of the\\nevent should be passed as 'serial'.\\n\\nThe parent of a grabbing popup must either be an xdg_toplevel surface or\\nanother xdg_popup with an explicit grab. If the parent is another\\nxdg_popup it means that the popups are nested, with this popup now being\\nthe topmost popup.\\n\\nNested popups must be destroyed in the reverse order they were created\\nin, e.g. the only popup you are allowed to destroy at all times is the\\ntopmost one.\\n\\nWhen compositors choose to dismiss a popup, they may dismiss every\\nnested grabbing popup as well. When a compositor dismisses popups, it\\nwill follow the same dismissing order as required from the client.\\n\\nThe parent of a grabbing popup must either be another xdg_popup with an\\nactive explicit grab, or an xdg_popup or xdg_toplevel, if there are no\\nexplicit grabs already taken.\\n\\nIf the topmost grabbing popup is destroyed, the grab will be returned to\\nthe parent of the popup, if that parent previously had an explicit grab.\\n\\nIf the parent is a grabbing popup which has already been dismissed, this\\npopup will be immediately dismissed. If the parent is a popup that did\\nnot take an explicit grab, an error will be raised.\\n\\nDuring a popup grab, the client owning the grab will receive pointer\\nand touch events for all their surfaces as normal (similar to an\\n\\\"owner-events\\\" grab in X11 parlance), while the top most grabbing popup\\nwill always have keyboard focus.\"]\n    Grab {\n        seat: Proxy<super::wl_seat::WlSeat>,\n        serial: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":11234},{"krate":0,"index":11236}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11255},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9033262,"byte_end":9033271,"line_start":1977,"line_end":1977,"column_start":9,"column_end":18},"name":"Configure","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Event::Configure","value":"Event::Configure { x, y, width, height }","parent":{"krate":0,"index":11254},"children":[],"decl_id":null,"docs":"configure the popup surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11260},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9033572,"byte_end":9033581,"line_start":1984,"line_end":1984,"column_start":9,"column_end":18},"name":"PopupDone","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Event::PopupDone","value":"Event::PopupDone","parent":{"krate":0,"index":11254},"children":[],"decl_id":null,"docs":"popup interaction is done","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11254},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9032835,"byte_end":9032840,"line_start":1975,"line_end":1975,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::xdg_shell::generated::client::xdg_popup::Event","value":"pub enum Event {\n\n    #[doc =\n      \"configure the popup surface\\n\\nThis event asks the popup surface to configure itself given the\\nconfiguration. The configured state should not be applied immediately.\\nSee xdg_surface.configure for details.\\n\\nThe x and y arguments represent the position the popup was placed at\\ngiven the xdg_positioner rule, relative to the upper left corner of the\\nwindow geometry of the parent surface.\"]\n    Configure {\n        x: i32,\n        y: i32,\n        width: i32,\n        height: i32,\n    },\n\n    #[doc =\n      \"popup interaction is done\\n\\nThe popup_done event is sent out when a popup is dismissed by the\\ncompositor. The client should destroy the xdg_popup object at this\\npoint.\"]\n    PopupDone,\n}","parent":null,"children":[{"krate":0,"index":11255},{"krate":0,"index":11260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11275},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9037249,"byte_end":9037257,"line_start":2093,"line_end":2093,"column_start":16,"column_end":24},"name":"XdgPopup","qualname":"::stable::xdg_shell::generated::client::xdg_popup::XdgPopup","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11283},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9037585,"byte_end":9037598,"line_start":2103,"line_end":2103,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::xdg_shell::generated::client::xdg_popup::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":11284},{"krate":0,"index":11285}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11284},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9037969,"byte_end":9037976,"line_start":2105,"line_end":2105,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::xdg_shell::generated::client::xdg_popup::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":11283},"children":[],"decl_id":null,"docs":"remove xdg_popup interface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11285},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040029,"byte_end":9040033,"line_start":2107,"line_end":2107,"column_start":12,"column_end":16},"name":"grab","qualname":"::stable::xdg_shell::generated::client::xdg_popup::RequestsTrait::grab","value":"pub fn grab(&Self, &Proxy<super::wl_seat::WlSeat>, u32) -> ()","parent":{"krate":0,"index":11283},"children":[],"decl_id":null,"docs":"make the popup take an explicit grab","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11289},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040591,"byte_end":9040608,"line_start":2123,"line_end":2123,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_popup::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11290},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040704,"byte_end":9040718,"line_start":2125,"line_end":2125,"column_start":15,"column_end":29},"name":"REQ_GRAB_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_popup::REQ_GRAB_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11291},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040812,"byte_end":9040831,"line_start":2127,"line_end":2127,"column_start":15,"column_end":34},"name":"EVT_CONFIGURE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_popup::EVT_CONFIGURE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11292},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040925,"byte_end":9040945,"line_start":2129,"line_end":2129,"column_start":15,"column_end":35},"name":"EVT_POPUP_DONE_SINCE","qualname":"::stable::xdg_shell::generated::client::xdg_popup::EVT_POPUP_DONE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this event\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":41},"span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27439,"byte_end":27449,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"viewporter","qualname":"::stable::viewporter","value":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","parent":null,"children":[{"krate":0,"index":11622},{"krate":0,"index":11623},{"krate":0,"index":11624}],"decl_id":null,"docs":" Viewporter protocol","sig":null,"attributes":[{"value":"! Viewporter protocol","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27456,"byte_end":27479,"line_start":35,"line_end":35,"column_start":5,"column_end":28}},{"value":"!","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27484,"byte_end":27487,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"! Gives the capability to scale and crop surfaces, decorrelating the surface dimensions from","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27492,"byte_end":27586,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"! the size of the buffer.","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/stable.rs","byte_start":27591,"byte_end":27618,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Static","id":{"krate":0,"index":11657},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_interfaces.rs","byte_start":9041500,"byte_end":9041522,"line_start":14,"line_end":14,"column_start":16,"column_end":38},"name":"wp_viewporter_requests","qualname":"::stable::viewporter::generated::c_interfaces::wp_viewporter_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":11659},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_interfaces.rs","byte_start":9041978,"byte_end":9042001,"line_start":26,"line_end":26,"column_start":16,"column_end":39},"name":"wp_viewporter_interface","qualname":"::stable::viewporter::generated::c_interfaces::wp_viewporter_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":11660},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_interfaces.rs","byte_start":9042273,"byte_end":9042293,"line_start":34,"line_end":34,"column_start":16,"column_end":36},"name":"wp_viewport_requests","qualname":"::stable::viewporter::generated::c_interfaces::wp_viewport_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":11662},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_interfaces.rs","byte_start":9042917,"byte_end":9042938,"line_start":51,"line_end":51,"column_start":16,"column_end":37},"name":"wp_viewport_interface","qualname":"::stable::viewporter::generated::c_interfaces::wp_viewport_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11663},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9043565,"byte_end":9043578,"line_start":2,"line_end":2,"column_start":9,"column_end":22},"name":"wp_viewporter","qualname":"::stable::viewporter::generated::client::wp_viewporter","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","parent":null,"children":[{"krate":0,"index":11664},{"krate":0,"index":11665},{"krate":0,"index":11666},{"krate":0,"index":11667},{"krate":0,"index":11668},{"krate":0,"index":11669},{"krate":0,"index":11670},{"krate":0,"index":15693},{"krate":0,"index":11671},{"krate":0,"index":11672},{"krate":0,"index":11673},{"krate":0,"index":11674},{"krate":0,"index":11675},{"krate":0,"index":11676},{"krate":0,"index":11677},{"krate":0,"index":11678},{"krate":0,"index":11679},{"krate":0,"index":11680},{"krate":0,"index":11818},{"krate":0,"index":11829},{"krate":0,"index":11827},{"krate":0,"index":11825},{"krate":0,"index":11822},{"krate":0,"index":11823},{"krate":0,"index":11681},{"krate":0,"index":11684},{"krate":0,"index":11690},{"krate":0,"index":11705},{"krate":0,"index":11706},{"krate":0,"index":11719},{"krate":0,"index":11721},{"krate":0,"index":11727},{"krate":0,"index":11731},{"krate":0,"index":11735},{"krate":0,"index":11736}],"decl_id":null,"docs":"surface cropping and scaling","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11819},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044011,"byte_end":9044025,"line_start":13,"line_end":13,"column_start":9,"column_end":23},"name":"ViewportExists","qualname":"::stable::viewporter::generated::client::wp_viewporter::Error::ViewportExists","value":"Error::ViewportExists","parent":{"krate":0,"index":11818},"children":[],"decl_id":null,"docs":"the surface already has a viewport object associated\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11818},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9043923,"byte_end":9043928,"line_start":11,"line_end":11,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::viewporter::generated::client::wp_viewporter::Error","value":"pub enum Error {\n\n    #[doc = \"the surface already has a viewport object associated\"]\n    ViewportExists = ,\n}","parent":null,"children":[{"krate":0,"index":11819}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9043852,"byte_end":9043864,"line_start":9,"line_end":9,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":11682},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044069,"byte_end":9044077,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11683},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044251,"byte_end":9044257,"line_start":22,"line_end":22,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11685},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044644,"byte_end":9044651,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::viewporter::generated::client::wp_viewporter::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":11684},"children":[],"decl_id":null,"docs":"unbind from the cropping and scaling interface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11687},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044936,"byte_end":9044947,"line_start":30,"line_end":30,"column_start":9,"column_end":20},"name":"GetViewport","qualname":"::stable::viewporter::generated::client::wp_viewporter::Request::GetViewport","value":"Request::GetViewport { id, surface }","parent":{"krate":0,"index":11684},"children":[],"decl_id":null,"docs":"extend surface interface for crop and scale","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11684},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044328,"byte_end":9044335,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::viewporter::generated::client::wp_viewporter::Request","value":"pub enum Request {\n\n    #[doc =\n      \"unbind from the cropping and scaling interface\\n\\nInforms the server that the client will not be using this\\nprotocol object anymore. This does not affect any other objects,\\nwp_viewport objects included.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"extend surface interface for crop and scale\\n\\nInstantiate an interface extension for the given wl_surface to\\ncrop and scale its content. If the given wl_surface already has\\na wp_viewport object associated, the viewport_exists\\nprotocol error is raised.\"]\n    GetViewport {\n        id: Proxy<super::wp_viewport::WpViewport>,\n        surface: Proxy<super::wl_surface::WlSurface>,\n    },\n}","parent":null,"children":[{"krate":0,"index":11685},{"krate":0,"index":11687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11705},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9047956,"byte_end":9047961,"line_start":116,"line_end":116,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::viewporter::generated::client::wp_viewporter::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11719},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9049261,"byte_end":9049273,"line_start":159,"line_end":159,"column_start":16,"column_end":28},"name":"WpViewporter","qualname":"::stable::viewporter::generated::client::wp_viewporter::WpViewporter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11727},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9049613,"byte_end":9049626,"line_start":169,"line_end":169,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::viewporter::generated::client::wp_viewporter::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":11728},{"krate":0,"index":11729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11728},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9049968,"byte_end":9049975,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::viewporter::generated::client::wp_viewporter::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":11727},"children":[],"decl_id":null,"docs":"unbind from the cropping and scaling interface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11729},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9050276,"byte_end":9050288,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"get_viewport","qualname":"::stable::viewporter::generated::client::wp_viewporter::RequestsTrait::get_viewport","value":"pub fn get_viewport<F>(&Self, &Proxy<super::wl_surface::WlSurface>, F)\n-> Result<Proxy<super::wp_viewport::WpViewport>, ()> where\nF: FnOnce(NewProxy<super::wp_viewport::WpViewport>) ->\nProxy<super::wp_viewport::WpViewport>","parent":{"krate":0,"index":11727},"children":[],"decl_id":null,"docs":"extend surface interface for crop and scale","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11735},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9051442,"byte_end":9051459,"line_start":206,"line_end":206,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::viewporter::generated::client::wp_viewporter::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11736},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9051555,"byte_end":9051577,"line_start":208,"line_end":208,"column_start":15,"column_end":37},"name":"REQ_GET_VIEWPORT_SINCE","qualname":"::stable::viewporter::generated::client::wp_viewporter::REQ_GET_VIEWPORT_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11737},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9054719,"byte_end":9054730,"line_start":211,"line_end":211,"column_start":9,"column_end":20},"name":"wp_viewport","qualname":"::stable::viewporter::generated::client::wp_viewport","value":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","parent":null,"children":[{"krate":0,"index":11738},{"krate":0,"index":11739},{"krate":0,"index":11740},{"krate":0,"index":11741},{"krate":0,"index":11742},{"krate":0,"index":11743},{"krate":0,"index":11744},{"krate":0,"index":15721},{"krate":0,"index":11745},{"krate":0,"index":11746},{"krate":0,"index":11747},{"krate":0,"index":11748},{"krate":0,"index":11749},{"krate":0,"index":11750},{"krate":0,"index":11751},{"krate":0,"index":11752},{"krate":0,"index":11753},{"krate":0,"index":11754},{"krate":0,"index":11830},{"krate":0,"index":11850},{"krate":0,"index":11848},{"krate":0,"index":11846},{"krate":0,"index":11843},{"krate":0,"index":11844},{"krate":0,"index":11755},{"krate":0,"index":11758},{"krate":0,"index":11769},{"krate":0,"index":11785},{"krate":0,"index":11786},{"krate":0,"index":11799},{"krate":0,"index":11801},{"krate":0,"index":11807},{"krate":0,"index":11811},{"krate":0,"index":11815},{"krate":0,"index":11816},{"krate":0,"index":11817}],"decl_id":null,"docs":"crop and scale interface to a wl_surface","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11831},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055153,"byte_end":9055161,"line_start":222,"line_end":222,"column_start":9,"column_end":17},"name":"BadValue","qualname":"::stable::viewporter::generated::client::wp_viewport::Error::BadValue","value":"Error::BadValue","parent":{"krate":0,"index":11830},"children":[],"decl_id":null,"docs":"negative or zero values in width or height\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11834},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055226,"byte_end":9055233,"line_start":224,"line_end":224,"column_start":9,"column_end":16},"name":"BadSize","qualname":"::stable::viewporter::generated::client::wp_viewport::Error::BadSize","value":"Error::BadSize","parent":{"krate":0,"index":11830},"children":[],"decl_id":null,"docs":"destination size is not integer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11837},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055319,"byte_end":9055330,"line_start":226,"line_end":226,"column_start":9,"column_end":20},"name":"OutOfBuffer","qualname":"::stable::viewporter::generated::client::wp_viewport::Error::OutOfBuffer","value":"Error::OutOfBuffer","parent":{"krate":0,"index":11830},"children":[],"decl_id":null,"docs":"source rectangle extends outside of the content area\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11840},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055392,"byte_end":9055401,"line_start":228,"line_end":228,"column_start":9,"column_end":18},"name":"NoSurface","qualname":"::stable::viewporter::generated::client::wp_viewport::Error::NoSurface","value":"Error::NoSurface","parent":{"krate":0,"index":11830},"children":[],"decl_id":null,"docs":"the wl_surface was destroyed\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11830},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055075,"byte_end":9055080,"line_start":220,"line_end":220,"column_start":14,"column_end":19},"name":"Error","qualname":"::stable::viewporter::generated::client::wp_viewport::Error","value":"pub enum Error {\n\n    #[doc = \"negative or zero values in width or height\"]\n    BadValue = ,\n\n    #[doc = \"destination size is not integer\"]\n    BadSize = ,\n\n    #[doc = \"source rectangle extends outside of the content area\"]\n    OutOfBuffer = ,\n\n    #[doc = \"the wl_surface was destroyed\"]\n    NoSurface = ,\n}","parent":null,"children":[{"krate":0,"index":11831},{"krate":0,"index":11834},{"krate":0,"index":11837},{"krate":0,"index":11840}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055004,"byte_end":9055016,"line_start":218,"line_end":218,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":11756},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055445,"byte_end":9055453,"line_start":231,"line_end":231,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11757},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055756,"byte_end":9055762,"line_start":240,"line_end":240,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11759},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9056107,"byte_end":9056114,"line_start":246,"line_end":246,"column_start":9,"column_end":16},"name":"Destroy","qualname":"::stable::viewporter::generated::client::wp_viewport::Request::Destroy","value":"Request::Destroy","parent":{"krate":0,"index":11758},"children":[],"decl_id":null,"docs":"remove scaling and cropping from the surface","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11761},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9056636,"byte_end":9056645,"line_start":248,"line_end":248,"column_start":9,"column_end":18},"name":"SetSource","qualname":"::stable::viewporter::generated::client::wp_viewport::Request::SetSource","value":"Request::SetSource { x, y, width, height }","parent":{"krate":0,"index":11758},"children":[],"decl_id":null,"docs":"set the source rectangle for cropping","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":11766},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9057246,"byte_end":9057260,"line_start":255,"line_end":255,"column_start":9,"column_end":23},"name":"SetDestination","qualname":"::stable::viewporter::generated::client::wp_viewport::Request::SetDestination","value":"Request::SetDestination { width, height }","parent":{"krate":0,"index":11758},"children":[],"decl_id":null,"docs":"set the surface size for scaling","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11758},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055833,"byte_end":9055840,"line_start":244,"line_end":244,"column_start":14,"column_end":21},"name":"Request","qualname":"::stable::viewporter::generated::client::wp_viewport::Request","value":"pub enum Request {\n\n    #[doc =\n      \"remove scaling and cropping from the surface\\n\\nThe associated wl_surface's crop and scale state is removed.\\nThe change is applied on the next wl_surface.commit.\\n\\nThis is a destructor, once sent this object cannot be used any longer.\"]\n    Destroy,\n\n    #[doc =\n      \"set the source rectangle for cropping\\n\\nSet the source rectangle of the associated wl_surface. See\\nwp_viewport for the description, and relation to the wl_buffer\\nsize.\\n\\nIf all of x, y, width and height are -1.0, the source rectangle is\\nunset instead. Any other set of values where width or height are zero\\nor negative, or x or y are negative, raise the bad_value protocol\\nerror.\\n\\nThe crop and scale state is double-buffered state, and will be\\napplied on the next wl_surface.commit.\"]\n    SetSource {\n        x: f64,\n        y: f64,\n        width: f64,\n        height: f64,\n    },\n\n    #[doc =\n      \"set the surface size for scaling\\n\\nSet the destination size of the associated wl_surface. See\\nwp_viewport for the description, and relation to the wl_buffer\\nsize.\\n\\nIf width is -1 and height is -1, the destination size is unset\\ninstead. Any other pair of values for width and height that\\ncontains zero or negative values raises the bad_value protocol\\nerror.\\n\\nThe crop and scale state is double-buffered state, and will be\\napplied on the next wl_surface.commit.\"]\n    SetDestination {\n        width: i32,\n        height: i32,\n    },\n}","parent":null,"children":[{"krate":0,"index":11759},{"krate":0,"index":11761},{"krate":0,"index":11766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11785},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9061489,"byte_end":9061494,"line_start":373,"line_end":373,"column_start":14,"column_end":19},"name":"Event","qualname":"::stable::viewporter::generated::client::wp_viewport::Event","value":"pub enum Event { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11799},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9062794,"byte_end":9062804,"line_start":416,"line_end":416,"column_start":16,"column_end":26},"name":"WpViewport","qualname":"::stable::viewporter::generated::client::wp_viewport::WpViewport","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11807},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9063138,"byte_end":9063151,"line_start":426,"line_end":426,"column_start":15,"column_end":28},"name":"RequestsTrait","qualname":"::stable::viewporter::generated::client::wp_viewport::RequestsTrait","value":"RequestsTrait","parent":null,"children":[{"krate":0,"index":11808},{"krate":0,"index":11809},{"krate":0,"index":11810}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11808},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9063451,"byte_end":9063458,"line_start":428,"line_end":428,"column_start":12,"column_end":19},"name":"destroy","qualname":"::stable::viewporter::generated::client::wp_viewport::RequestsTrait::destroy","value":"pub fn destroy(&Self) -> ()","parent":{"krate":0,"index":11807},"children":[],"decl_id":null,"docs":"remove scaling and cropping from the surface","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11809},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9063996,"byte_end":9064006,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"set_source","qualname":"::stable::viewporter::generated::client::wp_viewport::RequestsTrait::set_source","value":"pub fn set_source(&Self, f64, f64, f64, f64) -> ()","parent":{"krate":0,"index":11807},"children":[],"decl_id":null,"docs":"set the source rectangle for cropping","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11810},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9064563,"byte_end":9064578,"line_start":432,"line_end":432,"column_start":12,"column_end":27},"name":"set_destination","qualname":"::stable::viewporter::generated::client::wp_viewport::RequestsTrait::set_destination","value":"pub fn set_destination(&Self, i32, i32) -> ()","parent":{"krate":0,"index":11807},"children":[],"decl_id":null,"docs":"set the surface size for scaling","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11815},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9065381,"byte_end":9065398,"line_start":457,"line_end":457,"column_start":15,"column_end":32},"name":"REQ_DESTROY_SINCE","qualname":"::stable::viewporter::generated::client::wp_viewport::REQ_DESTROY_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11816},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9065494,"byte_end":9065514,"line_start":459,"line_end":459,"column_start":15,"column_end":35},"name":"REQ_SET_SOURCE_SINCE","qualname":"::stable::viewporter::generated::client::wp_viewport::REQ_SET_SOURCE_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11817},"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9065610,"byte_end":9065635,"line_start":461,"line_end":461,"column_start":15,"column_end":40},"name":"REQ_SET_DESTINATION_SINCE","qualname":"::stable::viewporter::generated::client::wp_viewport::REQ_SET_DESTINATION_SINCE","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" The minimal object version supporting this request\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592006,"byte_end":6592016,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593212,"byte_end":6593225,"line_start":45,"line_end":45,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593995,"byte_end":6594000,"line_start":67,"line_end":67,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6598075,"byte_end":6598082,"line_start":97,"line_end":97,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6603814,"byte_end":6603819,"line_start":241,"line_end":241,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6606043,"byte_end":6606063,"line_start":310,"line_end":310,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6610630,"byte_end":6610635,"line_start":349,"line_end":349,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6613101,"byte_end":6613108,"line_start":412,"line_end":412,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6615372,"byte_end":6615377,"line_start":458,"line_end":458,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6617608,"byte_end":6617640,"line_start":529,"line_end":529,"column_start":24,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6618035,"byte_end":6618040,"line_start":539,"line_end":539,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7554072,"byte_end":7554079,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7556971,"byte_end":7556976,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7558282,"byte_end":7558305,"line_start":142,"line_end":142,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7559430,"byte_end":7559435,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7561851,"byte_end":7561858,"line_start":204,"line_end":204,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7563666,"byte_end":7563671,"line_start":262,"line_end":262,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7564972,"byte_end":7564990,"line_start":305,"line_end":305,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7565611,"byte_end":7565616,"line_start":318,"line_end":318,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7580266,"byte_end":7580273,"line_start":62,"line_end":62,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597530,"byte_end":7597535,"line_start":495,"line_end":495,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7605798,"byte_end":7605821,"line_start":714,"line_end":714,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7611039,"byte_end":7611044,"line_start":767,"line_end":767,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7617834,"byte_end":7617841,"line_start":932,"line_end":932,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7619626,"byte_end":7619631,"line_start":980,"line_end":980,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623406,"byte_end":7623422,"line_start":1086,"line_end":1086,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623781,"byte_end":7623786,"line_start":1096,"line_end":1096,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7624698,"byte_end":7624705,"line_start":1117,"line_end":1117,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7627005,"byte_end":7627010,"line_start":1180,"line_end":1180,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7628308,"byte_end":7628323,"line_start":1223,"line_end":1223,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7629161,"byte_end":7629166,"line_start":1245,"line_end":1245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630445,"byte_end":7630453,"line_start":1279,"line_end":1279,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7631304,"byte_end":7631311,"line_start":1299,"line_end":1299,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7634009,"byte_end":7634014,"line_start":1376,"line_end":1376,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7635319,"byte_end":7635341,"line_start":1419,"line_end":1419,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7636240,"byte_end":7636245,"line_start":1434,"line_end":1434,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7643040,"byte_end":7643047,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7648040,"byte_end":7648045,"line_start":149,"line_end":149,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7649355,"byte_end":7649382,"line_start":192,"line_end":192,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7652814,"byte_end":7652819,"line_start":235,"line_end":235,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7656370,"byte_end":7656377,"line_start":310,"line_end":310,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7659111,"byte_end":7659116,"line_start":375,"line_end":375,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662125,"byte_end":7662145,"line_start":464,"line_end":464,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662877,"byte_end":7662882,"line_start":477,"line_end":477,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666453,"byte_end":7666458,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7667560,"byte_end":7667567,"line_start":36,"line_end":36,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7670797,"byte_end":7670802,"line_start":126,"line_end":126,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7672121,"byte_end":7672157,"line_start":169,"line_end":169,"column_start":24,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7673811,"byte_end":7673816,"line_start":202,"line_end":202,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7677464,"byte_end":7677471,"line_start":250,"line_end":250,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7680061,"byte_end":7680066,"line_start":313,"line_end":313,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7681959,"byte_end":7681990,"line_start":376,"line_end":376,"column_start":24,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7682665,"byte_end":7682670,"line_start":389,"line_end":389,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7690961,"byte_end":7690968,"line_start":17,"line_end":17,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7695062,"byte_end":7695067,"line_start":106,"line_end":106,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7698957,"byte_end":7698973,"line_start":219,"line_end":219,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7700270,"byte_end":7700275,"line_start":242,"line_end":242,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703386,"byte_end":7703391,"line_start":300,"line_end":300,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704276,"byte_end":7704281,"line_start":328,"line_end":328,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7710334,"byte_end":7710341,"line_start":369,"line_end":369,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7717929,"byte_end":7717934,"line_start":573,"line_end":573,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7720739,"byte_end":7720761,"line_start":658,"line_end":658,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7726965,"byte_end":7726970,"line_start":694,"line_end":694,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734170,"byte_end":7734175,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7735733,"byte_end":7735740,"line_start":37,"line_end":37,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7738673,"byte_end":7738678,"line_start":118,"line_end":118,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7739994,"byte_end":7740027,"line_start":161,"line_end":161,"column_start":24,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7742068,"byte_end":7742073,"line_start":191,"line_end":191,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745915,"byte_end":7745920,"line_start":249,"line_end":249,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7748757,"byte_end":7748764,"line_start":275,"line_end":275,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7752201,"byte_end":7752206,"line_start":371,"line_end":371,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7753521,"byte_end":7753553,"line_start":414,"line_end":414,"column_start":24,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7756551,"byte_end":7756556,"line_start":439,"line_end":439,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7759012,"byte_end":7759019,"line_start":480,"line_end":480,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7761471,"byte_end":7761476,"line_start":524,"line_end":524,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7763991,"byte_end":7764014,"line_start":601,"line_end":601,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7764389,"byte_end":7764394,"line_start":611,"line_end":611,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771281,"byte_end":7771286,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772444,"byte_end":7772452,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7776591,"byte_end":7776598,"line_start":68,"line_end":68,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7782537,"byte_end":7782542,"line_start":227,"line_end":227,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7783848,"byte_end":7783871,"line_start":270,"line_end":270,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7788548,"byte_end":7788553,"line_start":309,"line_end":309,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7793626,"byte_end":7793633,"line_start":384,"line_end":384,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7797979,"byte_end":7797984,"line_start":494,"line_end":494,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7799864,"byte_end":7799882,"line_start":557,"line_end":557,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7801570,"byte_end":7801575,"line_start":574,"line_end":574,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7805104,"byte_end":7805111,"line_start":620,"line_end":620,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7808372,"byte_end":7808377,"line_start":704,"line_end":704,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7810275,"byte_end":7810295,"line_start":767,"line_end":767,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7811790,"byte_end":7811795,"line_start":782,"line_end":782,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7819255,"byte_end":7819262,"line_start":21,"line_end":21,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7822615,"byte_end":7822620,"line_start":106,"line_end":106,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7823923,"byte_end":7823943,"line_start":149,"line_end":149,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7825495,"byte_end":7825500,"line_start":182,"line_end":182,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7828494,"byte_end":7828501,"line_start":235,"line_end":235,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7831383,"byte_end":7831388,"line_start":309,"line_end":309,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838326,"byte_end":7838350,"line_start":499,"line_end":499,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838933,"byte_end":7838938,"line_start":512,"line_end":512,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7840897,"byte_end":7840904,"line_start":539,"line_end":539,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7844263,"byte_end":7844268,"line_start":619,"line_end":619,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852036,"byte_end":7852060,"line_start":827,"line_end":827,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852635,"byte_end":7852640,"line_start":840,"line_end":840,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7860895,"byte_end":7860902,"line_start":22,"line_end":22,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7864656,"byte_end":7864661,"line_start":122,"line_end":122,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7865978,"byte_end":7866012,"line_start":165,"line_end":165,"column_start":24,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7867777,"byte_end":7867782,"line_start":201,"line_end":201,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7870547,"byte_end":7870554,"line_start":263,"line_end":263,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7874598,"byte_end":7874603,"line_start":355,"line_end":355,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7878672,"byte_end":7878699,"line_start":467,"line_end":467,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7879780,"byte_end":7879785,"line_start":488,"line_end":488,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7882385,"byte_end":7882392,"line_start":533,"line_end":533,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7885561,"byte_end":7885566,"line_start":620,"line_end":620,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7888104,"byte_end":7888130,"line_start":694,"line_end":694,"column_start":24,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7889390,"byte_end":7889395,"line_start":709,"line_end":709,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7891159,"byte_end":7891166,"line_start":743,"line_end":743,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7894421,"byte_end":7894426,"line_start":831,"line_end":831,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7897614,"byte_end":7897641,"line_start":923,"line_end":923,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7898492,"byte_end":7898497,"line_start":938,"line_end":938,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2930},{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7902762,"byte_end":7902769,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7905678,"byte_end":7905683,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7906993,"byte_end":7907020,"line_start":142,"line_end":142,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7908311,"byte_end":7908316,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7910141,"byte_end":7910148,"line_start":204,"line_end":204,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7913771,"byte_end":7913776,"line_start":272,"line_end":272,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918064,"byte_end":7918084,"line_start":388,"line_end":388,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918652,"byte_end":7918657,"line_start":401,"line_end":401,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7929553,"byte_end":7929560,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7932534,"byte_end":7932539,"line_start":102,"line_end":102,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7933840,"byte_end":7933858,"line_start":145,"line_end":145,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7935094,"byte_end":7935099,"line_start":168,"line_end":168,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3253},{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7937001,"byte_end":7937008,"line_start":207,"line_end":207,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7939628,"byte_end":7939633,"line_start":274,"line_end":274,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7943396,"byte_end":7943411,"line_start":380,"line_end":380,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7944098,"byte_end":7944103,"line_start":393,"line_end":393,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946867,"byte_end":7946871,"line_start":435,"line_end":435,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3345},{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948002,"byte_end":7948012,"line_start":470,"line_end":470,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948854,"byte_end":7948865,"line_start":495,"line_end":495,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949353,"byte_end":7949358,"line_start":513,"line_end":513,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7951737,"byte_end":7951744,"line_start":535,"line_end":535,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7964101,"byte_end":7964106,"line_start":690,"line_end":690,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7983633,"byte_end":7983648,"line_start":1209,"line_end":1209,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7986148,"byte_end":7986153,"line_start":1230,"line_end":1230,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7990148,"byte_end":7990155,"line_start":1306,"line_end":1306,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7993552,"byte_end":7993557,"line_start":1375,"line_end":1375,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999005,"byte_end":7999016,"line_start":1528,"line_end":1528,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999613,"byte_end":7999618,"line_start":1541,"line_end":1541,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8019735,"byte_end":8019742,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8022716,"byte_end":8022721,"line_start":102,"line_end":102,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8024022,"byte_end":8024040,"line_start":145,"line_end":145,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8025276,"byte_end":8025281,"line_start":168,"line_end":168,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8027183,"byte_end":8027190,"line_start":207,"line_end":207,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8030465,"byte_end":8030470,"line_start":278,"line_end":278,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8035421,"byte_end":8035436,"line_start":413,"line_end":413,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036123,"byte_end":8036128,"line_start":426,"line_end":426,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039005,"byte_end":8039009,"line_start":470,"line_end":470,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3902}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040140,"byte_end":8040150,"line_start":505,"line_end":505,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3904},{"krate":0,"index":3905}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040992,"byte_end":8041003,"line_start":530,"line_end":530,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3907},{"krate":0,"index":3908}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041491,"byte_end":8041496,"line_start":548,"line_end":548,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3911}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8043790,"byte_end":8043797,"line_start":570,"line_end":570,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8056116,"byte_end":8056121,"line_start":725,"line_end":725,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8075792,"byte_end":8075807,"line_start":1244,"line_end":1244,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8078222,"byte_end":8078227,"line_start":1265,"line_end":1265,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4009},{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8082222,"byte_end":8082229,"line_start":1341,"line_end":1341,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8085626,"byte_end":8085631,"line_start":1410,"line_end":1410,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091079,"byte_end":8091090,"line_start":1563,"line_end":1563,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091687,"byte_end":8091692,"line_start":1576,"line_end":1576,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093407,"byte_end":8093413,"line_start":1610,"line_end":1610,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8094956,"byte_end":8094963,"line_start":1627,"line_end":1627,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8100133,"byte_end":8100138,"line_start":1726,"line_end":1726,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4165},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4174}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8104404,"byte_end":8104422,"line_start":1851,"line_end":1851,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106075,"byte_end":8106080,"line_start":1866,"line_end":1866,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8108051,"byte_end":8108057,"line_start":1907,"line_end":1907,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4216},{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8109609,"byte_end":8109616,"line_start":1924,"line_end":1924,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8114892,"byte_end":8114897,"line_start":2023,"line_end":2023,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8119144,"byte_end":8119163,"line_start":2148,"line_end":2148,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8120827,"byte_end":8120832,"line_start":2163,"line_end":2163,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4273},{"krate":0,"index":4274}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8123797,"byte_end":8123804,"line_start":2201,"line_end":2201,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8129410,"byte_end":8129415,"line_start":2276,"line_end":2276,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8136869,"byte_end":8136888,"line_start":2475,"line_end":2475,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8137567,"byte_end":8137572,"line_start":2488,"line_end":2488,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140296,"byte_end":8140307,"line_start":2526,"line_end":2526,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8142270,"byte_end":8142277,"line_start":2548,"line_end":2548,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8148116,"byte_end":8148121,"line_start":2676,"line_end":2676,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8158451,"byte_end":8158465,"line_start":2951,"line_end":2951,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8160422,"byte_end":8160427,"line_start":2966,"line_end":2966,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4454},{"krate":0,"index":4455}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8172041,"byte_end":8172052,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4665},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174161,"byte_end":8174175,"line_start":94,"line_end":94,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175457,"byte_end":8175469,"line_start":131,"line_end":131,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4671},{"krate":0,"index":4672}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176390,"byte_end":8176403,"line_start":159,"line_end":159,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4674},{"krate":0,"index":4675}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8179625,"byte_end":8179632,"line_start":208,"line_end":208,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8194413,"byte_end":8194418,"line_start":515,"line_end":515,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8213330,"byte_end":8213344,"line_start":998,"line_end":998,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8216581,"byte_end":8216586,"line_start":1035,"line_end":1035,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8222350,"byte_end":8222357,"line_start":1166,"line_end":1166,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8224474,"byte_end":8224479,"line_start":1228,"line_end":1228,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8225783,"byte_end":8225804,"line_start":1271,"line_end":1271,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8226577,"byte_end":8226582,"line_start":1291,"line_end":1291,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4905}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234249,"byte_end":8234260,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5123},{"krate":0,"index":5124}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235529,"byte_end":8235540,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5126},{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8237032,"byte_end":8237046,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5129},{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8244642,"byte_end":8244649,"line_start":126,"line_end":126,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8256739,"byte_end":8256744,"line_start":368,"line_end":368,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5198},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8266348,"byte_end":8266362,"line_start":619,"line_end":619,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8273344,"byte_end":8273349,"line_start":646,"line_end":646,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8277373,"byte_end":8277380,"line_start":738,"line_end":738,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8280241,"byte_end":8280246,"line_start":819,"line_end":819,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8281550,"byte_end":8281571,"line_start":862,"line_end":862,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8282656,"byte_end":8282661,"line_start":885,"line_end":885,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8288515,"byte_end":8288522,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8291455,"byte_end":8291460,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8292766,"byte_end":8292789,"line_start":142,"line_end":142,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5623}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8294328,"byte_end":8294333,"line_start":166,"line_end":166,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5630}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296424,"byte_end":8296429,"line_start":212,"line_end":212,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5653},{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297130,"byte_end":8297134,"line_start":234,"line_end":234,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5656},{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8299004,"byte_end":8299011,"line_start":254,"line_end":254,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5666},{"krate":0,"index":5667},{"krate":0,"index":5668},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5672},{"krate":0,"index":5673},{"krate":0,"index":5674},{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8302552,"byte_end":8302557,"line_start":349,"line_end":349,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8304823,"byte_end":8304847,"line_start":418,"line_end":418,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8306809,"byte_end":8306814,"line_start":435,"line_end":435,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8313132,"byte_end":8313139,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8315985,"byte_end":8315990,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5852},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8317287,"byte_end":8317301,"line_start":142,"line_end":142,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8318762,"byte_end":8318767,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5873},{"krate":0,"index":5874}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8321001,"byte_end":8321008,"line_start":209,"line_end":209,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8324088,"byte_end":8324093,"line_start":296,"line_end":296,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8325390,"byte_end":8325404,"line_start":339,"line_end":339,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8326743,"byte_end":8326748,"line_start":362,"line_end":362,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5944},{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8328656,"byte_end":8328663,"line_start":401,"line_end":401,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5979},{"krate":0,"index":5980}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8330813,"byte_end":8330818,"line_start":462,"line_end":462,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5994},{"krate":0,"index":5996},{"krate":0,"index":5997},{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8333342,"byte_end":8333356,"line_start":536,"line_end":536,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6004},{"krate":0,"index":6005},{"krate":0,"index":6006},{"krate":0,"index":6007},{"krate":0,"index":6008}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8334086,"byte_end":8334091,"line_start":549,"line_end":549,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6012}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8335760,"byte_end":8335767,"line_start":576,"line_end":576,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8338719,"byte_end":8338724,"line_start":656,"line_end":656,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6057},{"krate":0,"index":6058},{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6063},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8340311,"byte_end":8340325,"line_start":709,"line_end":709,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6075},{"krate":0,"index":6076}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8341430,"byte_end":8341435,"line_start":724,"line_end":724,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6081},{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8347694,"byte_end":8347701,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8350580,"byte_end":8350585,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6188},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8351882,"byte_end":8351896,"line_start":142,"line_end":142,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6201}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8353396,"byte_end":8353401,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8355696,"byte_end":8355703,"line_start":209,"line_end":209,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6239},{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6245},{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8358816,"byte_end":8358821,"line_start":296,"line_end":296,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":6259},{"krate":0,"index":6260},{"krate":0,"index":6261},{"krate":0,"index":6262}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8360118,"byte_end":8360132,"line_start":339,"line_end":339,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8361507,"byte_end":8361512,"line_start":362,"line_end":362,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6278},{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8363446,"byte_end":8363453,"line_start":401,"line_end":401,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6313},{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8365612,"byte_end":8365617,"line_start":462,"line_end":462,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6326},{"krate":0,"index":6328},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368141,"byte_end":8368155,"line_start":536,"line_end":536,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368885,"byte_end":8368890,"line_start":549,"line_end":549,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6346}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8370563,"byte_end":8370570,"line_start":576,"line_end":576,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8373522,"byte_end":8373527,"line_start":656,"line_end":656,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8375114,"byte_end":8375128,"line_start":709,"line_end":709,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8376237,"byte_end":8376242,"line_start":724,"line_end":724,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6415},{"krate":0,"index":6416}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8380873,"byte_end":8380880,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8383815,"byte_end":8383820,"line_start":102,"line_end":102,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6511},{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6514}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8385122,"byte_end":8385141,"line_start":145,"line_end":145,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6524}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8386379,"byte_end":8386384,"line_start":168,"line_end":168,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6530},{"krate":0,"index":6531}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8388145,"byte_end":8388152,"line_start":207,"line_end":207,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560},{"krate":0,"index":6561},{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8394137,"byte_end":8394142,"line_start":276,"line_end":276,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6590},{"krate":0,"index":6593},{"krate":0,"index":6594},{"krate":0,"index":6595}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8400664,"byte_end":8400676,"line_start":453,"line_end":453,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401327,"byte_end":8401332,"line_start":466,"line_end":466,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6609}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411027,"byte_end":8411034,"line_start":16,"line_end":16,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6703},{"krate":0,"index":6704}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411762,"byte_end":8411767,"line_start":39,"line_end":39,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6706},{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8414624,"byte_end":8414631,"line_start":76,"line_end":76,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6727},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8421750,"byte_end":8421755,"line_start":251,"line_end":251,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6752},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8423890,"byte_end":8423898,"line_start":318,"line_end":318,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6767}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8427067,"byte_end":8427072,"line_start":358,"line_end":358,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6781},{"krate":0,"index":6783}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431306,"byte_end":8431316,"line_start":447,"line_end":447,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433803,"byte_end":8433808,"line_start":479,"line_end":479,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6812},{"krate":0,"index":6813}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8444527,"byte_end":8444534,"line_start":544,"line_end":544,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6861},{"krate":0,"index":6862}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8459027,"byte_end":8459032,"line_start":884,"line_end":884,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":6892},{"krate":0,"index":6893},{"krate":0,"index":6894},{"krate":0,"index":6896},{"krate":0,"index":6897},{"krate":0,"index":6898},{"krate":0,"index":6899}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8462907,"byte_end":8462917,"line_start":996,"line_end":996,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6905},{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8473612,"byte_end":8473617,"line_start":1041,"line_end":1041,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6940},{"krate":0,"index":6941}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8481267,"byte_end":8481274,"line_start":1171,"line_end":1171,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8483296,"byte_end":8483301,"line_start":1232,"line_end":1232,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6997},{"krate":0,"index":6998},{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8484883,"byte_end":8484891,"line_start":1285,"line_end":1285,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7012},{"krate":0,"index":7013},{"krate":0,"index":7014},{"krate":0,"index":7015},{"krate":0,"index":7016}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8485625,"byte_end":8485630,"line_start":1298,"line_end":1298,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7020}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499234,"byte_end":8499239,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7214},{"krate":0,"index":7215}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8501451,"byte_end":8501458,"line_start":56,"line_end":56,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7229},{"krate":0,"index":7230},{"krate":0,"index":7231},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7236}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8506506,"byte_end":8506511,"line_start":175,"line_end":175,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7247},{"krate":0,"index":7248},{"krate":0,"index":7249},{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7253},{"krate":0,"index":7254},{"krate":0,"index":7255},{"krate":0,"index":7256}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8508649,"byte_end":8508660,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7262},{"krate":0,"index":7263},{"krate":0,"index":7264},{"krate":0,"index":7265},{"krate":0,"index":7266}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8511144,"byte_end":8511149,"line_start":276,"line_end":276,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7275},{"krate":0,"index":7276},{"krate":0,"index":7278},{"krate":0,"index":7280}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514704,"byte_end":8514709,"line_start":341,"line_end":341,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7305},{"krate":0,"index":7306}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515372,"byte_end":8515378,"line_start":353,"line_end":353,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7308},{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515953,"byte_end":8515960,"line_start":362,"line_end":362,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7311},{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519465,"byte_end":8519485,"line_start":371,"line_end":371,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7314},{"krate":0,"index":7315}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8523849,"byte_end":8523856,"line_start":400,"line_end":400,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7337},{"krate":0,"index":7338},{"krate":0,"index":7339},{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7345},{"krate":0,"index":7346}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8530897,"byte_end":8530902,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7360},{"krate":0,"index":7361},{"krate":0,"index":7362},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8532201,"byte_end":8532217,"line_start":629,"line_end":629,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8536737,"byte_end":8536742,"line_start":654,"line_end":654,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540910,"byte_end":8540915,"line_start":724,"line_end":724,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7420},{"krate":0,"index":7421}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8544864,"byte_end":8544871,"line_start":760,"line_end":760,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441},{"krate":0,"index":7442},{"krate":0,"index":7443},{"krate":0,"index":7445},{"krate":0,"index":7446},{"krate":0,"index":7447},{"krate":0,"index":7448}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8552123,"byte_end":8552128,"line_start":936,"line_end":936,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7460},{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464},{"krate":0,"index":7466},{"krate":0,"index":7467},{"krate":0,"index":7468},{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8554288,"byte_end":8554301,"line_start":1003,"line_end":1003,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7475},{"krate":0,"index":7476},{"krate":0,"index":7477},{"krate":0,"index":7478},{"krate":0,"index":7479}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8558618,"byte_end":8558623,"line_start":1040,"line_end":1040,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7492},{"krate":0,"index":7494},{"krate":0,"index":7495}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562182,"byte_end":8562192,"line_start":1126,"line_end":1126,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7521},{"krate":0,"index":7522}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564209,"byte_end":8564214,"line_start":1158,"line_end":1158,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7524},{"krate":0,"index":7525}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8575528,"byte_end":8575535,"line_start":1218,"line_end":1218,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7564},{"krate":0,"index":7565},{"krate":0,"index":7566},{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7570},{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8589374,"byte_end":8589379,"line_start":1536,"line_end":1536,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7600},{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7604},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7609}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8592878,"byte_end":8592892,"line_start":1639,"line_end":1639,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7615},{"krate":0,"index":7616},{"krate":0,"index":7617},{"krate":0,"index":7618},{"krate":0,"index":7619}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8604262,"byte_end":8604267,"line_start":1685,"line_end":1685,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7639},{"krate":0,"index":7640},{"krate":0,"index":7641},{"krate":0,"index":7642},{"krate":0,"index":7643},{"krate":0,"index":7644},{"krate":0,"index":7645},{"krate":0,"index":7646},{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7650},{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610888,"byte_end":8610893,"line_start":1821,"line_end":1821,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7687},{"krate":0,"index":7688}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8613687,"byte_end":8613694,"line_start":1841,"line_end":1841,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8617100,"byte_end":8617105,"line_start":1929,"line_end":1929,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7721},{"krate":0,"index":7722},{"krate":0,"index":7723},{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7728}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8620763,"byte_end":8620774,"line_start":2037,"line_end":2037,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7738}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8623624,"byte_end":8623629,"line_start":2052,"line_end":2052,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":7744}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8628309,"byte_end":8628316,"line_start":19,"line_end":19,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8275},{"krate":0,"index":8276},{"krate":0,"index":8277},{"krate":0,"index":8278},{"krate":0,"index":8279},{"krate":0,"index":8281},{"krate":0,"index":8282},{"krate":0,"index":8283},{"krate":0,"index":8284}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8631518,"byte_end":8631523,"line_start":109,"line_end":109,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8291},{"krate":0,"index":8292},{"krate":0,"index":8293},{"krate":0,"index":8294},{"krate":0,"index":8295},{"krate":0,"index":8297},{"krate":0,"index":8298},{"krate":0,"index":8299},{"krate":0,"index":8300}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8632838,"byte_end":8632870,"line_start":152,"line_end":152,"column_start":24,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8306},{"krate":0,"index":8307},{"krate":0,"index":8308},{"krate":0,"index":8309},{"krate":0,"index":8310}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8634983,"byte_end":8634988,"line_start":177,"line_end":177,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8316},{"krate":0,"index":8317}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636867,"byte_end":8636874,"line_start":219,"line_end":219,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8343},{"krate":0,"index":8344},{"krate":0,"index":8345},{"krate":0,"index":8346},{"krate":0,"index":8347},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8638682,"byte_end":8638687,"line_start":277,"line_end":277,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8358},{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8364},{"krate":0,"index":8365},{"krate":0,"index":8366},{"krate":0,"index":8367}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8639995,"byte_end":8640020,"line_start":320,"line_end":320,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375},{"krate":0,"index":8376},{"krate":0,"index":8377}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8640693,"byte_end":8640698,"line_start":333,"line_end":333,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8648432,"byte_end":8648439,"line_start":22,"line_end":22,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8472},{"krate":0,"index":8473},{"krate":0,"index":8474},{"krate":0,"index":8475},{"krate":0,"index":8476},{"krate":0,"index":8478},{"krate":0,"index":8479},{"krate":0,"index":8480},{"krate":0,"index":8481}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8652211,"byte_end":8652216,"line_start":122,"line_end":122,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8489},{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8492},{"krate":0,"index":8493},{"krate":0,"index":8495},{"krate":0,"index":8496},{"krate":0,"index":8497},{"krate":0,"index":8498}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8653523,"byte_end":8653547,"line_start":165,"line_end":165,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8504},{"krate":0,"index":8505},{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8655261,"byte_end":8655266,"line_start":199,"line_end":199,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8516},{"krate":0,"index":8518},{"krate":0,"index":8520}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8658026,"byte_end":8658033,"line_start":260,"line_end":260,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8548},{"krate":0,"index":8549},{"krate":0,"index":8550},{"krate":0,"index":8551},{"krate":0,"index":8552},{"krate":0,"index":8554},{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8662248,"byte_end":8662253,"line_start":350,"line_end":350,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8573},{"krate":0,"index":8574},{"krate":0,"index":8575},{"krate":0,"index":8577},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8580}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8666477,"byte_end":8666500,"line_start":466,"line_end":466,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8586},{"krate":0,"index":8587},{"krate":0,"index":8588},{"krate":0,"index":8589},{"krate":0,"index":8590}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8667422,"byte_end":8667427,"line_start":484,"line_end":484,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8595},{"krate":0,"index":8597}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669239,"byte_end":8669244,"line_start":524,"line_end":524,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8622},{"krate":0,"index":8623}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8670032,"byte_end":8670039,"line_start":541,"line_end":541,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8630},{"krate":0,"index":8631},{"krate":0,"index":8632},{"krate":0,"index":8633},{"krate":0,"index":8634},{"krate":0,"index":8636},{"krate":0,"index":8637},{"krate":0,"index":8638},{"krate":0,"index":8639}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8673256,"byte_end":8673261,"line_start":629,"line_end":629,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8651},{"krate":0,"index":8652},{"krate":0,"index":8653},{"krate":0,"index":8654},{"krate":0,"index":8655},{"krate":0,"index":8657},{"krate":0,"index":8659},{"krate":0,"index":8660},{"krate":0,"index":8661}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8676445,"byte_end":8676468,"line_start":721,"line_end":721,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8667},{"krate":0,"index":8668},{"krate":0,"index":8669},{"krate":0,"index":8670},{"krate":0,"index":8671}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8677371,"byte_end":8677376,"line_start":736,"line_end":736,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8676},{"krate":0,"index":8677}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8679695,"byte_end":8679702,"line_start":774,"line_end":774,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8707},{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8710},{"krate":0,"index":8711},{"krate":0,"index":8713},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8682806,"byte_end":8682811,"line_start":861,"line_end":861,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8725},{"krate":0,"index":8726},{"krate":0,"index":8727},{"krate":0,"index":8728},{"krate":0,"index":8729},{"krate":0,"index":8731},{"krate":0,"index":8733},{"krate":0,"index":8734},{"krate":0,"index":8735}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8685345,"byte_end":8685367,"line_start":935,"line_end":935,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8741},{"krate":0,"index":8742},{"krate":0,"index":8743},{"krate":0,"index":8744},{"krate":0,"index":8745}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8686633,"byte_end":8686638,"line_start":950,"line_end":950,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8750},{"krate":0,"index":8751}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8691541,"byte_end":8691548,"line_start":19,"line_end":19,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8838},{"krate":0,"index":8839},{"krate":0,"index":8840},{"krate":0,"index":8841},{"krate":0,"index":8842},{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846},{"krate":0,"index":8847}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8694923,"byte_end":8694928,"line_start":117,"line_end":117,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8854},{"krate":0,"index":8855},{"krate":0,"index":8856},{"krate":0,"index":8857},{"krate":0,"index":8858},{"krate":0,"index":8860},{"krate":0,"index":8861},{"krate":0,"index":8862},{"krate":0,"index":8863}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8696236,"byte_end":8696261,"line_start":160,"line_end":160,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8869},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8873}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8697524,"byte_end":8697529,"line_start":185,"line_end":185,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8879},{"krate":0,"index":8881}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699902,"byte_end":8699907,"line_start":230,"line_end":230,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8903},{"krate":0,"index":8904}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700613,"byte_end":8700625,"line_start":252,"line_end":252,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8906},{"krate":0,"index":8907}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8701403,"byte_end":8701410,"line_start":269,"line_end":269,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8915},{"krate":0,"index":8916},{"krate":0,"index":8918},{"krate":0,"index":8919},{"krate":0,"index":8920},{"krate":0,"index":8921}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8705616,"byte_end":8705621,"line_start":358,"line_end":358,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8951},{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8957},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8716836,"byte_end":8716859,"line_start":651,"line_end":651,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8968},{"krate":0,"index":8969},{"krate":0,"index":8970}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8717625,"byte_end":8717630,"line_start":664,"line_end":664,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8974}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8725279,"byte_end":8725286,"line_start":13,"line_end":13,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9090},{"krate":0,"index":9091},{"krate":0,"index":9092},{"krate":0,"index":9093},{"krate":0,"index":9094},{"krate":0,"index":9096},{"krate":0,"index":9097},{"krate":0,"index":9098},{"krate":0,"index":9099}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8727940,"byte_end":8727945,"line_start":78,"line_end":78,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9109},{"krate":0,"index":9110},{"krate":0,"index":9111},{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117},{"krate":0,"index":9118}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8730834,"byte_end":8730862,"line_start":162,"line_end":162,"column_start":24,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":9124},{"krate":0,"index":9125},{"krate":0,"index":9126},{"krate":0,"index":9127},{"krate":0,"index":9128}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8731565,"byte_end":8731570,"line_start":175,"line_end":175,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9132}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733129,"byte_end":8733134,"line_start":207,"line_end":207,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9155},{"krate":0,"index":9156}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733664,"byte_end":8733669,"line_start":226,"line_end":226,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9158},{"krate":0,"index":9159}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8736686,"byte_end":8736693,"line_start":261,"line_end":261,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":9184},{"krate":0,"index":9185},{"krate":0,"index":9186},{"krate":0,"index":9188},{"krate":0,"index":9189},{"krate":0,"index":9190},{"krate":0,"index":9191}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8745440,"byte_end":8745445,"line_start":476,"line_end":476,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9224},{"krate":0,"index":9227},{"krate":0,"index":9228},{"krate":0,"index":9229}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8752857,"byte_end":8752884,"line_start":677,"line_end":677,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":9238},{"krate":0,"index":9239}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8756134,"byte_end":8756139,"line_start":711,"line_end":711,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9250},{"krate":0,"index":9251},{"krate":0,"index":9252},{"krate":0,"index":9253},{"krate":0,"index":9254},{"krate":0,"index":9255},{"krate":0,"index":9256},{"krate":0,"index":9257}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8762882,"byte_end":8762889,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9372},{"krate":0,"index":9373},{"krate":0,"index":9374},{"krate":0,"index":9375},{"krate":0,"index":9376},{"krate":0,"index":9378},{"krate":0,"index":9379},{"krate":0,"index":9380},{"krate":0,"index":9381}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8765778,"byte_end":8765783,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9388},{"krate":0,"index":9389},{"krate":0,"index":9390},{"krate":0,"index":9391},{"krate":0,"index":9392},{"krate":0,"index":9394},{"krate":0,"index":9395},{"krate":0,"index":9396},{"krate":0,"index":9397}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8767091,"byte_end":8767116,"line_start":142,"line_end":142,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9403},{"krate":0,"index":9404},{"krate":0,"index":9405},{"krate":0,"index":9406},{"krate":0,"index":9407}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8768346,"byte_end":8768351,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9413},{"krate":0,"index":9415}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770364,"byte_end":8770369,"line_start":206,"line_end":206,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9437},{"krate":0,"index":9438}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8771390,"byte_end":8771397,"line_start":223,"line_end":223,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9445},{"krate":0,"index":9446},{"krate":0,"index":9447},{"krate":0,"index":9448},{"krate":0,"index":9449},{"krate":0,"index":9451},{"krate":0,"index":9452},{"krate":0,"index":9453},{"krate":0,"index":9454}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8774577,"byte_end":8774582,"line_start":305,"line_end":305,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467},{"krate":0,"index":9468},{"krate":0,"index":9469},{"krate":0,"index":9471},{"krate":0,"index":9472},{"krate":0,"index":9473},{"krate":0,"index":9474}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8777037,"byte_end":8777055,"line_start":382,"line_end":382,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9480},{"krate":0,"index":9481},{"krate":0,"index":9482},{"krate":0,"index":9483},{"krate":0,"index":9484}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778180,"byte_end":8778185,"line_start":397,"line_end":397,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9489},{"krate":0,"index":9490}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781312,"byte_end":8781317,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9566},{"krate":0,"index":9567}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781937,"byte_end":8781944,"line_start":32,"line_end":32,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9572},{"krate":0,"index":9573},{"krate":0,"index":9574},{"krate":0,"index":9575},{"krate":0,"index":9576},{"krate":0,"index":9578},{"krate":0,"index":9579},{"krate":0,"index":9580},{"krate":0,"index":9581}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8784060,"byte_end":8784065,"line_start":94,"line_end":94,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9587},{"krate":0,"index":9588},{"krate":0,"index":9589},{"krate":0,"index":9590},{"krate":0,"index":9591},{"krate":0,"index":9593},{"krate":0,"index":9594},{"krate":0,"index":9595},{"krate":0,"index":9596}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8785373,"byte_end":8785398,"line_start":137,"line_end":137,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9602},{"krate":0,"index":9603},{"krate":0,"index":9604},{"krate":0,"index":9605},{"krate":0,"index":9606}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8786319,"byte_end":8786324,"line_start":157,"line_end":157,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9611}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8788208,"byte_end":8788215,"line_start":188,"line_end":188,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9636},{"krate":0,"index":9637},{"krate":0,"index":9638},{"krate":0,"index":9639},{"krate":0,"index":9640},{"krate":0,"index":9642},{"krate":0,"index":9643},{"krate":0,"index":9644},{"krate":0,"index":9645}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8790023,"byte_end":8790028,"line_start":246,"line_end":246,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9651},{"krate":0,"index":9652},{"krate":0,"index":9653},{"krate":0,"index":9654},{"krate":0,"index":9655},{"krate":0,"index":9657},{"krate":0,"index":9658},{"krate":0,"index":9659},{"krate":0,"index":9660}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791331,"byte_end":8791351,"line_start":289,"line_end":289,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9666},{"krate":0,"index":9667},{"krate":0,"index":9668},{"krate":0,"index":9669},{"krate":0,"index":9670}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791981,"byte_end":8791986,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9674}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797297,"byte_end":8797302,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9757},{"krate":0,"index":9758}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798253,"byte_end":8798258,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9760},{"krate":0,"index":9761}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8799705,"byte_end":8799712,"line_start":65,"line_end":65,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9770},{"krate":0,"index":9771},{"krate":0,"index":9772},{"krate":0,"index":9773},{"krate":0,"index":9774},{"krate":0,"index":9776},{"krate":0,"index":9777},{"krate":0,"index":9778},{"krate":0,"index":9779}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8803162,"byte_end":8803167,"line_start":160,"line_end":160,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9786},{"krate":0,"index":9787},{"krate":0,"index":9788},{"krate":0,"index":9789},{"krate":0,"index":9790},{"krate":0,"index":9792},{"krate":0,"index":9793},{"krate":0,"index":9794},{"krate":0,"index":9795}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8804466,"byte_end":8804482,"line_start":203,"line_end":203,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9801},{"krate":0,"index":9802},{"krate":0,"index":9803},{"krate":0,"index":9804},{"krate":0,"index":9805}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8806087,"byte_end":8806092,"line_start":227,"line_end":227,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9810}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808120,"byte_end":8808125,"line_start":272,"line_end":272,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9833},{"krate":0,"index":9834}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808825,"byte_end":8808831,"line_start":286,"line_end":286,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9836},{"krate":0,"index":9837}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8814192,"byte_end":8814199,"line_start":319,"line_end":319,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9860},{"krate":0,"index":9861},{"krate":0,"index":9862},{"krate":0,"index":9863},{"krate":0,"index":9864},{"krate":0,"index":9866},{"krate":0,"index":9867},{"krate":0,"index":9868},{"krate":0,"index":9869}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8823296,"byte_end":8823301,"line_start":529,"line_end":529,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9888},{"krate":0,"index":9889},{"krate":0,"index":9890},{"krate":0,"index":9891},{"krate":0,"index":9892},{"krate":0,"index":9894},{"krate":0,"index":9895},{"krate":0,"index":9896},{"krate":0,"index":9897}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8826601,"byte_end":8826619,"line_start":628,"line_end":628,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9903},{"krate":0,"index":9904},{"krate":0,"index":9905},{"krate":0,"index":9906},{"krate":0,"index":9907}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8832164,"byte_end":8832169,"line_start":655,"line_end":655,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9918},{"krate":0,"index":9919},{"krate":0,"index":9920},{"krate":0,"index":9921},{"krate":0,"index":9922},{"krate":0,"index":9923},{"krate":0,"index":9924},{"krate":0,"index":9925}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8840463,"byte_end":8840470,"line_start":29,"line_end":29,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10179},{"krate":0,"index":10180},{"krate":0,"index":10181},{"krate":0,"index":10182},{"krate":0,"index":10183},{"krate":0,"index":10185},{"krate":0,"index":10186},{"krate":0,"index":10187},{"krate":0,"index":10188}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8846100,"byte_end":8846105,"line_start":184,"line_end":184,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10196},{"krate":0,"index":10197},{"krate":0,"index":10198},{"krate":0,"index":10199},{"krate":0,"index":10200},{"krate":0,"index":10202},{"krate":0,"index":10203},{"krate":0,"index":10204},{"krate":0,"index":10205}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8847411,"byte_end":8847434,"line_start":227,"line_end":227,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10211},{"krate":0,"index":10212},{"krate":0,"index":10213},{"krate":0,"index":10214},{"krate":0,"index":10215}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8849425,"byte_end":8849430,"line_start":266,"line_end":266,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10223},{"krate":0,"index":10225},{"krate":0,"index":10227}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852669,"byte_end":8852674,"line_start":339,"line_end":339,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10250},{"krate":0,"index":10251}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853096,"byte_end":8853101,"line_start":352,"line_end":352,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10253},{"krate":0,"index":10254}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853976,"byte_end":8853983,"line_start":368,"line_end":368,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10261},{"krate":0,"index":10262},{"krate":0,"index":10263},{"krate":0,"index":10264},{"krate":0,"index":10265},{"krate":0,"index":10267},{"krate":0,"index":10268},{"krate":0,"index":10269},{"krate":0,"index":10270}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8858039,"byte_end":8858044,"line_start":463,"line_end":463,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10290},{"krate":0,"index":10291},{"krate":0,"index":10292},{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":10296},{"krate":0,"index":10297},{"krate":0,"index":10298},{"krate":0,"index":10299}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8864320,"byte_end":8864341,"line_start":639,"line_end":639,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10305},{"krate":0,"index":10306},{"krate":0,"index":10307},{"krate":0,"index":10308},{"krate":0,"index":10309}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8865378,"byte_end":8865383,"line_start":654,"line_end":654,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10314},{"krate":0,"index":10315}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870823,"byte_end":8870828,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10489},{"krate":0,"index":10490}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8872137,"byte_end":8872144,"line_start":39,"line_end":39,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10498},{"krate":0,"index":10499},{"krate":0,"index":10500},{"krate":0,"index":10501},{"krate":0,"index":10502},{"krate":0,"index":10504},{"krate":0,"index":10505},{"krate":0,"index":10506},{"krate":0,"index":10507}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8876538,"byte_end":8876543,"line_start":126,"line_end":126,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10516},{"krate":0,"index":10517},{"krate":0,"index":10518},{"krate":0,"index":10519},{"krate":0,"index":10520},{"krate":0,"index":10522},{"krate":0,"index":10523},{"krate":0,"index":10524},{"krate":0,"index":10525}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8878697,"byte_end":8878711,"line_start":193,"line_end":193,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10531},{"krate":0,"index":10532},{"krate":0,"index":10533},{"krate":0,"index":10534},{"krate":0,"index":10535}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8880308,"byte_end":8880313,"line_start":217,"line_end":217,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10541},{"krate":0,"index":10542}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884192,"byte_end":8884196,"line_start":268,"line_end":268,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10566},{"krate":0,"index":10567}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884638,"byte_end":8884645,"line_start":283,"line_end":283,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10570},{"krate":0,"index":10571},{"krate":0,"index":10572},{"krate":0,"index":10573},{"krate":0,"index":10574},{"krate":0,"index":10576},{"krate":0,"index":10577},{"krate":0,"index":10578},{"krate":0,"index":10579}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8888774,"byte_end":8888779,"line_start":339,"line_end":339,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10596},{"krate":0,"index":10597},{"krate":0,"index":10598},{"krate":0,"index":10599},{"krate":0,"index":10600},{"krate":0,"index":10602},{"krate":0,"index":10603},{"krate":0,"index":10604},{"krate":0,"index":10605}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8894659,"byte_end":8894681,"line_start":500,"line_end":500,"column_start":24,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10611},{"krate":0,"index":10612},{"krate":0,"index":10613},{"krate":0,"index":10614},{"krate":0,"index":10615}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8895050,"byte_end":8895055,"line_start":510,"line_end":510,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908583,"byte_end":8908588,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10756},{"krate":0,"index":10757}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8910796,"byte_end":8910803,"line_start":56,"line_end":56,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10769},{"krate":0,"index":10770},{"krate":0,"index":10771},{"krate":0,"index":10772},{"krate":0,"index":10773},{"krate":0,"index":10775},{"krate":0,"index":10776},{"krate":0,"index":10777},{"krate":0,"index":10778}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8915932,"byte_end":8915937,"line_start":179,"line_end":179,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10789},{"krate":0,"index":10790},{"krate":0,"index":10791},{"krate":0,"index":10792},{"krate":0,"index":10793},{"krate":0,"index":10795},{"krate":0,"index":10796},{"krate":0,"index":10797},{"krate":0,"index":10798}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8918073,"byte_end":8918082,"line_start":246,"line_end":246,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10804},{"krate":0,"index":10805},{"krate":0,"index":10806},{"krate":0,"index":10807},{"krate":0,"index":10808}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8920530,"byte_end":8920535,"line_start":280,"line_end":280,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10817},{"krate":0,"index":10818},{"krate":0,"index":10820},{"krate":0,"index":10822}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924042,"byte_end":8924047,"line_start":345,"line_end":345,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10847},{"krate":0,"index":10848}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924592,"byte_end":8924598,"line_start":369,"line_end":369,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":10850},{"krate":0,"index":10851}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925488,"byte_end":8925495,"line_start":401,"line_end":401,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":10853},{"krate":0,"index":10854}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929564,"byte_end":8929584,"line_start":421,"line_end":421,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10856},{"krate":0,"index":10857}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8933634,"byte_end":8933641,"line_start":450,"line_end":450,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10879},{"krate":0,"index":10880},{"krate":0,"index":10881},{"krate":0,"index":10882},{"krate":0,"index":10883},{"krate":0,"index":10885},{"krate":0,"index":10886},{"krate":0,"index":10887},{"krate":0,"index":10888}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8940682,"byte_end":8940687,"line_start":636,"line_end":636,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10900},{"krate":0,"index":10901},{"krate":0,"index":10902},{"krate":0,"index":10903},{"krate":0,"index":10904},{"krate":0,"index":10906},{"krate":0,"index":10907},{"krate":0,"index":10908},{"krate":0,"index":10909}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8941983,"byte_end":8941996,"line_start":679,"line_end":679,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10915},{"krate":0,"index":10916},{"krate":0,"index":10917},{"krate":0,"index":10918},{"krate":0,"index":10919}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8946194,"byte_end":8946199,"line_start":704,"line_end":704,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10929},{"krate":0,"index":10930},{"krate":0,"index":10931},{"krate":0,"index":10932},{"krate":0,"index":10933},{"krate":0,"index":10934},{"krate":0,"index":10935}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950735,"byte_end":8950740,"line_start":774,"line_end":774,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10962},{"krate":0,"index":10963}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8955061,"byte_end":8955068,"line_start":810,"line_end":810,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10981},{"krate":0,"index":10982},{"krate":0,"index":10983},{"krate":0,"index":10984},{"krate":0,"index":10985},{"krate":0,"index":10987},{"krate":0,"index":10988},{"krate":0,"index":10989},{"krate":0,"index":10990}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8962445,"byte_end":8962450,"line_start":989,"line_end":989,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11003},{"krate":0,"index":11004},{"krate":0,"index":11005},{"krate":0,"index":11006},{"krate":0,"index":11007},{"krate":0,"index":11009},{"krate":0,"index":11010},{"krate":0,"index":11011},{"krate":0,"index":11012}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8964607,"byte_end":8964617,"line_start":1056,"line_end":1056,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11018},{"krate":0,"index":11019},{"krate":0,"index":11020},{"krate":0,"index":11021},{"krate":0,"index":11022}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8969239,"byte_end":8969244,"line_start":1091,"line_end":1091,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11032},{"krate":0,"index":11033},{"krate":0,"index":11035},{"krate":0,"index":11038},{"krate":0,"index":11039}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973089,"byte_end":8973099,"line_start":1175,"line_end":1175,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11065},{"krate":0,"index":11066}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8976162,"byte_end":8976167,"line_start":1215,"line_end":1215,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11068},{"krate":0,"index":11069}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8989936,"byte_end":8989943,"line_start":1279,"line_end":1279,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11108},{"krate":0,"index":11109},{"krate":0,"index":11110},{"krate":0,"index":11111},{"krate":0,"index":11112},{"krate":0,"index":11114},{"krate":0,"index":11115},{"krate":0,"index":11116},{"krate":0,"index":11117}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9003782,"byte_end":9003787,"line_start":1597,"line_end":1597,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11144},{"krate":0,"index":11145},{"krate":0,"index":11146},{"krate":0,"index":11147},{"krate":0,"index":11148},{"krate":0,"index":11150},{"krate":0,"index":11151},{"krate":0,"index":11152},{"krate":0,"index":11153}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9007283,"byte_end":9007294,"line_start":1700,"line_end":1700,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11159},{"krate":0,"index":11160},{"krate":0,"index":11161},{"krate":0,"index":11162},{"krate":0,"index":11163}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9020917,"byte_end":9020922,"line_start":1745,"line_end":1745,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11180},{"krate":0,"index":11181},{"krate":0,"index":11183},{"krate":0,"index":11184},{"krate":0,"index":11185},{"krate":0,"index":11186},{"krate":0,"index":11187},{"krate":0,"index":11188},{"krate":0,"index":11189},{"krate":0,"index":11190},{"krate":0,"index":11191},{"krate":0,"index":11192},{"krate":0,"index":11194},{"krate":0,"index":11195}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027410,"byte_end":9027415,"line_start":1878,"line_end":1878,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11231},{"krate":0,"index":11232}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9030209,"byte_end":9030216,"line_start":1898,"line_end":1898,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11240},{"krate":0,"index":11241},{"krate":0,"index":11242},{"krate":0,"index":11243},{"krate":0,"index":11244},{"krate":0,"index":11246},{"krate":0,"index":11247},{"krate":0,"index":11248},{"krate":0,"index":11249}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9033622,"byte_end":9033627,"line_start":1986,"line_end":1986,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11263},{"krate":0,"index":11264},{"krate":0,"index":11265},{"krate":0,"index":11266},{"krate":0,"index":11267},{"krate":0,"index":11269},{"krate":0,"index":11270},{"krate":0,"index":11271},{"krate":0,"index":11272}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9037282,"byte_end":9037290,"line_start":2094,"line_end":2094,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11278},{"krate":0,"index":11279},{"krate":0,"index":11280},{"krate":0,"index":11281},{"krate":0,"index":11282}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040132,"byte_end":9040137,"line_start":2109,"line_end":2109,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11287},{"krate":0,"index":11288}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044046,"byte_end":9044051,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11682},{"krate":0,"index":11683}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9045113,"byte_end":9045120,"line_start":35,"line_end":35,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11691},{"krate":0,"index":11692},{"krate":0,"index":11693},{"krate":0,"index":11694},{"krate":0,"index":11695},{"krate":0,"index":11697},{"krate":0,"index":11698},{"krate":0,"index":11699},{"krate":0,"index":11700}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9047998,"byte_end":9048003,"line_start":117,"line_end":117,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11707},{"krate":0,"index":11708},{"krate":0,"index":11709},{"krate":0,"index":11710},{"krate":0,"index":11711},{"krate":0,"index":11713},{"krate":0,"index":11714},{"krate":0,"index":11715},{"krate":0,"index":11716}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9049298,"byte_end":9049310,"line_start":160,"line_end":160,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11722},{"krate":0,"index":11723},{"krate":0,"index":11724},{"krate":0,"index":11725},{"krate":0,"index":11726}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9050646,"byte_end":9050651,"line_start":183,"line_end":183,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11732},{"krate":0,"index":11733}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055422,"byte_end":9055427,"line_start":230,"line_end":230,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11756},{"krate":0,"index":11757}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9057329,"byte_end":9057336,"line_start":257,"line_end":257,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11770},{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":11773},{"krate":0,"index":11774},{"krate":0,"index":11776},{"krate":0,"index":11777},{"krate":0,"index":11778},{"krate":0,"index":11779}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9061531,"byte_end":9061536,"line_start":374,"line_end":374,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11787},{"krate":0,"index":11788},{"krate":0,"index":11789},{"krate":0,"index":11790},{"krate":0,"index":11791},{"krate":0,"index":11793},{"krate":0,"index":11794},{"krate":0,"index":11795},{"krate":0,"index":11796}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9062829,"byte_end":9062839,"line_start":417,"line_end":417,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11802},{"krate":0,"index":11803},{"krate":0,"index":11804},{"krate":0,"index":11805},{"krate":0,"index":11806}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9064651,"byte_end":9064656,"line_start":434,"line_end":434,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11812},{"krate":0,"index":11813},{"krate":0,"index":11814}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":1189,"byte_end":1197,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7336,"byte_end":7338,"line_start":22,"line_end":22,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7606,"byte_end":7608,"line_start":36,"line_end":36,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":306}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":7799,"byte_end":7801,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":481}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8121,"byte_end":8123,"line_start":63,"line_end":63,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8715,"byte_end":8717,"line_start":82,"line_end":82,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":1148}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":8972,"byte_end":8974,"line_start":96,"line_end":96,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":1349}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":9216,"byte_end":9218,"line_start":107,"line_end":107,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":1634}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10109,"byte_end":10111,"line_start":130,"line_end":130,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":1935}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10429,"byte_end":10431,"line_start":145,"line_end":145,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":2280}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":10706,"byte_end":10708,"line_start":159,"line_end":159,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":2569}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":11858,"byte_end":11860,"line_start":186,"line_end":186,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":2937}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16721,"byte_end":16723,"line_start":274,"line_end":274,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":3122}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16725,"byte_end":16727,"line_start":274,"line_end":274,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":3123}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16975,"byte_end":16977,"line_start":288,"line_end":288,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":4593}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":16979,"byte_end":16981,"line_start":288,"line_end":288,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":4594}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":17794,"byte_end":17796,"line_start":314,"line_end":314,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":5519}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19402,"byte_end":19404,"line_start":348,"line_end":348,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":5750}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":19406,"byte_end":19408,"line_start":348,"line_end":348,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":5751}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":20591,"byte_end":20593,"line_start":376,"line_end":376,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":6420}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21015,"byte_end":21017,"line_start":392,"line_end":392,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":6616}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":21019,"byte_end":21021,"line_start":392,"line_end":392,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":6617}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/unstable.rs","byte_start":22892,"byte_end":22894,"line_start":434,"line_end":434,"column_start":10,"column_end":12},"ref_id":{"krate":0,"index":8205}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/lib.rs","byte_start":1208,"byte_end":1211,"line_start":40,"line_end":40,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24281,"byte_end":24283,"line_start":32,"line_end":32,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":8383}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":24670,"byte_end":24672,"line_start":47,"line_end":47,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":8768}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25017,"byte_end":25019,"line_start":62,"line_end":62,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":9010}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25489,"byte_end":25491,"line_start":79,"line_end":79,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":9303}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25772,"byte_end":25774,"line_start":92,"line_end":92,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":9507}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":25969,"byte_end":25971,"line_start":103,"line_end":103,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":9688}},{"kind":"Mod","span":{"file_name":"/home/clozed/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-protocols-0.21.13/src/wlr.rs","byte_start":26513,"byte_end":26515,"line_start":122,"line_end":122,"column_start":14,"column_end":16},"ref_id":{"krate":0,"index":10095}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6592006,"byte_end":6592016,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593212,"byte_end":6593225,"line_start":45,"line_end":45,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6593995,"byte_end":6594000,"line_start":67,"line_end":67,"column_start":10,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6598075,"byte_end":6598082,"line_start":97,"line_end":97,"column_start":34,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":118},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6603814,"byte_end":6603819,"line_start":241,"line_end":241,"column_start":34,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":148},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6606043,"byte_end":6606063,"line_start":310,"line_end":310,"column_start":24,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6610630,"byte_end":6610635,"line_start":349,"line_end":349,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":172}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6613101,"byte_end":6613108,"line_start":412,"line_end":412,"column_start":34,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":206},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6615372,"byte_end":6615377,"line_start":458,"line_end":458,"column_start":34,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":220},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6617608,"byte_end":6617640,"line_start":529,"line_end":529,"column_start":24,"column_end":56},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":240},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/fullscreen-shell-v1_c_client_api.rs","byte_start":6618035,"byte_end":6618040,"line_start":539,"line_end":539,"column_start":28,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":248}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7554072,"byte_end":7554079,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":366},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7556971,"byte_end":7556976,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":387},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7558282,"byte_end":7558305,"line_start":142,"line_end":142,"column_start":24,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":401},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7559430,"byte_end":7559435,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":409}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7561851,"byte_end":7561858,"line_start":204,"line_end":204,"column_start":34,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":437},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7563666,"byte_end":7563671,"line_start":262,"line_end":262,"column_start":34,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":454},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7564972,"byte_end":7564990,"line_start":305,"line_end":305,"column_start":24,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":468},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/idle-inhibit-v1_c_client_api.rs","byte_start":7565611,"byte_end":7565616,"line_start":318,"line_end":318,"column_start":28,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":476}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7580266,"byte_end":7580273,"line_start":62,"line_end":62,"column_start":34,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":561},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7597530,"byte_end":7597535,"line_start":495,"line_end":495,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":637},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7605798,"byte_end":7605821,"line_start":714,"line_end":714,"column_start":24,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":669},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7611039,"byte_end":7611044,"line_start":767,"line_end":767,"column_start":28,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7617834,"byte_end":7617841,"line_start":932,"line_end":932,"column_start":34,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":747},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7619626,"byte_end":7619631,"line_start":980,"line_end":980,"column_start":34,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623406,"byte_end":7623422,"line_start":1086,"line_end":1086,"column_start":24,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":779},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7623781,"byte_end":7623786,"line_start":1096,"line_end":1096,"column_start":28,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":787}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7624698,"byte_end":7624705,"line_start":1117,"line_end":1117,"column_start":34,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":809},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7627005,"byte_end":7627010,"line_start":1180,"line_end":1180,"column_start":34,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":827},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7628308,"byte_end":7628323,"line_start":1223,"line_end":1223,"column_start":24,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":841},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7629161,"byte_end":7629166,"line_start":1245,"line_end":1245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":849}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7630445,"byte_end":7630453,"line_start":1279,"line_end":1279,"column_start":10,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7631304,"byte_end":7631311,"line_start":1299,"line_end":1299,"column_start":34,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":877},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7634009,"byte_end":7634014,"line_start":1376,"line_end":1376,"column_start":34,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":898},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7635319,"byte_end":7635341,"line_start":1419,"line_end":1419,"column_start":24,"column_end":46},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":912},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-method-v1_c_client_api.rs","byte_start":7636240,"byte_end":7636245,"line_start":1434,"line_end":1434,"column_start":28,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":920}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7643040,"byte_end":7643047,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1010},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7648040,"byte_end":7648045,"line_start":149,"line_end":149,"column_start":34,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1039},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7649355,"byte_end":7649382,"line_start":192,"line_end":192,"column_start":24,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1053},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7652814,"byte_end":7652819,"line_start":235,"line_end":235,"column_start":28,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1061}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7656370,"byte_end":7656377,"line_start":310,"line_end":310,"column_start":34,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1099},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7659111,"byte_end":7659116,"line_start":375,"line_end":375,"column_start":34,"column_end":39},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1116},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662125,"byte_end":7662145,"line_start":464,"line_end":464,"column_start":24,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1134},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/input-timestamps-v1_c_client_api.rs","byte_start":7662877,"byte_end":7662882,"line_start":477,"line_end":477,"column_start":28,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7666453,"byte_end":7666458,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7667560,"byte_end":7667567,"line_start":36,"line_end":36,"column_start":34,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1215},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7670797,"byte_end":7670802,"line_start":126,"line_end":126,"column_start":34,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1237},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7672121,"byte_end":7672157,"line_start":169,"line_end":169,"column_start":24,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1251},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7673811,"byte_end":7673816,"line_start":202,"line_end":202,"column_start":28,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7677464,"byte_end":7677471,"line_start":250,"line_end":250,"column_start":34,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1287},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7680061,"byte_end":7680066,"line_start":313,"line_end":313,"column_start":34,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1304},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7681959,"byte_end":7681990,"line_start":376,"line_end":376,"column_start":24,"column_end":55},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1322},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/keyboard-shortcuts-inhibit-v1_c_client_api.rs","byte_start":7682665,"byte_end":7682670,"line_start":389,"line_end":389,"column_start":28,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1330}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7690961,"byte_end":7690968,"line_start":17,"line_end":17,"column_start":34,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1417},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7695062,"byte_end":7695067,"line_start":106,"line_end":106,"column_start":34,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1437},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7698957,"byte_end":7698973,"line_start":219,"line_end":219,"column_start":24,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1457},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7700270,"byte_end":7700275,"line_start":242,"line_end":242,"column_start":28,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7703386,"byte_end":7703391,"line_start":300,"line_end":300,"column_start":10,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7704276,"byte_end":7704281,"line_start":328,"line_end":328,"column_start":10,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7710334,"byte_end":7710341,"line_start":369,"line_end":369,"column_start":34,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1501},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7717929,"byte_end":7717934,"line_start":573,"line_end":573,"column_start":34,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1539},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7720739,"byte_end":7720761,"line_start":658,"line_end":658,"column_start":24,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1557},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-dmabuf-v1_c_client_api.rs","byte_start":7726965,"byte_end":7726970,"line_start":694,"line_end":694,"column_start":28,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1565}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7734170,"byte_end":7734175,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7735733,"byte_end":7735740,"line_start":37,"line_end":37,"column_start":34,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1702},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7738673,"byte_end":7738678,"line_start":118,"line_end":118,"column_start":34,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1723},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7739994,"byte_end":7740027,"line_start":161,"line_end":161,"column_start":24,"column_end":57},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1737},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7742068,"byte_end":7742073,"line_start":191,"line_end":191,"column_start":28,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1745}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7745915,"byte_end":7745920,"line_start":249,"line_end":249,"column_start":10,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7748757,"byte_end":7748764,"line_start":275,"line_end":275,"column_start":34,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1776},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7752201,"byte_end":7752206,"line_start":371,"line_end":371,"column_start":34,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1799},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7753521,"byte_end":7753553,"line_start":414,"line_end":414,"column_start":24,"column_end":56},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1813},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7756551,"byte_end":7756556,"line_start":439,"line_end":439,"column_start":28,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1821}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7759012,"byte_end":7759019,"line_start":480,"line_end":480,"column_start":34,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1852},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7761471,"byte_end":7761476,"line_start":524,"line_end":524,"column_start":34,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1866},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7763991,"byte_end":7764014,"line_start":601,"line_end":601,"column_start":24,"column_end":47},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1884},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/linux-explicit-synchronization-v1_c_client_api.rs","byte_start":7764389,"byte_end":7764394,"line_start":611,"line_end":611,"column_start":28,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":1892}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7771281,"byte_end":7771286,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7772444,"byte_end":7772452,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7776591,"byte_end":7776598,"line_start":68,"line_end":68,"column_start":34,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2018},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7782537,"byte_end":7782542,"line_start":227,"line_end":227,"column_start":34,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2051},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7783848,"byte_end":7783871,"line_start":270,"line_end":270,"column_start":24,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2065},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7788548,"byte_end":7788553,"line_start":309,"line_end":309,"column_start":28,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2073}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7793626,"byte_end":7793633,"line_start":384,"line_end":384,"column_start":34,"column_end":41},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2108},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7797979,"byte_end":7797984,"line_start":494,"line_end":494,"column_start":34,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2133},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7799864,"byte_end":7799882,"line_start":557,"line_end":557,"column_start":24,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2151},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7801570,"byte_end":7801575,"line_start":574,"line_end":574,"column_start":28,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2159}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7805104,"byte_end":7805111,"line_start":620,"line_end":620,"column_start":34,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2191},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7808372,"byte_end":7808377,"line_start":704,"line_end":704,"column_start":34,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2212},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7810275,"byte_end":7810295,"line_start":767,"line_end":767,"column_start":24,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2230},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-constraints-v1_c_client_api.rs","byte_start":7811790,"byte_end":7811795,"line_start":782,"line_end":782,"column_start":28,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2238}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7819255,"byte_end":7819262,"line_start":21,"line_end":21,"column_start":34,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2355},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7822615,"byte_end":7822620,"line_start":106,"line_end":106,"column_start":34,"column_end":39},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2377},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7823923,"byte_end":7823943,"line_start":149,"line_end":149,"column_start":24,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2391},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7825495,"byte_end":7825500,"line_start":182,"line_end":182,"column_start":28,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2399}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7828494,"byte_end":7828501,"line_start":235,"line_end":235,"column_start":34,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2429},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7831383,"byte_end":7831388,"line_start":309,"line_end":309,"column_start":34,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2446},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838326,"byte_end":7838350,"line_start":499,"line_end":499,"column_start":24,"column_end":48},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2473},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7838933,"byte_end":7838938,"line_start":512,"line_end":512,"column_start":28,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2481}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7840897,"byte_end":7840904,"line_start":539,"line_end":539,"column_start":34,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2507},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7844263,"byte_end":7844268,"line_start":619,"line_end":619,"column_start":34,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2524},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852036,"byte_end":7852060,"line_start":827,"line_end":827,"column_start":24,"column_end":48},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2553},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/pointer-gestures-v1_c_client_api.rs","byte_start":7852635,"byte_end":7852640,"line_start":840,"line_end":840,"column_start":28,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2561}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7860895,"byte_end":7860902,"line_start":22,"line_end":22,"column_start":34,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2649},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7864656,"byte_end":7864661,"line_start":122,"line_end":122,"column_start":34,"column_end":39},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2673},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7865978,"byte_end":7866012,"line_start":165,"line_end":165,"column_start":24,"column_end":58},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2687},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7867777,"byte_end":7867782,"line_start":201,"line_end":201,"column_start":28,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2695}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7870547,"byte_end":7870554,"line_start":263,"line_end":263,"column_start":34,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2728},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7874598,"byte_end":7874603,"line_start":355,"line_end":355,"column_start":34,"column_end":39},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2750},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7878672,"byte_end":7878699,"line_start":467,"line_end":467,"column_start":24,"column_end":51},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2768},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7879780,"byte_end":7879785,"line_start":488,"line_end":488,"column_start":28,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2776}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7882385,"byte_end":7882392,"line_start":533,"line_end":533,"column_start":34,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2805},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7885561,"byte_end":7885566,"line_start":620,"line_end":620,"column_start":34,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2826},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7888104,"byte_end":7888130,"line_start":694,"line_end":694,"column_start":24,"column_end":50},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2843},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7889390,"byte_end":7889395,"line_start":709,"line_end":709,"column_start":28,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2851}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7891159,"byte_end":7891166,"line_start":743,"line_end":743,"column_start":34,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2878},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7894421,"byte_end":7894426,"line_start":831,"line_end":831,"column_start":34,"column_end":39},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2898},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7897614,"byte_end":7897641,"line_start":923,"line_end":923,"column_start":24,"column_end":51},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2918},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/primary-selection-v1_c_client_api.rs","byte_start":7898492,"byte_end":7898497,"line_start":938,"line_end":938,"column_start":28,"column_end":33},"kind":{"Impl":{"id":118}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":2926}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7902762,"byte_end":7902769,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2999},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7905678,"byte_end":7905683,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3020},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7906993,"byte_end":7907020,"line_start":142,"line_end":142,"column_start":24,"column_end":51},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3034},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7908311,"byte_end":7908316,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3042}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7910141,"byte_end":7910148,"line_start":204,"line_end":204,"column_start":34,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3070},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7913771,"byte_end":7913776,"line_start":272,"line_end":272,"column_start":34,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3087},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918064,"byte_end":7918084,"line_start":388,"line_end":388,"column_start":24,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3108},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/relative-pointer-v1_c_client_api.rs","byte_start":7918652,"byte_end":7918657,"line_start":401,"line_end":401,"column_start":28,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3116}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7929553,"byte_end":7929560,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3205},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7932534,"byte_end":7932539,"line_start":102,"line_end":102,"column_start":34,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3226},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7933840,"byte_end":7933858,"line_start":145,"line_end":145,"column_start":24,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3240},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7935094,"byte_end":7935099,"line_start":168,"line_end":168,"column_start":28,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3248}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7937001,"byte_end":7937008,"line_start":207,"line_end":207,"column_start":34,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3276},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7939628,"byte_end":7939633,"line_start":274,"line_end":274,"column_start":34,"column_end":39},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3293},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7943396,"byte_end":7943411,"line_start":380,"line_end":380,"column_start":24,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3311},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7944098,"byte_end":7944103,"line_start":393,"line_end":393,"column_start":28,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3319}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7946867,"byte_end":7946871,"line_start":435,"line_end":435,"column_start":10,"column_end":14},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948002,"byte_end":7948012,"line_start":470,"line_end":470,"column_start":10,"column_end":20},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7948854,"byte_end":7948865,"line_start":495,"line_end":495,"column_start":10,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7949353,"byte_end":7949358,"line_start":513,"line_end":513,"column_start":10,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7951737,"byte_end":7951744,"line_start":535,"line_end":535,"column_start":34,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3356},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7964101,"byte_end":7964106,"line_start":690,"line_end":690,"column_start":34,"column_end":39},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3380},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7983633,"byte_end":7983648,"line_start":1209,"line_end":1209,"column_start":24,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3441},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7986148,"byte_end":7986153,"line_start":1230,"line_end":1230,"column_start":28,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3449}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7990148,"byte_end":7990155,"line_start":1306,"line_end":1306,"column_start":34,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3495},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7993552,"byte_end":7993557,"line_start":1375,"line_end":1375,"column_start":34,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3512},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999005,"byte_end":7999016,"line_start":1528,"line_end":1528,"column_start":24,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3539},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v1_c_client_api.rs","byte_start":7999613,"byte_end":7999618,"line_start":1541,"line_end":1541,"column_start":28,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3547}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8019735,"byte_end":8019742,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3758},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8022716,"byte_end":8022721,"line_start":102,"line_end":102,"column_start":34,"column_end":39},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3779},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8024022,"byte_end":8024040,"line_start":145,"line_end":145,"column_start":24,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3793},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8025276,"byte_end":8025281,"line_start":168,"line_end":168,"column_start":28,"column_end":33},"kind":{"Impl":{"id":150}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3801}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8027183,"byte_end":8027190,"line_start":207,"line_end":207,"column_start":34,"column_end":41},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3829},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8030465,"byte_end":8030470,"line_start":278,"line_end":278,"column_start":34,"column_end":39},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3846},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8035421,"byte_end":8035436,"line_start":413,"line_end":413,"column_start":24,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3866},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8036123,"byte_end":8036128,"line_start":426,"line_end":426,"column_start":28,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":3874}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8039005,"byte_end":8039009,"line_start":470,"line_end":470,"column_start":10,"column_end":14},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040140,"byte_end":8040150,"line_start":505,"line_end":505,"column_start":10,"column_end":20},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8040992,"byte_end":8041003,"line_start":530,"line_end":530,"column_start":10,"column_end":21},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8041491,"byte_end":8041496,"line_start":548,"line_end":548,"column_start":10,"column_end":15},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8043790,"byte_end":8043797,"line_start":570,"line_end":570,"column_start":34,"column_end":41},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3912},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8056116,"byte_end":8056121,"line_start":725,"line_end":725,"column_start":34,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3936},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8075792,"byte_end":8075807,"line_start":1244,"line_end":1244,"column_start":24,"column_end":39},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3997},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8078222,"byte_end":8078227,"line_start":1265,"line_end":1265,"column_start":28,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4005}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8082222,"byte_end":8082229,"line_start":1341,"line_end":1341,"column_start":34,"column_end":41},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4051},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8085626,"byte_end":8085631,"line_start":1410,"line_end":1410,"column_start":34,"column_end":39},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4068},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091079,"byte_end":8091090,"line_start":1563,"line_end":1563,"column_start":24,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4095},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8091687,"byte_end":8091692,"line_start":1576,"line_end":1576,"column_start":28,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4103}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8093407,"byte_end":8093413,"line_start":1610,"line_end":1610,"column_start":10,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8094956,"byte_end":8094963,"line_start":1627,"line_end":1627,"column_start":34,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4134},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8100133,"byte_end":8100138,"line_start":1726,"line_end":1726,"column_start":34,"column_end":39},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4155},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8104404,"byte_end":8104422,"line_start":1851,"line_end":1851,"column_start":24,"column_end":42},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4177},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8106075,"byte_end":8106080,"line_start":1866,"line_end":1866,"column_start":28,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8108051,"byte_end":8108057,"line_start":1907,"line_end":1907,"column_start":10,"column_end":16},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8109609,"byte_end":8109616,"line_start":1924,"line_end":1924,"column_start":34,"column_end":41},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4218},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8114892,"byte_end":8114897,"line_start":2023,"line_end":2023,"column_start":34,"column_end":39},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4239},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8119144,"byte_end":8119163,"line_start":2148,"line_end":2148,"column_start":24,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4261},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8120827,"byte_end":8120832,"line_start":2163,"line_end":2163,"column_start":28,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4269}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8123797,"byte_end":8123804,"line_start":2201,"line_end":2201,"column_start":34,"column_end":41},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4299},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8129410,"byte_end":8129415,"line_start":2276,"line_end":2276,"column_start":34,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4316},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8136869,"byte_end":8136888,"line_start":2475,"line_end":2475,"column_start":24,"column_end":43},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4344},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8137567,"byte_end":8137572,"line_start":2488,"line_end":2488,"column_start":28,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4352}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8140296,"byte_end":8140307,"line_start":2526,"line_end":2526,"column_start":10,"column_end":21},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8142270,"byte_end":8142277,"line_start":2548,"line_end":2548,"column_start":34,"column_end":41},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4384},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8148116,"byte_end":8148121,"line_start":2676,"line_end":2676,"column_start":34,"column_end":39},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4406},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8158451,"byte_end":8158465,"line_start":2951,"line_end":2951,"column_start":24,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4442},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/tablet-v2_c_client_api.rs","byte_start":8160422,"byte_end":8160427,"line_start":2966,"line_end":2966,"column_start":28,"column_end":33},"kind":{"Impl":{"id":185}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4450}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8172041,"byte_end":8172052,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8174161,"byte_end":8174175,"line_start":94,"line_end":94,"column_start":10,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8175457,"byte_end":8175469,"line_start":131,"line_end":131,"column_start":10,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8176390,"byte_end":8176403,"line_start":159,"line_end":159,"column_start":10,"column_end":23},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8179625,"byte_end":8179632,"line_start":208,"line_end":208,"column_start":34,"column_end":41},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4676},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8194413,"byte_end":8194418,"line_start":515,"line_end":515,"column_start":34,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4731},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8213330,"byte_end":8213344,"line_start":998,"line_end":998,"column_start":24,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4788},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8216581,"byte_end":8216586,"line_start":1035,"line_end":1035,"column_start":28,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4796}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8222350,"byte_end":8222357,"line_start":1166,"line_end":1166,"column_start":34,"column_end":41},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4862},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8224474,"byte_end":8224479,"line_start":1228,"line_end":1228,"column_start":34,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4879},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8225783,"byte_end":8225804,"line_start":1271,"line_end":1271,"column_start":24,"column_end":45},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4893},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v1_c_client_api.rs","byte_start":8226577,"byte_end":8226582,"line_start":1291,"line_end":1291,"column_start":28,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":4901}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8234249,"byte_end":8234260,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8235529,"byte_end":8235540,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8237032,"byte_end":8237046,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8244642,"byte_end":8244649,"line_start":126,"line_end":126,"column_start":34,"column_end":41},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5131},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8256739,"byte_end":8256744,"line_start":368,"line_end":368,"column_start":34,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5175},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8266348,"byte_end":8266362,"line_start":619,"line_end":619,"column_start":24,"column_end":38},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5206},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8273344,"byte_end":8273349,"line_start":646,"line_end":646,"column_start":28,"column_end":33},"kind":{"Impl":{"id":204}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":5214}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8277373,"byte_end":8277380,"line_start":738,"line_end":738,"column_start":34,"column_end":41},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5264},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8280241,"byte_end":8280246,"line_start":819,"line_end":819,"column_start":34,"column_end":39},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5285},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8281550,"byte_end":8281571,"line_start":862,"line_end":862,"column_start":24,"column_end":45},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5299},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/text-input-v3_c_client_api.rs","byte_start":8282656,"byte_end":8282661,"line_start":885,"line_end":885,"column_start":28,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":5307}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8288515,"byte_end":8288522,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5581},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8291455,"byte_end":8291460,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5602},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8292766,"byte_end":8292789,"line_start":142,"line_end":142,"column_start":24,"column_end":47},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5616},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8294328,"byte_end":8294333,"line_start":166,"line_end":166,"column_start":28,"column_end":33},"kind":{"Impl":{"id":212}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":5624}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8296424,"byte_end":8296429,"line_start":212,"line_end":212,"column_start":10,"column_end":15},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8297130,"byte_end":8297134,"line_start":234,"line_end":234,"column_start":10,"column_end":14},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8299004,"byte_end":8299011,"line_start":254,"line_end":254,"column_start":34,"column_end":41},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5658},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8302552,"byte_end":8302557,"line_start":349,"line_end":349,"column_start":34,"column_end":39},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5681},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8304823,"byte_end":8304847,"line_start":418,"line_end":418,"column_start":24,"column_end":48},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5697},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-decoration-v1_c_client_api.rs","byte_start":8306809,"byte_end":8306814,"line_start":435,"line_end":435,"column_start":28,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":5705}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8313132,"byte_end":8313139,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5825},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8315985,"byte_end":8315990,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5846},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8317287,"byte_end":8317301,"line_start":142,"line_end":142,"column_start":24,"column_end":38},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5860},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8318762,"byte_end":8318767,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"kind":{"Impl":{"id":222}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":5868}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8321001,"byte_end":8321008,"line_start":209,"line_end":209,"column_start":34,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5896},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8324088,"byte_end":8324093,"line_start":296,"line_end":296,"column_start":34,"column_end":39},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5917},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8325390,"byte_end":8325404,"line_start":339,"line_end":339,"column_start":24,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5931},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8326743,"byte_end":8326748,"line_start":362,"line_end":362,"column_start":28,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":5939}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8328656,"byte_end":8328663,"line_start":401,"line_end":401,"column_start":34,"column_end":41},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5967},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8330813,"byte_end":8330818,"line_start":462,"line_end":462,"column_start":34,"column_end":39},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5984},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8333342,"byte_end":8333356,"line_start":536,"line_end":536,"column_start":24,"column_end":38},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6001},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8334086,"byte_end":8334091,"line_start":549,"line_end":549,"column_start":28,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8335760,"byte_end":8335767,"line_start":576,"line_end":576,"column_start":34,"column_end":41},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6033},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8338719,"byte_end":8338724,"line_start":656,"line_end":656,"column_start":34,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6053},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8340311,"byte_end":8340325,"line_start":709,"line_end":709,"column_start":24,"column_end":38},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6069},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v1_c_client_api.rs","byte_start":8341430,"byte_end":8341435,"line_start":724,"line_end":724,"column_start":28,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6077}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8347694,"byte_end":8347701,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":6159},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8350580,"byte_end":8350585,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6180},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8351882,"byte_end":8351896,"line_start":142,"line_end":142,"column_start":24,"column_end":38},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":6194},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8353396,"byte_end":8353401,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6202}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8355696,"byte_end":8355703,"line_start":209,"line_end":209,"column_start":34,"column_end":41},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":6230},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8358816,"byte_end":8358821,"line_start":296,"line_end":296,"column_start":34,"column_end":39},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":6251},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8360118,"byte_end":8360132,"line_start":339,"line_end":339,"column_start":24,"column_end":38},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":6265},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8361507,"byte_end":8361512,"line_start":362,"line_end":362,"column_start":28,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6273}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8363446,"byte_end":8363453,"line_start":401,"line_end":401,"column_start":34,"column_end":41},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6301},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8365612,"byte_end":8365617,"line_start":462,"line_end":462,"column_start":34,"column_end":39},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6318},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368141,"byte_end":8368155,"line_start":536,"line_end":536,"column_start":24,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6335},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8368885,"byte_end":8368890,"line_start":549,"line_end":549,"column_start":28,"column_end":33},"kind":{"Impl":{"id":246}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6343}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8370563,"byte_end":8370570,"line_start":576,"line_end":576,"column_start":34,"column_end":41},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6367},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8373522,"byte_end":8373527,"line_start":656,"line_end":656,"column_start":34,"column_end":39},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6387},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8375114,"byte_end":8375128,"line_start":709,"line_end":709,"column_start":24,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6403},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-foreign-v2_c_client_api.rs","byte_start":8376237,"byte_end":8376242,"line_start":724,"line_end":724,"column_start":28,"column_end":33},"kind":{"Impl":{"id":250}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6411}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8380873,"byte_end":8380880,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6482},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8383815,"byte_end":8383820,"line_start":102,"line_end":102,"column_start":34,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6503},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8385122,"byte_end":8385141,"line_start":145,"line_end":145,"column_start":24,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6517},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8386379,"byte_end":8386384,"line_start":168,"line_end":168,"column_start":28,"column_end":33},"kind":{"Impl":{"id":254}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6525}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8388145,"byte_end":8388152,"line_start":207,"line_end":207,"column_start":34,"column_end":41},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6553},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8394137,"byte_end":8394142,"line_start":276,"line_end":276,"column_start":34,"column_end":39},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6570},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8400664,"byte_end":8400676,"line_start":453,"line_end":453,"column_start":24,"column_end":36},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6598},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-output-v1_c_client_api.rs","byte_start":8401327,"byte_end":8401332,"line_start":466,"line_end":466,"column_start":28,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6606}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411027,"byte_end":8411034,"line_start":16,"line_end":16,"column_start":10,"column_end":17},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8411762,"byte_end":8411767,"line_start":39,"line_end":39,"column_start":10,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":7035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8414624,"byte_end":8414631,"line_start":76,"line_end":76,"column_start":34,"column_end":41},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6708},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8421750,"byte_end":8421755,"line_start":251,"line_end":251,"column_start":34,"column_end":39},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":6744},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8423890,"byte_end":8423898,"line_start":318,"line_end":318,"column_start":24,"column_end":32},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":6760},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8427067,"byte_end":8427072,"line_start":358,"line_end":358,"column_start":28,"column_end":33},"kind":{"Impl":{"id":264}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6768}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8431306,"byte_end":8431316,"line_start":447,"line_end":447,"column_start":10,"column_end":20},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8433803,"byte_end":8433808,"line_start":479,"line_end":479,"column_start":10,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8444527,"byte_end":8444534,"line_start":544,"line_end":544,"column_start":34,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6814},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8459027,"byte_end":8459032,"line_start":884,"line_end":884,"column_start":34,"column_end":39},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6881},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8462907,"byte_end":8462917,"line_start":996,"line_end":996,"column_start":24,"column_end":34},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":6902},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8473612,"byte_end":8473617,"line_start":1041,"line_end":1041,"column_start":28,"column_end":33},"kind":{"Impl":{"id":270}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":6910}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8481267,"byte_end":8481274,"line_start":1171,"line_end":1171,"column_start":34,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6976},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8483296,"byte_end":8483301,"line_start":1232,"line_end":1232,"column_start":34,"column_end":39},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6993},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8484883,"byte_end":8484891,"line_start":1285,"line_end":1285,"column_start":24,"column_end":32},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":7009},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v5_c_client_api.rs","byte_start":8485625,"byte_end":8485630,"line_start":1298,"line_end":1298,"column_start":28,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":7017}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8499234,"byte_end":8499239,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":7749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8501451,"byte_end":8501458,"line_start":56,"line_end":56,"column_start":34,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":7216},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8506506,"byte_end":8506511,"line_start":175,"line_end":175,"column_start":34,"column_end":39},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7243},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8508649,"byte_end":8508660,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":7259},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8511144,"byte_end":8511149,"line_start":276,"line_end":276,"column_start":28,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":7267}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8514704,"byte_end":8514709,"line_start":341,"line_end":341,"column_start":10,"column_end":15},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":7776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515372,"byte_end":8515378,"line_start":353,"line_end":353,"column_start":10,"column_end":16},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":7788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8515953,"byte_end":8515960,"line_start":362,"line_end":362,"column_start":10,"column_end":17},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":7894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8519465,"byte_end":8519485,"line_start":371,"line_end":371,"column_start":10,"column_end":30},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":8000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8523849,"byte_end":8523856,"line_start":400,"line_end":400,"column_start":34,"column_end":41},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":7316},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8530897,"byte_end":8530902,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":7356},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8532201,"byte_end":8532217,"line_start":629,"line_end":629,"column_start":24,"column_end":40},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7370},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8536737,"byte_end":8536742,"line_start":654,"line_end":654,"column_start":28,"column_end":33},"kind":{"Impl":{"id":287}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":7378}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8540910,"byte_end":8540915,"line_start":724,"line_end":724,"column_start":10,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":8116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8544864,"byte_end":8544871,"line_start":760,"line_end":760,"column_start":34,"column_end":41},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":7422},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8552123,"byte_end":8552128,"line_start":936,"line_end":936,"column_start":34,"column_end":39},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7456},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8554288,"byte_end":8554301,"line_start":1003,"line_end":1003,"column_start":24,"column_end":37},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7472},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8558618,"byte_end":8558623,"line_start":1040,"line_end":1040,"column_start":28,"column_end":33},"kind":{"Impl":{"id":292}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":7480}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8562182,"byte_end":8562192,"line_start":1126,"line_end":1126,"column_start":10,"column_end":20},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":8134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8564209,"byte_end":8564214,"line_start":1158,"line_end":1158,"column_start":10,"column_end":15},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":8170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8575528,"byte_end":8575535,"line_start":1218,"line_end":1218,"column_start":34,"column_end":41},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7526},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8589374,"byte_end":8589379,"line_start":1536,"line_end":1536,"column_start":34,"column_end":39},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":7592},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8592878,"byte_end":8592892,"line_start":1639,"line_end":1639,"column_start":24,"column_end":38},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":7612},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8604262,"byte_end":8604267,"line_start":1685,"line_end":1685,"column_start":28,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":7620}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8610888,"byte_end":8610893,"line_start":1821,"line_end":1821,"column_start":10,"column_end":15},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":8193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8613687,"byte_end":8613694,"line_start":1841,"line_end":1841,"column_start":34,"column_end":41},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":7689},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8617100,"byte_end":8617105,"line_start":1929,"line_end":1929,"column_start":34,"column_end":39},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7710},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8620763,"byte_end":8620774,"line_start":2037,"line_end":2037,"column_start":24,"column_end":35},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":7731},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell-v6_c_client_api.rs","byte_start":8623624,"byte_end":8623629,"line_start":2052,"line_end":2052,"column_start":28,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":7739}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8628309,"byte_end":8628316,"line_start":19,"line_end":19,"column_start":34,"column_end":41},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":8267},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8631518,"byte_end":8631523,"line_start":109,"line_end":109,"column_start":34,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":8289},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8632838,"byte_end":8632870,"line_start":152,"line_end":152,"column_start":24,"column_end":56},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":8303},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8634983,"byte_end":8634988,"line_start":177,"line_end":177,"column_start":28,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8311}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8636867,"byte_end":8636874,"line_start":219,"line_end":219,"column_start":34,"column_end":41},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":8339},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8638682,"byte_end":8638687,"line_start":277,"line_end":277,"column_start":34,"column_end":39},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":8356},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8639995,"byte_end":8640020,"line_start":320,"line_end":320,"column_start":24,"column_end":49},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":8370},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xwayland-keyboard-grab-v1_c_client_api.rs","byte_start":8640693,"byte_end":8640698,"line_start":333,"line_end":333,"column_start":28,"column_end":33},"kind":{"Impl":{"id":311}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8378}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8648432,"byte_end":8648439,"line_start":22,"line_end":22,"column_start":34,"column_end":41},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":8463},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8652211,"byte_end":8652216,"line_start":122,"line_end":122,"column_start":34,"column_end":39},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":8487},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8653523,"byte_end":8653547,"line_start":165,"line_end":165,"column_start":24,"column_end":48},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":8501},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8655261,"byte_end":8655266,"line_start":199,"line_end":199,"column_start":28,"column_end":33},"kind":{"Impl":{"id":315}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8509}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8658026,"byte_end":8658033,"line_start":260,"line_end":260,"column_start":34,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":8542},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8662248,"byte_end":8662253,"line_start":350,"line_end":350,"column_start":34,"column_end":39},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":8563},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8666477,"byte_end":8666500,"line_start":466,"line_end":466,"column_start":24,"column_end":47},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":8583},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8667422,"byte_end":8667427,"line_start":484,"line_end":484,"column_start":28,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8591}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8669239,"byte_end":8669244,"line_start":524,"line_end":524,"column_start":10,"column_end":15},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":8756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8670032,"byte_end":8670039,"line_start":541,"line_end":541,"column_start":34,"column_end":41},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":8624},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8673256,"byte_end":8673261,"line_start":629,"line_end":629,"column_start":34,"column_end":39},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":8644},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8676445,"byte_end":8676468,"line_start":721,"line_end":721,"column_start":24,"column_end":47},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":8664},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8677371,"byte_end":8677376,"line_start":736,"line_end":736,"column_start":28,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8672}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8679695,"byte_end":8679702,"line_start":774,"line_end":774,"column_start":34,"column_end":41},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":8700},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8682806,"byte_end":8682811,"line_start":861,"line_end":861,"column_start":34,"column_end":39},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":8721},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8685345,"byte_end":8685367,"line_start":935,"line_end":935,"column_start":24,"column_end":46},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":8738},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-data-control-v1_c_client_api.rs","byte_start":8686633,"byte_end":8686638,"line_start":950,"line_end":950,"column_start":28,"column_end":33},"kind":{"Impl":{"id":328}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8746}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8691541,"byte_end":8691548,"line_start":19,"line_end":19,"column_start":34,"column_end":41},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":8830},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8694923,"byte_end":8694928,"line_start":117,"line_end":117,"column_start":34,"column_end":39},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":8852},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8696236,"byte_end":8696261,"line_start":160,"line_end":160,"column_start":24,"column_end":49},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":8866},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8697524,"byte_end":8697529,"line_start":185,"line_end":185,"column_start":28,"column_end":33},"kind":{"Impl":{"id":332}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8874}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8699902,"byte_end":8699907,"line_start":230,"line_end":230,"column_start":10,"column_end":15},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":8980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8700613,"byte_end":8700625,"line_start":252,"line_end":252,"column_start":10,"column_end":22},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":8992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8701403,"byte_end":8701410,"line_start":269,"line_end":269,"column_start":34,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":8908},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8705616,"byte_end":8705621,"line_start":358,"line_end":358,"column_start":34,"column_end":39},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":8925},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8716836,"byte_end":8716859,"line_start":651,"line_end":651,"column_start":24,"column_end":47},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":8963},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-export-dmabuf-v1_c_client_api.rs","byte_start":8717625,"byte_end":8717630,"line_start":664,"line_end":664,"column_start":28,"column_end":33},"kind":{"Impl":{"id":338}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":8971}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8725279,"byte_end":8725286,"line_start":13,"line_end":13,"column_start":34,"column_end":41},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":9086},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8727940,"byte_end":8727945,"line_start":78,"line_end":78,"column_start":34,"column_end":39},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":9103},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8730834,"byte_end":8730862,"line_start":162,"line_end":162,"column_start":24,"column_end":52},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":9121},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8731565,"byte_end":8731570,"line_start":175,"line_end":175,"column_start":28,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9129}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733129,"byte_end":8733134,"line_start":207,"line_end":207,"column_start":10,"column_end":15},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":9273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8733664,"byte_end":8733669,"line_start":226,"line_end":226,"column_start":10,"column_end":15},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":9291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8736686,"byte_end":8736693,"line_start":261,"line_end":261,"column_start":34,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":9160},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8745440,"byte_end":8745445,"line_start":476,"line_end":476,"column_start":34,"column_end":39},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":9202},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8752857,"byte_end":8752884,"line_start":677,"line_end":677,"column_start":24,"column_end":51},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":9232},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-foreign-toplevel-management-v1_c_client_api.rs","byte_start":8756134,"byte_end":8756139,"line_start":711,"line_end":711,"column_start":28,"column_end":33},"kind":{"Impl":{"id":348}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9240}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8762882,"byte_end":8762889,"line_start":18,"line_end":18,"column_start":34,"column_end":41},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":9365},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8765778,"byte_end":8765783,"line_start":99,"line_end":99,"column_start":34,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":9386},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8767091,"byte_end":8767116,"line_start":142,"line_end":142,"column_start":24,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":9400},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8768346,"byte_end":8768351,"line_start":165,"line_end":165,"column_start":28,"column_end":33},"kind":{"Impl":{"id":352}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9408}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8770364,"byte_end":8770369,"line_start":206,"line_end":206,"column_start":10,"column_end":15},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":9495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8771390,"byte_end":8771397,"line_start":223,"line_end":223,"column_start":34,"column_end":41},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":9439},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8774577,"byte_end":8774582,"line_start":305,"line_end":305,"column_start":34,"column_end":39},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":9459},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8777037,"byte_end":8777055,"line_start":382,"line_end":382,"column_start":24,"column_end":42},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":9477},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-gamma-control-v1_c_client_api.rs","byte_start":8778180,"byte_end":8778185,"line_start":397,"line_end":397,"column_start":28,"column_end":33},"kind":{"Impl":{"id":357}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9485}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781312,"byte_end":8781317,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":9676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8781937,"byte_end":8781944,"line_start":32,"line_end":32,"column_start":34,"column_end":41},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":9568},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8784060,"byte_end":8784065,"line_start":94,"line_end":94,"column_start":34,"column_end":39},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":9585},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8785373,"byte_end":8785398,"line_start":137,"line_end":137,"column_start":24,"column_end":49},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":9599},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8786319,"byte_end":8786324,"line_start":157,"line_end":157,"column_start":28,"column_end":33},"kind":{"Impl":{"id":362}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9607}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8788208,"byte_end":8788215,"line_start":188,"line_end":188,"column_start":34,"column_end":41},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":9632},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8790023,"byte_end":8790028,"line_start":246,"line_end":246,"column_start":34,"column_end":39},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":9649},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791331,"byte_end":8791351,"line_start":289,"line_end":289,"column_start":24,"column_end":44},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":9663},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-input-inhibitor-v1_c_client_api.rs","byte_start":8791981,"byte_end":8791986,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"kind":{"Impl":{"id":366}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9671}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8797297,"byte_end":8797302,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":9936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8798253,"byte_end":8798258,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":9954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8799705,"byte_end":8799712,"line_start":65,"line_end":65,"column_start":34,"column_end":41},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":9762},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8803162,"byte_end":8803167,"line_start":160,"line_end":160,"column_start":34,"column_end":39},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":9784},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8804466,"byte_end":8804482,"line_start":203,"line_end":203,"column_start":24,"column_end":40},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":9798},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8806087,"byte_end":8806092,"line_start":227,"line_end":227,"column_start":28,"column_end":33},"kind":{"Impl":{"id":372}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9806}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808120,"byte_end":8808125,"line_start":272,"line_end":272,"column_start":10,"column_end":15},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":9976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8808825,"byte_end":8808831,"line_start":286,"line_end":286,"column_start":10,"column_end":16},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":9994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8814192,"byte_end":8814199,"line_start":319,"line_end":319,"column_start":34,"column_end":41},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":9838},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8823296,"byte_end":8823301,"line_start":529,"line_end":529,"column_start":34,"column_end":39},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":9880},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8826601,"byte_end":8826619,"line_start":628,"line_end":628,"column_start":24,"column_end":42},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":9900},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-layer-shell-v1_c_client_api.rs","byte_start":8832164,"byte_end":8832169,"line_start":655,"line_end":655,"column_start":28,"column_end":33},"kind":{"Impl":{"id":378}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":9908}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8840463,"byte_end":8840470,"line_start":29,"line_end":29,"column_start":34,"column_end":41},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":10163},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8846100,"byte_end":8846105,"line_start":184,"line_end":184,"column_start":34,"column_end":39},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":10194},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8847411,"byte_end":8847434,"line_start":227,"line_end":227,"column_start":24,"column_end":47},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":10208},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8849425,"byte_end":8849430,"line_start":266,"line_end":266,"column_start":28,"column_end":33},"kind":{"Impl":{"id":382}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":10216}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8852669,"byte_end":8852674,"line_start":339,"line_end":339,"column_start":10,"column_end":15},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":10322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853096,"byte_end":8853101,"line_start":352,"line_end":352,"column_start":10,"column_end":15},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":10337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8853976,"byte_end":8853983,"line_start":368,"line_end":368,"column_start":34,"column_end":41},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":10255},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8858039,"byte_end":8858044,"line_start":463,"line_end":463,"column_start":34,"column_end":39},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":10275},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8864320,"byte_end":8864341,"line_start":639,"line_end":639,"column_start":24,"column_end":45},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":10302},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/wlr-screencopy-v1_c_client_api.rs","byte_start":8865378,"byte_end":8865383,"line_start":654,"line_end":654,"column_start":28,"column_end":33},"kind":{"Impl":{"id":388}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":10310}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8870823,"byte_end":8870828,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":10621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8872137,"byte_end":8872144,"line_start":39,"line_end":39,"column_start":34,"column_end":41},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":10491},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8876538,"byte_end":8876543,"line_start":126,"line_end":126,"column_start":34,"column_end":39},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":10512},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8878697,"byte_end":8878711,"line_start":193,"line_end":193,"column_start":24,"column_end":38},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":10528},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8880308,"byte_end":8880313,"line_start":217,"line_end":217,"column_start":28,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":10536}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884192,"byte_end":8884196,"line_start":268,"line_end":268,"column_start":10,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":10636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8884638,"byte_end":8884645,"line_start":283,"line_end":283,"column_start":34,"column_end":41},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":10568},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8888774,"byte_end":8888779,"line_start":339,"line_end":339,"column_start":34,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":10582},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8894659,"byte_end":8894681,"line_start":500,"line_end":500,"column_start":24,"column_end":46},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":10608},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/presentation-time_c_client_api.rs","byte_start":8895050,"byte_end":8895055,"line_start":510,"line_end":510,"column_start":28,"column_end":33},"kind":{"Impl":{"id":398}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":10616}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8908583,"byte_end":8908588,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":11293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8910796,"byte_end":8910803,"line_start":56,"line_end":56,"column_start":34,"column_end":41},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":10758},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8915932,"byte_end":8915937,"line_start":179,"line_end":179,"column_start":34,"column_end":39},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":10785},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8918073,"byte_end":8918082,"line_start":246,"line_end":246,"column_start":24,"column_end":33},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":10801},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8920530,"byte_end":8920535,"line_start":280,"line_end":280,"column_start":28,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":10809}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924042,"byte_end":8924047,"line_start":345,"line_end":345,"column_start":10,"column_end":15},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":11320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8924592,"byte_end":8924598,"line_start":369,"line_end":369,"column_start":10,"column_end":16},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":11332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8925488,"byte_end":8925495,"line_start":401,"line_end":401,"column_start":10,"column_end":17},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":11368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8929564,"byte_end":8929584,"line_start":421,"line_end":421,"column_start":10,"column_end":30},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":11404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8933634,"byte_end":8933641,"line_start":450,"line_end":450,"column_start":34,"column_end":41},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":10858},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8940682,"byte_end":8940687,"line_start":636,"line_end":636,"column_start":34,"column_end":39},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":10898},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8941983,"byte_end":8941996,"line_start":679,"line_end":679,"column_start":24,"column_end":37},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":10912},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8946194,"byte_end":8946199,"line_start":704,"line_end":704,"column_start":28,"column_end":33},"kind":{"Impl":{"id":411}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":10920}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8950735,"byte_end":8950740,"line_start":774,"line_end":774,"column_start":10,"column_end":15},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":11520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8955061,"byte_end":8955068,"line_start":810,"line_end":810,"column_start":34,"column_end":41},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":10964},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8962445,"byte_end":8962450,"line_start":989,"line_end":989,"column_start":34,"column_end":39},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":10999},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8964607,"byte_end":8964617,"line_start":1056,"line_end":1056,"column_start":24,"column_end":34},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":11015},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8969239,"byte_end":8969244,"line_start":1091,"line_end":1091,"column_start":28,"column_end":33},"kind":{"Impl":{"id":416}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":11023}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8973089,"byte_end":8973099,"line_start":1175,"line_end":1175,"column_start":10,"column_end":20},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":11539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8976162,"byte_end":8976167,"line_start":1215,"line_end":1215,"column_start":10,"column_end":15},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":11575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":8989936,"byte_end":8989943,"line_start":1279,"line_end":1279,"column_start":34,"column_end":41},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":11070},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9003782,"byte_end":9003787,"line_start":1597,"line_end":1597,"column_start":34,"column_end":39},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":11136},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9007283,"byte_end":9007294,"line_start":1700,"line_end":1700,"column_start":24,"column_end":35},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":11156},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9020917,"byte_end":9020922,"line_start":1745,"line_end":1745,"column_start":28,"column_end":33},"kind":{"Impl":{"id":422}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":11164}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9027410,"byte_end":9027415,"line_start":1878,"line_end":1878,"column_start":10,"column_end":15},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":11610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9030209,"byte_end":9030216,"line_start":1898,"line_end":1898,"column_start":34,"column_end":41},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":11233},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9033622,"byte_end":9033627,"line_start":1986,"line_end":1986,"column_start":34,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":11254},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9037282,"byte_end":9037290,"line_start":2094,"line_end":2094,"column_start":24,"column_end":32},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":11275},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/xdg-shell_c_client_api.rs","byte_start":9040132,"byte_end":9040137,"line_start":2109,"line_end":2109,"column_start":28,"column_end":33},"kind":{"Impl":{"id":427}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":11283}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9044046,"byte_end":9044051,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":11818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9045113,"byte_end":9045120,"line_start":35,"line_end":35,"column_start":34,"column_end":41},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":11684},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9047998,"byte_end":9048003,"line_start":117,"line_end":117,"column_start":34,"column_end":39},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":11705},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9049298,"byte_end":9049310,"line_start":160,"line_end":160,"column_start":24,"column_end":36},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":11719},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9050646,"byte_end":9050651,"line_start":183,"line_end":183,"column_start":28,"column_end":33},"kind":{"Impl":{"id":432}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":11727}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9055422,"byte_end":9055427,"line_start":230,"line_end":230,"column_start":10,"column_end":15},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":11830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9057329,"byte_end":9057336,"line_start":257,"line_end":257,"column_start":34,"column_end":41},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":11758},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9061531,"byte_end":9061536,"line_start":374,"line_end":374,"column_start":34,"column_end":39},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":11785},"to":{"krate":21,"index":243}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9062829,"byte_end":9062839,"line_start":417,"line_end":417,"column_start":24,"column_end":34},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":11799},"to":{"krate":21,"index":256}},{"span":{"file_name":"/home/clozed/astrorust/Astrorust/target/rls/debug/build/wayland-protocols-eac760b7cba6229b/out/viewporter_c_client_api.rs","byte_start":9064651,"byte_end":9064656,"line_start":434,"line_end":434,"column_start":28,"column_end":33},"kind":{"Impl":{"id":437}},"from":{"krate":15,"index":140},"to":{"krate":0,"index":11807}}]}